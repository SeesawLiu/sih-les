//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace com.Sconit.Service.BatchJob.FISService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FISServiceSoap", Namespace="http://com.Sconit.WebService.FIS.FISService/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityBase))]
    public partial class FISService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FISService() {
            this.Url = global::com.Sconit.Service.BatchJob.Properties.Settings.Default.com_Sconit_Service_BatchJob_FISService_FISService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateLogCompletedEventHandler CreateLogCompleted;
        
        /// <remarks/>
        public event UpdateLogCompletedEventHandler UpdateLogCompleted;
        
        /// <remarks/>
        public event ExportCompletedEventHandler ExportCompleted;
        
        /// <remarks/>
        public event TestExportCompletedEventHandler TestExportCompleted;
        
        /// <remarks/>
        public event ImportCompletedEventHandler ImportCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/CreateLog", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateLog(LesINLog lesINLog) {
            this.Invoke("CreateLog", new object[] {
                        lesINLog});
        }
        
        /// <remarks/>
        public void CreateLogAsync(LesINLog lesINLog) {
            this.CreateLogAsync(lesINLog, null);
        }
        
        /// <remarks/>
        public void CreateLogAsync(LesINLog lesINLog, object userState) {
            if ((this.CreateLogOperationCompleted == null)) {
                this.CreateLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLogOperationCompleted);
            }
            this.InvokeAsync("CreateLog", new object[] {
                        lesINLog}, this.CreateLogOperationCompleted, userState);
        }
        
        private void OnCreateLogOperationCompleted(object arg) {
            if ((this.CreateLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/UpdateLog", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLog(LesINLog lesINLog) {
            this.Invoke("UpdateLog", new object[] {
                        lesINLog});
        }
        
        /// <remarks/>
        public void UpdateLogAsync(LesINLog lesINLog) {
            this.UpdateLogAsync(lesINLog, null);
        }
        
        /// <remarks/>
        public void UpdateLogAsync(LesINLog lesINLog, object userState) {
            if ((this.UpdateLogOperationCompleted == null)) {
                this.UpdateLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogOperationCompleted);
            }
            this.InvokeAsync("UpdateLog", new object[] {
                        lesINLog}, this.UpdateLogOperationCompleted, userState);
        }
        
        private void OnUpdateLogOperationCompleted(object arg) {
            if ((this.UpdateLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/Export", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Export(string[] systemCodeList, string userCode) {
            this.Invoke("Export", new object[] {
                        systemCodeList,
                        userCode});
        }
        
        /// <remarks/>
        public void ExportAsync(string[] systemCodeList, string userCode) {
            this.ExportAsync(systemCodeList, userCode, null);
        }
        
        /// <remarks/>
        public void ExportAsync(string[] systemCodeList, string userCode, object userState) {
            if ((this.ExportOperationCompleted == null)) {
                this.ExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportOperationCompleted);
            }
            this.InvokeAsync("Export", new object[] {
                        systemCodeList,
                        userCode}, this.ExportOperationCompleted, userState);
        }
        
        private void OnExportOperationCompleted(object arg) {
            if ((this.ExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/TestExport", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestExport(string systemCode, string userCode) {
            this.Invoke("TestExport", new object[] {
                        systemCode,
                        userCode});
        }
        
        /// <remarks/>
        public void TestExportAsync(string systemCode, string userCode) {
            this.TestExportAsync(systemCode, userCode, null);
        }
        
        /// <remarks/>
        public void TestExportAsync(string systemCode, string userCode, object userState) {
            if ((this.TestExportOperationCompleted == null)) {
                this.TestExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExportOperationCompleted);
            }
            this.InvokeAsync("TestExport", new object[] {
                        systemCode,
                        userCode}, this.TestExportOperationCompleted, userState);
        }
        
        private void OnTestExportOperationCompleted(object arg) {
            if ((this.TestExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/Import", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Import(string userCode) {
            this.Invoke("Import", new object[] {
                        userCode});
        }
        
        /// <remarks/>
        public void ImportAsync(string userCode) {
            this.ImportAsync(userCode, null);
        }
        
        /// <remarks/>
        public void ImportAsync(string userCode, object userState) {
            if ((this.ImportOperationCompleted == null)) {
                this.ImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportOperationCompleted);
            }
            this.InvokeAsync("Import", new object[] {
                        userCode}, this.ImportOperationCompleted, userState);
        }
        
        private void OnImportOperationCompleted(object arg) {
            if ((this.ImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.Sconit.WebService.FIS.FISService/UploadFile", RequestNamespace="http://com.Sconit.WebService.FIS.FISService/", ResponseNamespace="http://com.Sconit.WebService.FIS.FISService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadFile() {
            this.Invoke("UploadFile", new object[0]);
        }
        
        /// <remarks/>
        public void UploadFileAsync() {
            this.UploadFileAsync(null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[0], this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.FIS.FISService/")]
    public partial class LesINLog : EntityBase {
        
        private int idField;
        
        private string typeField;
        
        private string moveTypeField;
        
        private string sequenseField;
        
        private string poField;
        
        private string pOLineField;
        
        private string wMSNoField;
        
        private string wMSLineField;
        
        private System.DateTime handTimeField;
        
        private string itemField;
        
        private string handResultField;
        
        private string errorCauseField;
        
        private bool isCreateDatField;
        
        private string fileNameField;
        
        private string aSNNoField;
        
        private string extNoField;
        
        private System.Nullable<decimal> qtyField;
        
        private System.Nullable<bool> qtyMarkField;
        
        private System.Nullable<System.DateTime> uploadDateField;
        
        private string lesFileNameField;
        
        private decimal shipQtyField;
        
        private decimal receivedQtyField;
        
        private string locToField;
        
        private string receiptStatusField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string MoveType {
            get {
                return this.moveTypeField;
            }
            set {
                this.moveTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Sequense {
            get {
                return this.sequenseField;
            }
            set {
                this.sequenseField = value;
            }
        }
        
        /// <remarks/>
        public string PO {
            get {
                return this.poField;
            }
            set {
                this.poField = value;
            }
        }
        
        /// <remarks/>
        public string POLine {
            get {
                return this.pOLineField;
            }
            set {
                this.pOLineField = value;
            }
        }
        
        /// <remarks/>
        public string WMSNo {
            get {
                return this.wMSNoField;
            }
            set {
                this.wMSNoField = value;
            }
        }
        
        /// <remarks/>
        public string WMSLine {
            get {
                return this.wMSLineField;
            }
            set {
                this.wMSLineField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime HandTime {
            get {
                return this.handTimeField;
            }
            set {
                this.handTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public string HandResult {
            get {
                return this.handResultField;
            }
            set {
                this.handResultField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorCause {
            get {
                return this.errorCauseField;
            }
            set {
                this.errorCauseField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCreateDat {
            get {
                return this.isCreateDatField;
            }
            set {
                this.isCreateDatField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string ASNNo {
            get {
                return this.aSNNoField;
            }
            set {
                this.aSNNoField = value;
            }
        }
        
        /// <remarks/>
        public string ExtNo {
            get {
                return this.extNoField;
            }
            set {
                this.extNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> QtyMark {
            get {
                return this.qtyMarkField;
            }
            set {
                this.qtyMarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UploadDate {
            get {
                return this.uploadDateField;
            }
            set {
                this.uploadDateField = value;
            }
        }
        
        /// <remarks/>
        public string LesFileName {
            get {
                return this.lesFileNameField;
            }
            set {
                this.lesFileNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ShipQty {
            get {
                return this.shipQtyField;
            }
            set {
                this.shipQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReceivedQty {
            get {
                return this.receivedQtyField;
            }
            set {
                this.receivedQtyField = value;
            }
        }
        
        /// <remarks/>
        public string LocTo {
            get {
                return this.locToField;
            }
            set {
                this.locToField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptStatus {
            get {
                return this.receiptStatusField;
            }
            set {
                this.receiptStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LesINLog))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.Sconit.WebService.FIS.FISService/")]
    public partial class EntityBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestExportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591