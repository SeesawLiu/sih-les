/*
Deployment script for Database
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar Path1 "G:\Database\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\Log\"
:setvar Path2 "G:\Database\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DatabaseName "Database"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
USE [master]
GO
IF (DB_ID(N'$(DatabaseName)') IS NOT NULL
    AND DATABASEPROPERTYEX(N'$(DatabaseName)','Status') <> N'ONLINE')
BEGIN
    RAISERROR(N'The state of the target database, %s, is not set to ONLINE. To deploy to this database, its state must be set to ONLINE.', 16, 127,N'$(DatabaseName)') WITH NOWAIT
    RETURN
END

GO
IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [sconit5], FILENAME = '$(Path2)$(DatabaseName).mdf', FILEGROWTH = 102400 KB)
    LOG ON (NAME = [sconit5_log], FILENAME = '$(Path1)$(DatabaseName)_log.ldf', MAXSIZE = 2097152 MB, FILEGROWTH = 102400 KB) COLLATE Chinese_PRC_CI_AS
GO
EXECUTE sp_dbcmptlevel [$(DatabaseName)], 100;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)]
GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GO
PRINT N'Creating [sconit]...';


GO
CREATE USER [sconit] WITHOUT LOGIN;


GO
PRINT N'Creating [MStran_PAL_role]...';


GO
CREATE ROLE [MStran_PAL_role]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [dbo].[ACC_Permission]...';


GO
CREATE TABLE [dbo].[ACC_Permission] (
    [Id]       INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]     VARCHAR (50)  NOT NULL,
    [Desc1]    VARCHAR (100) NOT NULL,
    [Category] VARCHAR (50)  NOT NULL
);


GO
PRINT N'Creating PK_ACC_PERMISSION...';


GO
ALTER TABLE [dbo].[ACC_Permission]
    ADD CONSTRAINT [PK_ACC_PERMISSION] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_Permission].[IX_Permission]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Permission]
    ON [dbo].[ACC_Permission]([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ACC_PermissionCategory]...';


GO
CREATE TABLE [dbo].[ACC_PermissionCategory] (
    [Code]  VARCHAR (50)  NOT NULL,
    [Desc1] VARCHAR (100) NOT NULL,
    [Type]  TINYINT       NOT NULL
);


GO
PRINT N'Creating PK_ACC_PERMISSIONCATEGORY...';


GO
ALTER TABLE [dbo].[ACC_PermissionCategory]
    ADD CONSTRAINT [PK_ACC_PERMISSIONCATEGORY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_PermissionGroup]...';


GO
CREATE TABLE [dbo].[ACC_PermissionGroup] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_PERMISSIONGROUP...';


GO
ALTER TABLE [dbo].[ACC_PermissionGroup]
    ADD CONSTRAINT [PK_ACC_PERMISSIONGROUP] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_PermissionGroup].[Index_1]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [Index_1]
    ON [dbo].[ACC_PermissionGroup]([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ACC_PermissionGroupPermission]...';


GO
CREATE TABLE [dbo].[ACC_PermissionGroupPermission] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [GroupId]          INT           NOT NULL,
    [PermissionId]     INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_PERMISSIONGROUPPERMISSI...';


GO
ALTER TABLE [dbo].[ACC_PermissionGroupPermission]
    ADD CONSTRAINT [PK_ACC_PERMISSIONGROUPPERMISSI] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_Role]...';


GO
CREATE TABLE [dbo].[ACC_Role] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_ROLE...';


GO
ALTER TABLE [dbo].[ACC_Role]
    ADD CONSTRAINT [PK_ACC_ROLE] PRIMARY KEY NONCLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ACC_Role].[Index_1]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [Index_1]
    ON [dbo].[ACC_Role]([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ACC_RolePermission]...';


GO
CREATE TABLE [dbo].[ACC_RolePermission] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [RoleId]           INT           NOT NULL,
    [PermissionId]     INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_ROLEPERMISSION...';


GO
ALTER TABLE [dbo].[ACC_RolePermission]
    ADD CONSTRAINT [PK_ACC_ROLEPERMISSION] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_RolePermissionGroup]...';


GO
CREATE TABLE [dbo].[ACC_RolePermissionGroup] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [RoleId]           INT           NOT NULL,
    [GroupId]          INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_ROLEPERMISSIONGROUP...';


GO
ALTER TABLE [dbo].[ACC_RolePermissionGroup]
    ADD CONSTRAINT [PK_ACC_ROLEPERMISSIONGROUP] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_User]...';


GO
CREATE TABLE [dbo].[ACC_User] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]             VARCHAR (50)  NOT NULL,
    [Password]         VARCHAR (50)  NOT NULL,
    [FirstName]        VARCHAR (50)  NOT NULL,
    [LastName]         VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [Email]            VARCHAR (50)  NULL,
    [TelPhone]         VARCHAR (50)  NULL,
    [MobilePhone]      VARCHAR (50)  NULL,
    [Language]         VARCHAR (50)  NULL,
    [IsActive]         BIT           NOT NULL,
    [AccountExpired]   BIT           NOT NULL,
    [AccountLocked]    BIT           NOT NULL,
    [PasswordExpired]  BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_USER...';


GO
ALTER TABLE [dbo].[ACC_User]
    ADD CONSTRAINT [PK_ACC_USER] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_User].[Index_1]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [Index_1]
    ON [dbo].[ACC_User]([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ACC_UserFav]...';


GO
CREATE TABLE [dbo].[ACC_UserFav] (
    [Id]     INT          IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [UserId] INT          NOT NULL,
    [Menu]   VARCHAR (50) NULL
);


GO
PRINT N'Creating PK_ACC_USERFAV...';


GO
ALTER TABLE [dbo].[ACC_UserFav]
    ADD CONSTRAINT [PK_ACC_USERFAV] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_UserPermission]...';


GO
CREATE TABLE [dbo].[ACC_UserPermission] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [UserId]           INT           NOT NULL,
    [PermissionId]     INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_USERPERMISSION...';


GO
ALTER TABLE [dbo].[ACC_UserPermission]
    ADD CONSTRAINT [PK_ACC_USERPERMISSION] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_UserPermissionGroup]...';


GO
CREATE TABLE [dbo].[ACC_UserPermissionGroup] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [UserId]           INT           NOT NULL,
    [GroupId]          INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_USERPERMISSIONGROUP...';


GO
ALTER TABLE [dbo].[ACC_UserPermissionGroup]
    ADD CONSTRAINT [PK_ACC_USERPERMISSIONGROUP] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ACC_UserRole]...';


GO
CREATE TABLE [dbo].[ACC_UserRole] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [UserId]           INT           NOT NULL,
    [RoleId]           INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ACC_USERROLE...';


GO
ALTER TABLE [dbo].[ACC_UserRole]
    ADD CONSTRAINT [PK_ACC_USERROLE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BAT_Job]...';


GO
CREATE TABLE [dbo].[BAT_Job] (
    [Id]          INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Name]        VARCHAR (100) NOT NULL,
    [Desc1]       VARCHAR (256) NOT NULL,
    [ServiceType] VARCHAR (256) NOT NULL
);


GO
PRINT N'Creating PK_BAT_JOB...';


GO
ALTER TABLE [dbo].[BAT_Job]
    ADD CONSTRAINT [PK_BAT_JOB] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BAT_JobParam]...';


GO
CREATE TABLE [dbo].[BAT_JobParam] (
    [Id]         INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [JobId]      INT           NOT NULL,
    [ParamKey]   VARCHAR (50)  NOT NULL,
    [ParamValue] VARCHAR (256) NOT NULL
);


GO
PRINT N'Creating PK_BAT_JOBPARAM...';


GO
ALTER TABLE [dbo].[BAT_JobParam]
    ADD CONSTRAINT [PK_BAT_JOBPARAM] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BAT_RunLog]...';


GO
CREATE TABLE [dbo].[BAT_RunLog] (
    [Id]        INT            IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [JobId]     INT            NOT NULL,
    [TriggerId] INT            NOT NULL,
    [StartTime] DATETIME       NOT NULL,
    [EndTime]   DATETIME       NULL,
    [Status]    TINYINT        NOT NULL,
    [Message]   VARCHAR (2000) NULL
);


GO
PRINT N'Creating PK_BAT_RUNLOG...';


GO
ALTER TABLE [dbo].[BAT_RunLog]
    ADD CONSTRAINT [PK_BAT_RUNLOG] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BAT_Trigger]...';


GO
CREATE TABLE [dbo].[BAT_Trigger] (
    [Id]             INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [JobId]          INT           NOT NULL,
    [Name]           VARCHAR (100) NOT NULL,
    [Desc1]          VARCHAR (256) NOT NULL,
    [PrevFireTime]   DATETIME      NULL,
    [NextFireTime]   DATETIME      NULL,
    [RepeatCount]    INT           NOT NULL,
    [Interval]       INT           NOT NULL,
    [IntervalType]   TINYINT       NOT NULL,
    [TimesTriggered] INT           NOT NULL,
    [Status]         TINYINT       NOT NULL
);


GO
PRINT N'Creating PK_BAT_TRIGGER...';


GO
ALTER TABLE [dbo].[BAT_Trigger]
    ADD CONSTRAINT [PK_BAT_TRIGGER] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BAT_TriggerParam]...';


GO
CREATE TABLE [dbo].[BAT_TriggerParam] (
    [Id]         INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [TriggerId]  INT           NOT NULL,
    [ParamKey]   VARCHAR (50)  NOT NULL,
    [ParamValue] VARCHAR (256) NOT NULL
);


GO
PRINT N'Creating PK_BAT_TRIGGERPARAM...';


GO
ALTER TABLE [dbo].[BAT_TriggerParam]
    ADD CONSTRAINT [PK_BAT_TRIGGERPARAM] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_ActBill]...';


GO
CREATE TABLE [dbo].[BIL_ActBill] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [PlanBill]         INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [ExtIpNo]          VARCHAR (50)    NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [ExtRecNo]         VARCHAR (50)    NULL,
    [Type]             TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [BillAddr]         VARCHAR (50)    NOT NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [Party]            VARCHAR (50)    NOT NULL,
    [PartyNm]          VARCHAR (100)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [Currency]         VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NOT NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillAmount]       DECIMAL (18, 8) NOT NULL,
    [BilledAmount]     DECIMAL (18, 8) NOT NULL,
    [VoidAmount]       DECIMAL (18, 8) NOT NULL,
    [BillQty]          DECIMAL (18, 8) NOT NULL,
    [BilledQty]        DECIMAL (18, 8) NOT NULL,
    [VoidQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [EffDate]          DATETIME        NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BillTerm]         TINYINT         NOT NULL
);


GO
PRINT N'Creating PK_BIL_ACTBILL...';


GO
ALTER TABLE [dbo].[BIL_ActBill]
    ADD CONSTRAINT [PK_BIL_ACTBILL] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_BillDet]...';


GO
CREATE TABLE [dbo].[BIL_BillDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [BillNo]           VARCHAR (50)    NOT NULL,
    [ActBill]          INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [PriceList]        VARCHAR (50)    NOT NULL,
    [Amount]           DECIMAL (18, 8) NOT NULL,
    [UnitPrice]        DECIMAL (18, 8) NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [ExtIpNo]          VARCHAR (50)    NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [ExtRecNo]         VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL
);


GO
PRINT N'Creating PK_BIL_BILLDET...';


GO
ALTER TABLE [dbo].[BIL_BillDet]
    ADD CONSTRAINT [PK_BIL_BILLDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_BillMstr]...';


GO
CREATE TABLE [dbo].[BIL_BillMstr] (
    [BillNo]           VARCHAR (50)  NOT NULL,
    [ExtBillNo]        VARCHAR (50)  NULL,
    [RefBillNo]        VARCHAR (50)  NULL,
    [Type]             TINYINT       NOT NULL,
    [SubType]          TINYINT       NOT NULL,
    [Status]           TINYINT       NOT NULL,
    [BillAddr]         VARCHAR (50)  NOT NULL,
    [BillAddrDesc]     VARCHAR (256) NULL,
    [Party]            VARCHAR (50)  NOT NULL,
    [PartyNm]          VARCHAR (100) NULL,
    [Currency]         VARCHAR (50)  NOT NULL,
    [IsIncludeTax]     BIT           NOT NULL,
    [Tax]              VARCHAR (50)  NULL,
    [EffDate]          DATETIME      NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL
);


GO
PRINT N'Creating PK_BIL_BILLMSTR...';


GO
ALTER TABLE [dbo].[BIL_BillMstr]
    ADD CONSTRAINT [PK_BIL_BILLMSTR] PRIMARY KEY CLUSTERED ([BillNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_BillTrans]...';


GO
CREATE TABLE [dbo].[BIL_BillTrans] (
    [Id]           INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]      VARCHAR (50)    NOT NULL,
    [IpNo]         VARCHAR (50)    NULL,
    [ExtIpNo]      VARCHAR (50)    NULL,
    [RecNo]        VARCHAR (50)    NULL,
    [ExtRecNo]     VARCHAR (50)    NULL,
    [IsIncludeTax] BIT             NOT NULL,
    [Item]         VARCHAR (50)    NOT NULL,
    [ItemDesc]     VARCHAR (100)   NOT NULL,
    [Uom]          VARCHAR (5)     NOT NULL,
    [UC]           DECIMAL (18, 8) NOT NULL,
    [HuId]         VARCHAR (50)    NULL,
    [TransType]    TINYINT         NOT NULL,
    [BillAddr]     VARCHAR (50)    NOT NULL,
    [BillAddrDesc] VARCHAR (256)   NULL,
    [Party]        VARCHAR (50)    NOT NULL,
    [PartyNm]      VARCHAR (100)   NULL,
    [PriceList]    VARCHAR (50)    NULL,
    [Currency]     VARCHAR (50)    NULL,
    [UnitPrice]    DECIMAL (18, 8) NOT NULL,
    [IsProvEst]    BIT             NOT NULL,
    [Tax]          VARCHAR (50)    NULL,
    [BillQty]      DECIMAL (18, 8) NOT NULL,
    [BillAmount]   DECIMAL (18, 8) NOT NULL,
    [UnitQty]      DECIMAL (18, 8) NOT NULL,
    [LocFrom]      VARCHAR (50)    NULL,
    [SettleLoc]    VARCHAR (50)    NULL,
    [EffDate]      DATETIME        NOT NULL,
    [PlanBill]     INT             NULL,
    [ActBill]      INT             NULL,
    [CreateUser]   INT             NOT NULL,
    [CreateUserNm] VARCHAR (100)   NOT NULL,
    [CreateDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_BIL_BILLTRANS...';


GO
ALTER TABLE [dbo].[BIL_BillTrans]
    ADD CONSTRAINT [PK_BIL_BILLTRANS] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_PlanBill]...';


GO
CREATE TABLE [dbo].[BIL_PlanBill] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [ExtIpNo]          VARCHAR (50)    NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [ExtRecNo]         VARCHAR (50)    NULL,
    [Type]             TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [BillTerm]         TINYINT         NOT NULL,
    [BillAddr]         VARCHAR (50)    NOT NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [Party]            VARCHAR (50)    NOT NULL,
    [PartyNm]          VARCHAR (100)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [Currency]         VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NOT NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [PlanAmount]       DECIMAL (18, 8) NOT NULL,
    [ActAmount]        DECIMAL (18, 8) NOT NULL,
    [VoidAmount]       DECIMAL (18, 8) NOT NULL,
    [PlanQty]          DECIMAL (18, 8) NOT NULL,
    [ActQty]           DECIMAL (18, 8) NOT NULL,
    [VoidQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [EffDate]          DATETIME        NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL
);


GO
PRINT N'Creating PK_BIL_PLANBILL...';


GO
ALTER TABLE [dbo].[BIL_PlanBill]
    ADD CONSTRAINT [PK_BIL_PLANBILL] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_PriceListDet]...';


GO
CREATE TABLE [dbo].[BIL_PriceListDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [PriceList]        VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [StartDate]        DATETIME        NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [EndDate]          DATETIME        NULL,
    [UnitPrice]        DECIMAL (18, 8) NOT NULL,
    [IsProvEst]        BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_BIL_PRICELISTDET...';


GO
ALTER TABLE [dbo].[BIL_PriceListDet]
    ADD CONSTRAINT [PK_BIL_PRICELISTDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[BIL_PriceListMstr]...';


GO
CREATE TABLE [dbo].[BIL_PriceListMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [Party]            VARCHAR (50)  NOT NULL,
    [Currency]         VARCHAR (50)  NOT NULL,
    [IsIncludeTax]     BIT           NOT NULL,
    [Tax]              VARCHAR (50)  NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_BIL_PRICELISTMSTR...';


GO
ALTER TABLE [dbo].[BIL_PriceListMstr]
    ADD CONSTRAINT [PK_BIL_PRICELISTMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_CabOut]...';


GO
CREATE TABLE [dbo].[CUST_CabOut] (
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [ProdLine]         VARCHAR (50)  NOT NULL,
    [CabType]          TINYINT       NOT NULL,
    [CabItem]          VARCHAR (50)  NOT NULL,
    [QulityBarcode]    VARCHAR (50)  NULL,
    [Status]           TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [OutUser]          INT           NULL,
    [OutUserNm]        VARCHAR (100) NULL,
    [OutDate]          DATETIME      NULL,
    [TransferUser]     INT           NULL,
    [TransferUserNm]   VARCHAR (100) NULL,
    [TransferDate]     DATETIME      NULL
);


GO
PRINT N'Creating PK_CUST_CabOut...';


GO
ALTER TABLE [dbo].[CUST_CabOut]
    ADD CONSTRAINT [PK_CUST_CabOut] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_CRSL]...';


GO
CREATE TABLE [dbo].[CUST_CRSL] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [Seq]              INT             NULL,
    [Item]             VARCHAR (50)    NULL,
    [EBELN]            VARCHAR (50)    NULL,
    [EBELP]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NULL,
    [Status]           TINYINT         NULL,
    [ErrorCount]       INT             NULL,
    [ErrorMessage]     VARCHAR (255)   NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_CUST_CRSL...';


GO
ALTER TABLE [dbo].[CUST_CRSL]
    ADD CONSTRAINT [PK_CUST_CRSL] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_DefectCode]...';


GO
CREATE TABLE [dbo].[CUST_DefectCode] (
    [Code]                VARCHAR (50)  NOT NULL,
    [Desc1]               VARCHAR (50)  NULL,
    [ProductCode]         VARCHAR (50)  NULL,
    [Assemblies]          VARCHAR (50)  NULL,
    [ComponentDefectCode] VARCHAR (50)  NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_DEFECTCODE...';


GO
ALTER TABLE [dbo].[CUST_DefectCode]
    ADD CONSTRAINT [PK_CUST_DEFECTCODE] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_DeferredFeedCounter]...';


GO
CREATE TABLE [dbo].[CUST_DeferredFeedCounter] (
    [Flow]             VARCHAR (50)  NOT NULL,
    [Counter]          INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_DEFERREDFEEDCOUNTER...';


GO
ALTER TABLE [dbo].[CUST_DeferredFeedCounter]
    ADD CONSTRAINT [PK_CUST_DEFERREDFEEDCOUNTER] PRIMARY KEY CLUSTERED ([Flow] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_FailCode]...';


GO
CREATE TABLE [dbo].[CUST_FailCode] (
    [Code]             VARCHAR (50)  NOT NULL,
    [CHNDesc]          VARCHAR (50)  NULL,
    [ENGDesc]          VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_FAILCODE...';


GO
ALTER TABLE [dbo].[CUST_FailCode]
    ADD CONSTRAINT [PK_CUST_FAILCODE] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ItemAverage]...';


GO
CREATE TABLE [dbo].[CUST_ItemAverage] (
    [Item]             VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_ITEMAVERAGE...';


GO
ALTER TABLE [dbo].[CUST_ItemAverage]
    ADD CONSTRAINT [PK_CUST_ITEMAVERAGE] PRIMARY KEY CLUSTERED ([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ItemTrace]...';


GO
CREATE TABLE [dbo].[CUST_ItemTrace] (
    [Item]             VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_ITEMTRACE...';


GO
ALTER TABLE [dbo].[CUST_ItemTrace]
    ADD CONSTRAINT [PK_CUST_ITEMTRACE] PRIMARY KEY CLUSTERED ([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ManualGenOrderTrace]...';


GO
CREATE TABLE [dbo].[CUST_ManualGenOrderTrace] (
    [ProdOrderNo] VARCHAR (50) NOT NULL,
    [OrderNo]     VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating PK_CUST_ManualGenOrderTrace...';


GO
ALTER TABLE [dbo].[CUST_ManualGenOrderTrace]
    ADD CONSTRAINT [PK_CUST_ManualGenOrderTrace] PRIMARY KEY CLUSTERED ([ProdOrderNo] ASC, [OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_MiscOrderMoveType]...';


GO
CREATE TABLE [dbo].[CUST_MiscOrderMoveType] (
    [Id]                    INT          IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [IOType]                TINYINT      NOT NULL,
    [MoveType]              VARCHAR (5)  NOT NULL,
    [CancelMoveType]        VARCHAR (5)  NOT NULL,
    [Desc1]                 VARCHAR (50) NOT NULL,
    [CheckRecLoc]           BIT          NOT NULL,
    [CheckNote]             BIT          NOT NULL,
    [CheckCostCenter]       BIT          NOT NULL,
    [CheckAsn]              BIT          NOT NULL,
    [CheckReserveNo]        BIT          NOT NULL,
    [CheckReserveLine]      BIT          NOT NULL,
    [CheckRefNo]            BIT          NOT NULL,
    [CheckDeliverRegion]    BIT          NOT NULL,
    [CheckWBS]              BIT          NOT NULL,
    [CheckQualityType]      TINYINT      NULL,
    [CheckEBELN]            BIT          NOT NULL,
    [CheckEBELP]            BIT          NOT NULL,
    [CheckManufactureParty] BIT          NULL,
    [CheckConsignment]      TINYINT      NULL
);


GO
PRINT N'Creating PK_CUST_MISCORDERMOVETYPE...';


GO
ALTER TABLE [dbo].[CUST_MiscOrderMoveType]
    ADD CONSTRAINT [PK_CUST_MISCORDERMOVETYPE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_OpReport]...';


GO
CREATE TABLE [dbo].[CUST_OpReport] (
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [Op]               INT           NOT NULL,
    [WorkCenter]       VARCHAR (50)  NOT NULL,
    [ExtOrderNo]       VARCHAR (50)  NULL,
    [VAN]              VARCHAR (50)  NULL,
    [IsReport]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_CUST_OPREPORT...';


GO
ALTER TABLE [dbo].[CUST_OpReport]
    ADD CONSTRAINT [PK_CUST_OPREPORT] PRIMARY KEY CLUSTERED ([OrderNo] ASC, [WorkCenter] ASC, [Op] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ProdFeed]...';


GO
CREATE TABLE [dbo].[CUST_ProdFeed] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [ProductOrder]     VARCHAR (50)  NOT NULL,
    [FeedOrder]        VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [TraceCode]        VARCHAR (50)  NOT NULL
);


GO
PRINT N'Creating PK_CUST_PRODFEED...';


GO
ALTER TABLE [dbo].[CUST_ProdFeed]
    ADD CONSTRAINT [PK_CUST_PRODFEED] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ProdLineLocationMap]...';


GO
CREATE TABLE [dbo].[CUST_ProdLineLocationMap] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [ProdLine]    VARCHAR (50) NOT NULL,
    [SapLocation] VARCHAR (50) NOT NULL,
    [Location]    VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating PK_CUST_ProdLineLocationMap...';


GO
ALTER TABLE [dbo].[CUST_ProdLineLocationMap]
    ADD CONSTRAINT [PK_CUST_ProdLineLocationMap] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ProductLineMap]...';


GO
CREATE TABLE [dbo].[CUST_ProductLineMap] (
    [SAPProdLine]      VARCHAR (50) NOT NULL,
    [ProdLine]         VARCHAR (50) NULL,
    [TransFlow]        VARCHAR (50) NULL,
    [SaddleFlow]       VARCHAR (50) NULL,
    [CabProdLine]      VARCHAR (50) NULL,
    [ChassisProdLine]  VARCHAR (50) NULL,
    [AssemblyProdLine] VARCHAR (50) NULL,
    [SpecialProdLine]  VARCHAR (50) NULL,
    [MaxOrderCount]    INT          NULL,
    [InitVanOrder]     VARCHAR (50) NULL,
    [Plant]            VARCHAR (50) NULL,
    [IsActive]         BIT          NOT NULL,
    [Type]             TINYINT      NOT NULL
);


GO
PRINT N'Creating PK_CUST_PRODUCTLINEMAP...';


GO
ALTER TABLE [dbo].[CUST_ProductLineMap]
    ADD CONSTRAINT [PK_CUST_PRODUCTLINEMAP] PRIMARY KEY CLUSTERED ([SAPProdLine] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_RoutingPositionMap]...';


GO
CREATE TABLE [dbo].[CUST_RoutingPositionMap] (
    [SAPPosition] VARCHAR (50) NOT NULL,
    [Position]    VARCHAR (50) NOT NULL,
    [Location]    VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating PK_CUST_ROUTINGPOSITIONMAP...';


GO
ALTER TABLE [dbo].[CUST_RoutingPositionMap]
    ADD CONSTRAINT [PK_CUST_ROUTINGPOSITIONMAP] PRIMARY KEY CLUSTERED ([SAPPosition] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_ScheduleLineItem]...';


GO
CREATE TABLE [dbo].[CUST_ScheduleLineItem] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Supplier]         VARCHAR (50)  NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [IsClose]          BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NULL,
    [LastModifyUserNm] VARCHAR (100) NULL,
    [LastModifyDate]   DATETIME      NULL
);


GO
PRINT N'Creating PK_Cust_ScheduleLineItem...';


GO
ALTER TABLE [dbo].[CUST_ScheduleLineItem]
    ADD CONSTRAINT [PK_Cust_ScheduleLineItem] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_VanJob]...';


GO
CREATE TABLE [dbo].[CUST_VanJob] (
    [JobId]                INT          IDENTITY (1, 1) NOT NULL,
    [FlowCode]             VARCHAR (50) NOT NULL,
    [CreateDate]           DATETIME     NOT NULL,
    [CompleteDate]         DATETIME     NULL,
    [Result_SapVanOrderNo] VARCHAR (50) NULL
);


GO
PRINT N'Creating PK_CUST_VanJob...';


GO
ALTER TABLE [dbo].[CUST_VanJob]
    ADD CONSTRAINT [PK_CUST_VanJob] PRIMARY KEY CLUSTERED ([JobId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_VehicleInFactoryDet]...';


GO
CREATE TABLE [dbo].[CUST_VehicleInFactoryDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [IpNo]             VARCHAR (50)  NOT NULL,
    [IsClose]          BIT           NOT NULL,
    [Dock]             VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CloseDate]        DATETIME      NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_VehicleFactoryDet...';


GO
ALTER TABLE [dbo].[CUST_VehicleInFactoryDet]
    ADD CONSTRAINT [PK_VehicleFactoryDet] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_VehicleInFactoryMstr]...';


GO
CREATE TABLE [dbo].[CUST_VehicleInFactoryMstr] (
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [VehicleNo]        VARCHAR (50)  NULL,
    [Plant]            VARCHAR (50)  NOT NULL,
    [Status]           TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CloseDate]        DATETIME      NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_VehicleInFactoryMstr...';


GO
ALTER TABLE [dbo].[CUST_VehicleInFactoryMstr]
    ADD CONSTRAINT [PK_VehicleInFactoryMstr] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[CUST_WMSKitOrder]...';


GO
CREATE TABLE [dbo].[CUST_WMSKitOrder] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [SapProdLine]      VARCHAR (50)    NULL,
    [SapOrderNo]       VARCHAR (50)    NULL,
    [Van]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [UOM]              VARCHAR (5)     NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [WorkCenter]       VARCHAR (50)    NULL,
    [IsClose]          BIT             NULL,
    [CreateUser]       INT             NULL,
    [CreateUserNm]     VARCHAR (100)   NULL,
    [CreateDate]       DATETIME        NULL,
    [LastModifyUser]   INT             NULL,
    [LastModifyUserNm] VARCHAR (100)   NULL,
    [LastModifyDate]   DATETIME        NULL,
    [Version]          INT             NULL
);


GO
PRINT N'Creating PK_CUST_WMSKitOrder...';


GO
ALTER TABLE [dbo].[CUST_WMSKitOrder]
    ADD CONSTRAINT [PK_CUST_WMSKitOrder] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_CreateIpDAT]...';


GO
CREATE TABLE [dbo].[FIS_CreateIpDAT] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [ASN_NO]         VARCHAR (50)  NOT NULL,
    [ASN_ITEM]       VARCHAR (50)  NOT NULL,
    [WH_CODE]        VARCHAR (50)  NOT NULL,
    [WH_DOCK]        VARCHAR (50)  NULL,
    [WH_LOCATION]    VARCHAR (50)  NULL,
    [ITEM_CODE]      VARCHAR (50)  NOT NULL,
    [SUPPLIER_CODE]  VARCHAR (50)  NOT NULL,
    [QTY]            VARCHAR (50)  NOT NULL,
    [UOM]            VARCHAR (50)  NOT NULL,
    [BASE_UNIT_QTY]  VARCHAR (50)  NOT NULL,
    [BASE_UNIT_UOM]  VARCHAR (50)  NOT NULL,
    [QC_FLAG]        VARCHAR (50)  NOT NULL,
    [DELIVERY_DATE]  VARCHAR (50)  NOT NULL,
    [TIME_WINDOW]    VARCHAR (50)  NULL,
    [PO]             VARCHAR (50)  NOT NULL,
    [FINANCE_FLAG]   VARCHAR (50)  NULL,
    [COMPONENT_FLAG] VARCHAR (50)  NULL,
    [TRACKID]        VARCHAR (50)  NULL,
    [PO_LINE]        VARCHAR (50)  NULL,
    [F80XBJ]         VARCHAR (50)  NULL,
    [F80X_LOCATION]  VARCHAR (50)  NULL,
    [FactoryInfo]    VARCHAR (50)  NULL,
    [ErrorCount]     INT           NULL,
    [IsCreateDat]    BIT           NOT NULL,
    [CreateUserNm]   VARCHAR (100) NULL,
    [TIME_STAMP1]    VARCHAR (50)  NULL,
    [FileName]       VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_FIS_CreateIpDAT...';


GO
ALTER TABLE [dbo].[FIS_CreateIpDAT]
    ADD CONSTRAINT [PK_FIS_CreateIpDAT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_CreateOrderDAT]...';


GO
CREATE TABLE [dbo].[FIS_CreateOrderDAT] (
    [ID]             INT           IDENTITY (1, 1) NOT NULL,
    [OrderNo]        VARCHAR (50)  NULL,
    [MATNR]          VARCHAR (50)  NOT NULL,
    [LIFNR]          VARCHAR (50)  NULL,
    [ENMNG]          VARCHAR (50)  NOT NULL,
    [CHARG]          VARCHAR (50)  NULL,
    [COLOR]          VARCHAR (50)  NULL,
    [TIME_STAMP]     VARCHAR (50)  NULL,
    [CY_SEQNR]       VARCHAR (50)  NULL,
    [TIME_STAMP1]    VARCHAR (50)  NULL,
    [AUFNR]          VARCHAR (50)  NULL,
    [LGORT]          VARCHAR (50)  NULL,
    [UMLGO]          VARCHAR (50)  NULL,
    [LGPBE]          VARCHAR (50)  NULL,
    [REQ_TIME_STAMP] VARCHAR (50)  NULL,
    [FLG_SORT]       VARCHAR (50)  NULL,
    [PLNBEZ]         VARCHAR (50)  NULL,
    [KTEXT]          VARCHAR (50)  NULL,
    [ZPLISTNO]       VARCHAR (50)  NULL,
    [ErrorCount]     INT           NULL,
    [IsCreateDat]    BIT           NOT NULL,
    [CreateUserNm]   VARCHAR (100) NULL,
    [FileName]       VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_FIS_CreateOrderDAT...';


GO
ALTER TABLE [dbo].[FIS_CreateOrderDAT]
    ADD CONSTRAINT [PK_FIS_CreateOrderDAT] PRIMARY KEY CLUSTERED ([ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_FtpCtrl]...';


GO
CREATE TABLE [dbo].[FIS_FtpCtrl] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [FtpServer]        VARCHAR (255) NOT NULL,
    [FtpPort]          INT           NULL,
    [FtpUser]          VARCHAR (255) NOT NULL,
    [FtpPass]          VARCHAR (255) NOT NULL,
    [FtpTempFolder]    VARCHAR (255) NULL,
    [FtpFolder]        VARCHAR (255) NULL,
    [FilePattern]      VARCHAR (255) NULL,
    [LocalTempFolder]  VARCHAR (255) NULL,
    [LocalFolder]      VARCHAR (255) NULL,
    [IOType]           VARCHAR (50)  NULL,
    [VaildFilePattern] VARCHAR (255) NULL,
    [FtpErrorFolder]   VARCHAR (255) NULL,
    [FtpBackUp]        VARCHAR (255) NULL
);


GO
PRINT N'Creating PK_FIS_FtpCtrl...';


GO
ALTER TABLE [dbo].[FIS_FtpCtrl]
    ADD CONSTRAINT [PK_FIS_FtpCtrl] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_InboundCtrl]...';


GO
CREATE TABLE [dbo].[FIS_InboundCtrl] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [SystemCode]    VARCHAR (50)  NOT NULL,
    [InFloder]      VARCHAR (255) NOT NULL,
    [FtpFolder]     VARCHAR (255) NOT NULL,
    [FilePattern]   VARCHAR (255) NULL,
    [ServiceName]   VARCHAR (255) NOT NULL,
    [ArchiveFloder] VARCHAR (255) NOT NULL,
    [ErrorFloder]   VARCHAR (255) NOT NULL,
    [SeqNo]         INT           NOT NULL,
    [FileEncoding]  VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK__FIS_Inbo__3214EC07503D80CA...';


GO
ALTER TABLE [dbo].[FIS_InboundCtrl]
    ADD CONSTRAINT [PK__FIS_Inbo__3214EC07503D80CA] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_ItemStandardPack]...';


GO
CREATE TABLE [dbo].[FIS_ItemStandardPack] (
    [Id]            INT             IDENTITY (1, 1) NOT NULL,
    [FlowDetId]     INT             NOT NULL,
    [Item]          VARCHAR (50)    NOT NULL,
    [Pack]          VARCHAR (50)    NULL,
    [UC]            DECIMAL (18, 8) NOT NULL,
    [IOType]        VARCHAR (50)    NOT NULL,
    [Location]      CHAR (4)        NOT NULL,
    [Plant]         CHAR (4)        NOT NULL,
    [CreateDate]    DATETIME        NOT NULL,
    [CreateDATDate] DATETIME        NULL,
    [DATFileName]   VARCHAR (255)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[FIS_LesINLog]...';


GO
CREATE TABLE [dbo].[FIS_LesINLog] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [Type]        VARCHAR (50)    NULL,
    [MoveType]    VARCHAR (50)    NULL,
    [Sequense]    VARCHAR (50)    NULL,
    [PO]          VARCHAR (50)    NULL,
    [POLine]      VARCHAR (50)    NULL,
    [WMSNo]       VARCHAR (50)    NULL,
    [WMSLine]     VARCHAR (50)    NULL,
    [HandTime]    VARCHAR (50)    NULL,
    [Item]        VARCHAR (50)    NULL,
    [HandResult]  VARCHAR (50)    NULL,
    [ErrorCause]  VARCHAR (500)   NULL,
    [IsCreateDat] BIT             NULL,
    [FileName]    VARCHAR (50)    NULL,
    [ASNNo]       VARCHAR (50)    NULL,
    [ExtNo]       VARCHAR (50)    NULL,
    [Qty]         DECIMAL (18, 8) NULL,
    [QtyMark]     BIT             NULL
);


GO
PRINT N'Creating PK_FIS_LesINLog...';


GO
ALTER TABLE [dbo].[FIS_LesINLog]
    ADD CONSTRAINT [PK_FIS_LesINLog] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_OutboundCtrl]...';


GO
CREATE TABLE [dbo].[FIS_OutboundCtrl] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [SystemCode]    VARCHAR (50)  NOT NULL,
    [OutFolder]     VARCHAR (255) NOT NULL,
    [ServiceName]   VARCHAR (255) NOT NULL,
    [ArchiveFolder] VARCHAR (255) NOT NULL,
    [SeqNo]         INT           NOT NULL,
    [TempFolder]    VARCHAR (255) NOT NULL,
    [FileEncoding]  VARCHAR (50)  NULL,
    [FilePrefix]    VARCHAR (50)  NULL,
    [FileSuffix]    VARCHAR (50)  NULL,
    [IsActive]      BIT           NOT NULL,
    [Mark]          INT           NOT NULL,
    [UndefStr1]     VARCHAR (255) NULL,
    [UndefStr2]     VARCHAR (255) NULL,
    [UndefStr3]     VARCHAR (255) NULL,
    [UndefStr4]     VARCHAR (255) NULL,
    [UndefStr5]     VARCHAR (255) NULL
);


GO
PRINT N'Creating PK_DssOutboundCtrl_1...';


GO
ALTER TABLE [dbo].[FIS_OutboundCtrl]
    ADD CONSTRAINT [PK_DssOutboundCtrl_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_WMSDatFile]...';


GO
CREATE TABLE [dbo].[FIS_WMSDatFile] (
    [Id]         INT             IDENTITY (1, 1) NOT NULL,
    [MoveType]   VARCHAR (50)    NOT NULL,
    [BLDAT]      VARCHAR (50)    NULL,
    [BUDAT]      VARCHAR (50)    NULL,
    [PO]         VARCHAR (50)    NULL,
    [POLine]     VARCHAR (50)    NULL,
    [VBELN]      VARCHAR (50)    NULL,
    [POSNR]      VARCHAR (50)    NULL,
    [LIFNR]      VARCHAR (50)    NULL,
    [WERKS]      VARCHAR (50)    NULL,
    [LGORT]      VARCHAR (50)    NULL,
    [SOBKZ]      VARCHAR (50)    NULL,
    [Item]       VARCHAR (50)    NULL,
    [Qty]        DECIMAL (18, 8) NULL,
    [Uom]        VARCHAR (50)    NULL,
    [UMLGO]      VARCHAR (50)    NULL,
    [GRUND]      VARCHAR (50)    NULL,
    [KOSTL]      VARCHAR (50)    NULL,
    [WmsNo]      VARCHAR (50)    NULL,
    [RSNUM]      VARCHAR (50)    NULL,
    [RSPOS]      VARCHAR (50)    NULL,
    [WMSId]      VARCHAR (50)    NULL,
    [WmsLine]    VARCHAR (50)    NULL,
    [OLD]        VARCHAR (50)    NULL,
    [INSMK]      VARCHAR (50)    NULL,
    [XABLN]      VARCHAR (50)    NULL,
    [AUFNR]      VARCHAR (50)    NULL,
    [UMMAT]      VARCHAR (50)    NULL,
    [UMWRK]      VARCHAR (50)    NULL,
    [IsHand]     BIT             NOT NULL,
    [CreateDate] DATETIME        NULL,
    [FileName]   VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_FIS_WMSDatFile...';


GO
ALTER TABLE [dbo].[FIS_WMSDatFile]
    ADD CONSTRAINT [PK_FIS_WMSDatFile] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[FIS_YieldReturn]...';


GO
CREATE TABLE [dbo].[FIS_YieldReturn] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [ArriveTime]       DATETIME        NOT NULL,
    [PartyFrom]        VARCHAR (50)    NOT NULL,
    [PartyTo]          VARCHAR (50)    NOT NULL,
    [Dock]             VARCHAR (100)   NULL,
    [IpCreateDate]     DATETIME        NOT NULL,
    [Seq]              VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsConsignment]    BIT             NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [CreateDATDate]    DATETIME        NULL,
    [DATFileName]      VARCHAR (255)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[INP_ConcessionDet]...';


GO
CREATE TABLE [dbo].[INP_ConcessionDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [CCSNo]            VARCHAR (50)    NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NOT NULL,
    [LocTo]            VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [ManufactureParty] VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INP_CONCESSIONDET...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet]
    ADD CONSTRAINT [PK_INP_CONCESSIONDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_ConcessionMstr]...';


GO
CREATE TABLE [dbo].[INP_ConcessionMstr] (
    [CCSNo]            VARCHAR (50)  NOT NULL,
    [RejNo]            VARCHAR (50)  NULL,
    [RefNo]            VARCHAR (50)  NULL,
    [Status]           TINYINT       NOT NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [IsPrint]          BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL,
    [WMSNo]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_INP_CONCESSIONMSTR...';


GO
ALTER TABLE [dbo].[INP_ConcessionMstr]
    ADD CONSTRAINT [PK_INP_CONCESSIONMSTR] PRIMARY KEY CLUSTERED ([CCSNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_InspectDet]...';


GO
CREATE TABLE [dbo].[INP_InspectDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [InpNo]            VARCHAR (50)    NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NOT NULL,
    [CurrLoc]          VARCHAR (50)    NOT NULL,
    [InspQty]          DECIMAL (18, 8) NOT NULL,
    [QualifyQty]       DECIMAL (18, 8) NOT NULL,
    [RejectQty]        DECIMAL (18, 8) NOT NULL,
    [IsJudge]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IpDetSeq]         INT             NULL,
    [RecDetSeq]        INT             NULL,
    [Note]             VARCHAR (255)   NULL,
    [FailCode]         VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INP_INSPECTDET...';


GO
ALTER TABLE [dbo].[INP_InspectDet]
    ADD CONSTRAINT [PK_INP_INSPECTDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_InspectMstr]...';


GO
CREATE TABLE [dbo].[INP_InspectMstr] (
    [InpNo]            VARCHAR (50)  NOT NULL,
    [RefNo]            VARCHAR (50)  NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [Status]           TINYINT       NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [IsATP]            BIT           NOT NULL,
    [IsPrint]          BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL,
    [ManufactureParty] VARCHAR (50)  NULL,
    [WMSNo]            VARCHAR (50)  NULL,
    [IpNo]             VARCHAR (50)  NULL,
    [RecNo]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_INP_INSPECTMSTR...';


GO
ALTER TABLE [dbo].[INP_InspectMstr]
    ADD CONSTRAINT [PK_INP_INSPECTMSTR] PRIMARY KEY CLUSTERED ([InpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_InspectResult]...';


GO
CREATE TABLE [dbo].[INP_InspectResult] (
    [Id]                 INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [InpNo]              VARCHAR (50)    NOT NULL,
    [InpDetSeq]          INT             NOT NULL,
    [InpDetId]           INT             NOT NULL,
    [Item]               VARCHAR (50)    NOT NULL,
    [ItemDesc]           VARCHAR (100)   NOT NULL,
    [RefItemCode]        VARCHAR (50)    NULL,
    [UC]                 DECIMAL (18, 8) NOT NULL,
    [Uom]                VARCHAR (5)     NOT NULL,
    [BaseUom]            VARCHAR (5)     NOT NULL,
    [UnitQty]            DECIMAL (18, 8) NOT NULL,
    [HuId]               VARCHAR (50)    NULL,
    [LotNo]              VARCHAR (50)    NULL,
    [LocFrom]            VARCHAR (50)    NOT NULL,
    [CurrLoc]            VARCHAR (50)    NOT NULL,
    [JudgeResult]        TINYINT         NOT NULL,
    [JudgeQty]           DECIMAL (18, 8) NOT NULL,
    [HandleQty]          DECIMAL (18, 8) NOT NULL,
    [IsHandle]           BIT             NOT NULL,
    [Defect]             VARCHAR (50)    NULL,
    [CreateUser]         INT             NOT NULL,
    [CreateUserNm]       VARCHAR (100)   NOT NULL,
    [CreateDate]         DATETIME        NOT NULL,
    [LastModifyUser]     INT             NOT NULL,
    [LastModifyUserNm]   VARCHAR (100)   NOT NULL,
    [LastModifyDate]     DATETIME        NOT NULL,
    [Version]            INT             NOT NULL,
    [ManufactureParty]   VARCHAR (50)    NULL,
    [WMSNo]              VARCHAR (50)    NULL,
    [WMSSeq]             VARCHAR (50)    NULL,
    [IpNo]               VARCHAR (50)    NULL,
    [IpDetSeq]           INT             NULL,
    [FailCode]           VARCHAR (50)    NULL,
    [RecNo]              VARCHAR (50)    NULL,
    [RecDetSeq]          INT             NULL,
    [Note]               VARCHAR (255)   NULL,
    [RejectHandleResult] TINYINT         NOT NULL
);


GO
PRINT N'Creating PK_INP_INSPECTRESULT...';


GO
ALTER TABLE [dbo].[INP_InspectResult]
    ADD CONSTRAINT [PK_INP_INSPECTRESULT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_InspectResultExt]...';


GO
CREATE TABLE [dbo].[INP_InspectResultExt] (
    [id]               INT           IDENTITY (1, 1) NOT NULL,
    [inpRetId]         INT           NOT NULL,
    [QuaDesc]          VARCHAR (50)  NULL,
    [QuaType]          VARCHAR (50)  NULL,
    [ProType]          VARCHAR (50)  NULL,
    [Supplier]         VARCHAR (50)  NULL,
    [UnitCode]         VARCHAR (50)  NULL,
    [RatInspect]       VARCHAR (50)  NULL,
    [Checker]          VARCHAR (50)  NULL,
    [PurDep]           VARCHAR (50)  NULL,
    [Picture]          IMAGE         NULL,
    [StartLotNo]       VARCHAR (50)  NULL,
    [EndLotNo]         VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    PRIMARY KEY NONCLUSTERED ([id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF) ON [PRIMARY]
);


GO
PRINT N'Creating [dbo].[INP_InspectResultExt].[IX_INP_InspectResultExt_inpRetId]...';


GO
CREATE CLUSTERED INDEX [IX_INP_InspectResultExt_inpRetId]
    ON [dbo].[INP_InspectResultExt]([inpRetId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0);


GO
PRINT N'Creating [dbo].[INP_ProdScanDet]...';


GO
CREATE TABLE [dbo].[INP_ProdScanDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [ProdScan]         VARCHAR (50)  NOT NULL,
    [Seq]              INT           NOT NULL,
    [Op]               INT           NOT NULL,
    [OpRef]            VARCHAR (50)  NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_INP_PRODSCANDET...';


GO
ALTER TABLE [dbo].[INP_ProdScanDet]
    ADD CONSTRAINT [PK_INP_PRODSCANDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_ProdScanMstr]...';


GO
CREATE TABLE [dbo].[INP_ProdScanMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_INP_PRODSCANMSTR...';


GO
ALTER TABLE [dbo].[INP_ProdScanMstr]
    ADD CONSTRAINT [PK_INP_PRODSCANMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_RejectDet]...';


GO
CREATE TABLE [dbo].[INP_RejectDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [InspResultId]     INT             NOT NULL,
    [InpNo]            VARCHAR (50)    NOT NULL,
    [RejNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NOT NULL,
    [CurrLoc]          VARCHAR (50)    NOT NULL,
    [HandleQty]        DECIMAL (18, 8) NOT NULL,
    [HandledQty]       DECIMAL (18, 8) NOT NULL,
    [Defect]           VARCHAR (100)   NULL,
    [FailCode]         VARCHAR (50)    NULL,
    [JudgeUser]        INT             NOT NULL,
    [JudgeUserNm]      VARCHAR (100)   NOT NULL,
    [JudgeDate]        DATETIME        NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetSeq]         INT             NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [RecDetSeq]        INT             NULL,
    [WMSNo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INP_REJECTDET...';


GO
ALTER TABLE [dbo].[INP_RejectDet]
    ADD CONSTRAINT [PK_INP_REJECTDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INP_RejectMstr]...';


GO
CREATE TABLE [dbo].[INP_RejectMstr] (
    [RejNo]            VARCHAR (50)  NOT NULL,
    [RefNo]            VARCHAR (50)  NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [Status]           TINYINT       NOT NULL,
    [IsPrint]          BIT           NOT NULL,
    [HandleResult]     TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL,
    [InpType]          TINYINT       NOT NULL
);


GO
PRINT N'Creating PK_INP_REJECTMSTR...';


GO
ALTER TABLE [dbo].[INP_RejectMstr]
    ADD CONSTRAINT [PK_INP_REJECTMSTR] PRIMARY KEY CLUSTERED ([RejNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_ContainerDet]...';


GO
CREATE TABLE [dbo].[INV_ContainerDet] (
    [ContId]           VARCHAR (50)  NOT NULL,
    [Container]        VARCHAR (50)  NOT NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [IsEmpty]          BIT           NOT NULL,
    [ActiveDate]       DATETIME      NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL
);


GO
PRINT N'Creating PK_INV_CONTAINERDET...';


GO
ALTER TABLE [dbo].[INV_ContainerDet]
    ADD CONSTRAINT [PK_INV_CONTAINERDET] PRIMARY KEY CLUSTERED ([ContId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_ContainerTrans]...';


GO
CREATE TABLE [dbo].[INV_ContainerTrans] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Container]        VARCHAR (50)    NOT NULL,
    [ContainerDesc]    VARCHAR (100)   NULL,
    [ContId]           VARCHAR (50)    NOT NULL,
    [RefOrderNo]       VARCHAR (50)    NULL,
    [LocationFrom]     VARCHAR (50)    NOT NULL,
    [LocationFromDesc] VARCHAR (100)   NULL,
    [LocationTo]       VARCHAR (50)    NOT NULL,
    [LocationToDesc]   VARCHAR (100)   NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsEmpty]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_CONTAINERTRANS...';


GO
ALTER TABLE [dbo].[INV_ContainerTrans]
    ADD CONSTRAINT [PK_INV_CONTAINERTRANS] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_ContLocationDet]...';


GO
CREATE TABLE [dbo].[INV_ContLocationDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Container]        VARCHAR (50)    NOT NULL,
    [ContId]           VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsEmpty]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL
);


GO
PRINT N'Creating PK_INV_CONTLOCATIONDET...';


GO
ALTER TABLE [dbo].[INV_ContLocationDet]
    ADD CONSTRAINT [PK_INV_CONTLOCATIONDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_DailyInvBalance]...';


GO
CREATE TABLE [dbo].[INV_DailyInvBalance] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [Location]         VARCHAR (50)    NULL,
    [SAPLocation]      VARCHAR (50)    NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCs]             BIT             NOT NULL,
    [QualifyQty]       DECIMAL (18, 8) NOT NULL,
    [InspectQty]       DECIMAL (18, 8) NOT NULL,
    [RejectQty]        DECIMAL (18, 8) NOT NULL,
    [TobeQualifyQty]   DECIMAL (18, 8) NOT NULL,
    [TobeInspectQty]   DECIMAL (18, 8) NOT NULL,
    [TobeRejectQty]    DECIMAL (18, 8) NOT NULL,
    [FinanceYear]      INT             NOT NULL,
    [FinanceMonth]     INT             NOT NULL,
    [InvDate]          DATETIME        NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    PRIMARY KEY NONCLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF) ON [PRIMARY]
);


GO
PRINT N'Creating [dbo].[INV_DailyTransBalance]...';


GO
CREATE TABLE [dbo].[INV_DailyTransBalance] (
    [Id]           BIGINT          IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]         VARCHAR (50)    NOT NULL,
    [TransType]    INT             NOT NULL,
    [IOType]       TINYINT         NOT NULL,
    [Region]       VARCHAR (50)    NOT NULL,
    [Location]     VARCHAR (50)    NOT NULL,
    [QualifyQty]   DECIMAL (18, 8) NOT NULL,
    [InspectQty]   DECIMAL (18, 8) NOT NULL,
    [RejectQty]    DECIMAL (18, 8) NOT NULL,
    [FinanceYear]  INT             NOT NULL,
    [FinanceMonth] INT             NOT NULL,
    [InvDate]      DATETIME        NOT NULL,
    [CreateUser]   INT             NOT NULL,
    [CreateUserNm] VARCHAR (100)   NOT NULL,
    [CreateDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_DAILYTRANSBALANCE...';


GO
ALTER TABLE [dbo].[INV_DailyTransBalance]
    ADD CONSTRAINT [PK_INV_DAILYTRANSBALANCE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_Hu]...';


GO
CREATE TABLE [dbo].[INV_Hu] (
    [HuId]             VARCHAR (50)    NOT NULL,
    [LotNo]            VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [ManufactureDate]  DATETIME        NOT NULL,
    [ManufactureParty] VARCHAR (50)    NOT NULL,
    [RemindExpireDate] DATETIME        NULL,
    [ExpireDate]       DATETIME        NULL,
    [HuTemplate]       VARCHAR (50)    NULL,
    [PrintCount]       TINYINT         NOT NULL,
    [FirstInvDate]     DATETIME        NULL,
    [IsOdd]            BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [ConcessionCount]  TINYINT         NOT NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [SupplierLotNo]    VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL
);


GO
PRINT N'Creating PK_INV_HU...';


GO
ALTER TABLE [dbo].[INV_Hu]
    ADD CONSTRAINT [PK_INV_HU] PRIMARY KEY CLUSTERED ([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_HuCS]...';


GO
CREATE TABLE [dbo].[INV_HuCS] (
    [Id]               NUMERIC (18)    IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [HuId]             VARCHAR (50)    NOT NULL,
    [PlannBillId]      INT             NOT NULL,
    [PlanQty]          DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_HUCS...';


GO
ALTER TABLE [dbo].[INV_HuCS]
    ADD CONSTRAINT [PK_INV_HUCS] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_HuMapping]...';


GO
CREATE TABLE [dbo].[INV_HuMapping] (
    [Id]               INT              IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [HuId]             VARCHAR (50)     NOT NULL,
    [OldHus]           VARCHAR (500)    NOT NULL,
    [Item]             VARCHAR (50)     NOT NULL,
    [Qty]              DECIMAL (18, 10) NOT NULL,
    [IsEffective]      BIT              NOT NULL,
    [IsRepack]         BIT              NOT NULL,
    [OrderNo]          VARCHAR (50)     NOT NULL,
    [OrderDetId]       BIGINT           NOT NULL,
    [CreateUser]       INT              NOT NULL,
    [CreateUserNm]     VARCHAR (100)    NOT NULL,
    [CreateDate]       DATETIME         NOT NULL,
    [LastModifyUser]   INT              NOT NULL,
    [LastModifyUserNm] VARCHAR (100)    NOT NULL,
    [LastModifyDate]   DATETIME         NOT NULL
);


GO
PRINT N'Creating PK__INV_HuMa__3214EC071645E95F...';


GO
ALTER TABLE [dbo].[INV_HuMapping]
    ADD CONSTRAINT [PK__INV_HuMa__3214EC071645E95F] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_ItemExchange]...';


GO
CREATE TABLE [dbo].[INV_ItemExchange] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [ItemFrom]         VARCHAR (50)    NOT NULL,
    [ItemTo]           VARCHAR (50)    NOT NULL,
    [RegionFrom]       VARCHAR (50)    NOT NULL,
    [RegionTo]         VARCHAR (50)    NOT NULL,
    [LocationFrom]     VARCHAR (50)    NOT NULL,
    [LocationTo]       VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [EffDate]          DATETIME        NOT NULL,
    [IsVoid]           BIT             NOT NULL,
    [WMSNo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_ITEMEXCHANGE...';


GO
ALTER TABLE [dbo].[INV_ItemExchange]
    ADD CONSTRAINT [PK_INV_ITEMEXCHANGE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_KanBanCard]...';


GO
CREATE TABLE [dbo].[INV_KanBanCard] (
    [Code]             VARCHAR (50)    NOT NULL,
    [Flow]             VARCHAR (50)    NOT NULL,
    [LocTo]            VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (50)    NOT NULL,
    [ItemCategory]     VARCHAR (100)   NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [UnitCount]        DECIMAL (18, 8) NOT NULL,
    [Qty]              INT             NULL,
    [PackType]         VARCHAR (50)    NULL,
    [StaUseQty]        INT             NOT NULL,
    [MultiSta]         VARCHAR (200)   NULL,
    [Note]             VARCHAR (50)    NULL,
    [ThumbNo]          INT             NULL,
    [IsEleKanBan]      BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_KANBANCARD...';


GO
ALTER TABLE [dbo].[INV_KanBanCard]
    ADD CONSTRAINT [PK_INV_KANBANCARD] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_KanBanCardInfo]...';


GO
CREATE TABLE [dbo].[INV_KanBanCardInfo] (
    [CardNo]  VARCHAR (100) NOT NULL,
    [KBICode] VARCHAR (50)  NOT NULL,
    [Seq]     INT           NOT NULL
);


GO
PRINT N'Creating PK_INV_KANBANCARDINFO...';


GO
ALTER TABLE [dbo].[INV_KanBanCardInfo]
    ADD CONSTRAINT [PK_INV_KANBANCARDINFO] PRIMARY KEY CLUSTERED ([CardNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_0]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_0] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_0...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_0].[IX_INV_LocationLotDet_0_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_0_Item]
    ON [dbo].[INV_LocationLotDet_0]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_1]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_1] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_1...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_1].[IX_INV_LocationLotDet_1_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_1_Huid]
    ON [dbo].[INV_LocationLotDet_1]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_1].[IX_INV_LocationLotDet_1_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_1_Item]
    ON [dbo].[INV_LocationLotDet_1]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_10]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_10] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_10...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_10] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_10].[IX_INV_LocationLotDet_10_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_10_Huid]
    ON [dbo].[INV_LocationLotDet_10]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_10].[IX_INV_LocationLotDet_10_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_10_Item]
    ON [dbo].[INV_LocationLotDet_10]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_11]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_11] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_11...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_11] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_11].[IX_INV_LocationLotDet_11_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_11_Huid]
    ON [dbo].[INV_LocationLotDet_11]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_11].[IX_INV_LocationLotDet_11_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_11_Item]
    ON [dbo].[INV_LocationLotDet_11]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_12]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_12] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_12...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_12] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_12].[IX_INV_LocationLotDet_12_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_12_Huid]
    ON [dbo].[INV_LocationLotDet_12]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_12].[IX_INV_LocationLotDet_12_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_12_Item]
    ON [dbo].[INV_LocationLotDet_12]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_13]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_13] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_13...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_13] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_13].[IX_INV_LocationLotDet_13_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_13_Huid]
    ON [dbo].[INV_LocationLotDet_13]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_13].[IX_INV_LocationLotDet_13_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_13_Item]
    ON [dbo].[INV_LocationLotDet_13]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_14]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_14] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_14...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_14] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_14].[IX_INV_LocationLotDet_14_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_14_Huid]
    ON [dbo].[INV_LocationLotDet_14]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_14].[IX_INV_LocationLotDet_14_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_14_Item]
    ON [dbo].[INV_LocationLotDet_14]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_15]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_15] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_15...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_15] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_15].[IX_INV_LocationLotDet_15_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_15_Huid]
    ON [dbo].[INV_LocationLotDet_15]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_15].[IX_INV_LocationLotDet_15_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_15_Item]
    ON [dbo].[INV_LocationLotDet_15]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_16]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_16] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_16...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_16] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_16].[IX_INV_LocationLotDet_16_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_16_Huid]
    ON [dbo].[INV_LocationLotDet_16]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_16].[IX_INV_LocationLotDet_16_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_16_Item]
    ON [dbo].[INV_LocationLotDet_16]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_17]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_17] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_17...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_17] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_17].[IX_INV_LocationLotDet_17_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_17_Huid]
    ON [dbo].[INV_LocationLotDet_17]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_17].[IX_INV_LocationLotDet_17_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_17_Item]
    ON [dbo].[INV_LocationLotDet_17]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_18]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_18] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_18...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_18] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_18].[IX_INV_LocationLotDet_17_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_17_Huid]
    ON [dbo].[INV_LocationLotDet_18]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_18].[IX_INV_LocationLotDet_18_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_18_Item]
    ON [dbo].[INV_LocationLotDet_18]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_19]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_19] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_19...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_19] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_19].[IX_INV_LocationLotDet_19_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_19_Item]
    ON [dbo].[INV_LocationLotDet_19]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_2]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_2] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_2...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_2].[IX_INV_LocationLotDet_2_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_2_Huid]
    ON [dbo].[INV_LocationLotDet_2]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_2].[IX_INV_LocationLotDet_2_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_2_Item]
    ON [dbo].[INV_LocationLotDet_2]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_3]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_3] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_3...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_3].[IX_INV_LocationLotDet_3_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_3_Huid]
    ON [dbo].[INV_LocationLotDet_3]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_3].[IX_INV_LocationLotDet_3_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_3_Item]
    ON [dbo].[INV_LocationLotDet_3]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_4]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_4] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_4...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_4].[IX_INV_LocationLotDet_4_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_4_Huid]
    ON [dbo].[INV_LocationLotDet_4]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_4].[IX_INV_LocationLotDet_4_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_4_Item]
    ON [dbo].[INV_LocationLotDet_4]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_5]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_5] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_5...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_5].[IX_INV_LocationLotDet_5_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_5_Huid]
    ON [dbo].[INV_LocationLotDet_5]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_5].[IX_INV_LocationLotDet_5_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_5_Item]
    ON [dbo].[INV_LocationLotDet_5]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_6]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_6] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_6...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_6].[IX_INV_LocationLotDet_6_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_6_Huid]
    ON [dbo].[INV_LocationLotDet_6]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_6].[IX_INV_LocationLotDet_6_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_6_Item]
    ON [dbo].[INV_LocationLotDet_6]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_7]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_7] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_7...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_7].[IX_INV_LocationLotDet_7_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_7_Huid]
    ON [dbo].[INV_LocationLotDet_7]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_7].[IX_INV_LocationLotDet_7_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_7_Item]
    ON [dbo].[INV_LocationLotDet_7]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_8]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_8] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_8...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_8].[IX_INV_LocationLotDet_8_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_8_Huid]
    ON [dbo].[INV_LocationLotDet_8]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_8].[IX_INV_LocationLotDet_8_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_8_Item]
    ON [dbo].[INV_LocationLotDet_8]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_9]...';


GO
CREATE TABLE [dbo].[INV_LocationLotDet_9] (
    [Id]               INT             NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_INV_LocationLotDet_0_9...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9]
    ADD CONSTRAINT [PK_INV_LocationLotDet_0_9] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_9].[IX_INV_LocationLotDet_9_Huid]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_9_Huid]
    ON [dbo].[INV_LocationLotDet_9]([HuId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocationLotDet_9].[IX_INV_LocationLotDet_9_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_INV_LocationLotDet_9_Item]
    ON [dbo].[INV_LocationLotDet_9]([Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[INV_LocTrans]...';


GO
CREATE TABLE [dbo].[INV_LocTrans] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0...';


GO
ALTER TABLE [dbo].[INV_LocTrans]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_0]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_0] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_0...';


GO
ALTER TABLE [dbo].[INV_LocTrans_0]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_1]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_1] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_1...';


GO
ALTER TABLE [dbo].[INV_LocTrans_1]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_10]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_10] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_10...';


GO
ALTER TABLE [dbo].[INV_LocTrans_10]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_10] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_11]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_11] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_11...';


GO
ALTER TABLE [dbo].[INV_LocTrans_11]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_11] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_12]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_12] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_12...';


GO
ALTER TABLE [dbo].[INV_LocTrans_12]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_12] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_13]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_13] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_13...';


GO
ALTER TABLE [dbo].[INV_LocTrans_13]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_13] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_14]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_14] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_14...';


GO
ALTER TABLE [dbo].[INV_LocTrans_14]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_14] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_15]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_15] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_15...';


GO
ALTER TABLE [dbo].[INV_LocTrans_15]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_15] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_16]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_16] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_16...';


GO
ALTER TABLE [dbo].[INV_LocTrans_16]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_16] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_17]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_17] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_17...';


GO
ALTER TABLE [dbo].[INV_LocTrans_17]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_17] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_18]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_18] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_18...';


GO
ALTER TABLE [dbo].[INV_LocTrans_18]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_18] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_19]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_19] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_19...';


GO
ALTER TABLE [dbo].[INV_LocTrans_19]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_19] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_2]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_2] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_2...';


GO
ALTER TABLE [dbo].[INV_LocTrans_2]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_3]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_3] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_3...';


GO
ALTER TABLE [dbo].[INV_LocTrans_3]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_4]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_4] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_4...';


GO
ALTER TABLE [dbo].[INV_LocTrans_4]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_5]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_5] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_5...';


GO
ALTER TABLE [dbo].[INV_LocTrans_5]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_6]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_6] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_6...';


GO
ALTER TABLE [dbo].[INV_LocTrans_6]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_7]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_7] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_7...';


GO
ALTER TABLE [dbo].[INV_LocTrans_7]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_8]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_8] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_8...';


GO
ALTER TABLE [dbo].[INV_LocTrans_8]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTrans_9]...';


GO
CREATE TABLE [dbo].[INV_LocTrans_9] (
    [Id]             BIGINT          NOT NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [OrderType]      TINYINT         NULL,
    [OrderSubType]   TINYINT         NULL,
    [OrderDetSeq]    INT             NULL,
    [OrderDetId]     INT             NULL,
    [OrderBomDetId]  INT             NULL,
    [OrderBomDetSeq] INT             NULL,
    [IpNo]           VARCHAR (50)    NULL,
    [IpDetId]        INT             NULL,
    [IpDetSeq]       INT             NULL,
    [RecNo]          VARCHAR (50)    NULL,
    [RecDetId]       INT             NULL,
    [RecDetSeq]      INT             NULL,
    [SeqNo]          VARCHAR (50)    NULL,
    [TraceCode]      VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NOT NULL,
    [Uom]            VARCHAR (5)     NOT NULL,
    [BaseUom]        VARCHAR (5)     NOT NULL,
    [Qty]            DECIMAL (18, 8) NOT NULL,
    [IsCS]           BIT             NOT NULL,
    [PlanBill]       INT             NULL,
    [PlanBillQty]    DECIMAL (18, 8) NOT NULL,
    [ActBill]        INT             NULL,
    [ActBillQty]     DECIMAL (18, 8) NOT NULL,
    [UnitQty]        DECIMAL (18, 8) NOT NULL,
    [QualityType]    TINYINT         NOT NULL,
    [HuId]           VARCHAR (50)    NULL,
    [LotNo]          VARCHAR (50)    NULL,
    [TransType]      INT             NOT NULL,
    [IOType]         TINYINT         NOT NULL,
    [PartyFrom]      VARCHAR (50)    NULL,
    [PartyTo]        VARCHAR (50)    NULL,
    [LocFrom]        VARCHAR (50)    NULL,
    [LocTo]          VARCHAR (50)    NULL,
    [LocIOReason]    VARCHAR (50)    NULL,
    [EffDate]        DATETIME        NOT NULL,
    [CreateUser]     INT             NOT NULL,
    [CreateDate]     DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANS_0_9...';


GO
ALTER TABLE [dbo].[INV_LocTrans_9]
    ADD CONSTRAINT [PK_INV_LOCTRANS_0_9] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet] (
    [Id]              BIGINT          IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET...';


GO
ALTER TABLE [dbo].[INV_LocTransDet]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_0]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_0] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_0...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_0]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_1]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_1] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_1...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_1]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_10]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_10] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_10...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_10]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_10] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_11]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_11] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_11...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_11]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_11] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_12]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_12] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_12...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_12]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_12] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_13]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_13] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_13...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_13]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_13] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_14]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_14] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_14...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_14]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_14] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_15]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_15] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_15...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_15]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_15] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_16]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_16] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_16...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_16]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_16] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_17]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_17] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_17...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_17]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_17] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_18]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_18] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_18...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_18]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_18] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_19]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_19] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_19...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_19]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_19] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_2]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_2] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_2...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_2]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_3]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_3] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_3...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_3]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_4]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_4] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_4...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_4]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_5]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_5] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_5...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_5]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_6]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_6] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_6...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_6]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_7]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_7] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_7...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_7]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_8]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_8] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_8...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_8]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_LocTransDet_9]...';


GO
CREATE TABLE [dbo].[INV_LocTransDet_9] (
    [Id]              BIGINT          NOT NULL,
    [LocTransId]      BIGINT          NOT NULL,
    [OrderNo]         VARCHAR (50)    NULL,
    [OrderType]       TINYINT         NULL,
    [OrderSubType]    TINYINT         NULL,
    [OrderDetSeq]     INT             NULL,
    [OrderDetId]      INT             NULL,
    [OrderBomDetId]   INT             NULL,
    [OrderBomDetSeq]  INT             NULL,
    [IpNo]            VARCHAR (50)    NULL,
    [IpDetId]         INT             NULL,
    [IpDetSeq]        INT             NULL,
    [RecNo]           VARCHAR (50)    NULL,
    [RecDetId]        INT             NULL,
    [RecDetSeq]       INT             NULL,
    [SeqNo]           VARCHAR (50)    NULL,
    [BillTransId]     INT             NULL,
    [LocLotDetId]     INT             NULL,
    [TraceCode]       VARCHAR (50)    NULL,
    [Item]            VARCHAR (50)    NOT NULL,
    [Qty]             DECIMAL (18, 8) NOT NULL,
    [IsCS]            BIT             NOT NULL,
    [PlanBill]        INT             NULL,
    [PlanBillQty]     DECIMAL (18, 8) NOT NULL,
    [ActBill]         INT             NULL,
    [ActBillQty]      DECIMAL (18, 8) NOT NULL,
    [QualityType]     TINYINT         NOT NULL,
    [HuId]            VARCHAR (50)    NULL,
    [LotNo]           VARCHAR (50)    NULL,
    [TransType]       INT             NOT NULL,
    [IOType]          TINYINT         NOT NULL,
    [PartyFrom]       VARCHAR (50)    NULL,
    [PartyTo]         VARCHAR (50)    NULL,
    [LocFrom]         VARCHAR (50)    NULL,
    [LocTo]           VARCHAR (50)    NULL,
    [Bin]             VARCHAR (50)    NULL,
    [PlanBackflushId] INT             NULL,
    [LocIOReason]     VARCHAR (50)    NULL,
    [EffDate]         DATETIME        NOT NULL,
    [CreateUser]      INT             NOT NULL,
    [CreateDate]      DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_LOCTRANSDET_9...';


GO
ALTER TABLE [dbo].[INV_LocTransDet_9]
    ADD CONSTRAINT [PK_INV_LOCTRANSDET_9] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_OpRefBalance]...';


GO
CREATE TABLE [dbo].[INV_OpRefBalance] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [OpRef]            VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NULL
);


GO
PRINT N'Creating PK_INV_OpRefBalance...';


GO
ALTER TABLE [dbo].[INV_OpRefBalance]
    ADD CONSTRAINT [PK_INV_OpRefBalance] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_StockTakeDet]...';


GO
CREATE TABLE [dbo].[INV_StockTakeDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [StNo]             VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_STOCKTAKEDET...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet]
    ADD CONSTRAINT [PK_INV_STOCKTAKEDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_StockTakeItem]...';


GO
CREATE TABLE [dbo].[INV_StockTakeItem] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [StNo]             VARCHAR (50)  NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [ItemDesc]         VARCHAR (100) NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_INV_STOCKTAKEITEM...';


GO
ALTER TABLE [dbo].[INV_StockTakeItem]
    ADD CONSTRAINT [PK_INV_STOCKTAKEITEM] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_StockTakeLoc]...';


GO
CREATE TABLE [dbo].[INV_StockTakeLoc] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [StNo]             VARCHAR (50)  NOT NULL,
    [Loc]              VARCHAR (50)  NOT NULL,
    [LocName]          VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_INV_STOCKTAKELOC...';


GO
ALTER TABLE [dbo].[INV_StockTakeLoc]
    ADD CONSTRAINT [PK_INV_STOCKTAKELOC] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_StockTakeMstr]...';


GO
CREATE TABLE [dbo].[INV_StockTakeMstr] (
    [StNo]             VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [BaseInvDate]      DATETIME      NULL,
    [EffDate]          DATETIME      NULL,
    [Status]           TINYINT       NOT NULL,
    [IsScanHu]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ReleaseDate]      DATETIME      NULL,
    [ReleaseUser]      INT           NULL,
    [ReleaseUserNm]    VARCHAR (100) NULL,
    [StartDate]        DATETIME      NULL,
    [StartUser]        INT           NULL,
    [StartUserNm]      VARCHAR (100) NULL,
    [CompleteDate]     DATETIME      NULL,
    [CompleteUser]     INT           NULL,
    [CompleteUserNm]   VARCHAR (100) NULL,
    [CloseDate]        DATETIME      NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CancelDate]       DATETIME      NULL,
    [CancelUser]       INT           NULL,
    [CancelUserNm]     VARCHAR (100) NULL,
    [CancelReason]     VARCHAR (256) NULL,
    [Version]          INT           NOT NULL,
    [CostCenter]       VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_INV_STOCKTAKEMSTR...';


GO
ALTER TABLE [dbo].[INV_StockTakeMstr]
    ADD CONSTRAINT [PK_INV_STOCKTAKEMSTR] PRIMARY KEY CLUSTERED ([StNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[INV_StockTakeResult]...';


GO
CREATE TABLE [dbo].[INV_StockTakeResult] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [StNo]             VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [StQty]            DECIMAL (18, 8) NOT NULL,
    [InvQty]           DECIMAL (18, 8) NOT NULL,
    [DiffQty]          DECIMAL (18, 8) NOT NULL,
    [Location]         VARCHAR (50)    NOT NULL,
    [Bin]              VARCHAR (50)    NULL,
    [BaseInvDate]      DATETIME        NULL,
    [EffDate]          DATETIME        NULL,
    [IsAdj]            BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_INV_STOCKTAKERESULT...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult]
    ADD CONSTRAINT [PK_INV_STOCKTAKERESULT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueAddr]...';


GO
CREATE TABLE [dbo].[ISS_IssueAddr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [Seq]              INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ParentCode]       VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ISS_ISSUEADDR...';


GO
ALTER TABLE [dbo].[ISS_IssueAddr]
    ADD CONSTRAINT [PK_ISS_ISSUEADDR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueDet]...';


GO
CREATE TABLE [dbo].[ISS_IssueDet] (
    [Id]                   INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [IssueCode]            VARCHAR (50)  NOT NULL,
    [IssueTypeToUserDetId] INT           NULL,
    [IssueTypeToRoleDetId] INT           NULL,
    [Seq]                  INT           NOT NULL,
    [IssueLevel]           VARCHAR (50)  NOT NULL,
    [IsSubmit]             BIT           NOT NULL,
    [IsInProcess]          BIT           NOT NULL,
    [IsDefault]            BIT           NOT NULL,
    [IsEmail]              BIT           NOT NULL,
    [IsSMS]                BIT           NOT NULL,
    [Priority]             TINYINT       NOT NULL,
    [UserId]               INT           NOT NULL,
    [Email]                VARCHAR (50)  NULL,
    [EmailStatus]          TINYINT       NOT NULL,
    [EmailCount]           INT           NOT NULL,
    [MobilePhone]          VARCHAR (50)  NULL,
    [SMSStatus]            TINYINT       NOT NULL,
    [SMSCount]             INT           NOT NULL,
    [IsActive]             BIT           NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUEDET...';


GO
ALTER TABLE [dbo].[ISS_IssueDet]
    ADD CONSTRAINT [PK_ISS_ISSUEDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueLevel]...';


GO
CREATE TABLE [dbo].[ISS_IssueLevel] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [IsSubmit]         BIT           NOT NULL,
    [IsInProcess]      BIT           NOT NULL,
    [Seq]              INT           NOT NULL,
    [IsDefault]        BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUELEVEL...';


GO
ALTER TABLE [dbo].[ISS_IssueLevel]
    ADD CONSTRAINT [PK_ISS_ISSUELEVEL] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueLog]...';


GO
CREATE TABLE [dbo].[ISS_IssueLog] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Issue]            VARCHAR (50)  NULL,
    [IssueDet]         INT           NULL,
    [Level_]           VARCHAR (50)  NULL,
    [Content_]         VARCHAR (255) NULL,
    [UserId]           VARCHAR (50)  NULL,
    [EmailStatus]      VARCHAR (50)  NULL,
    [SMSStatus]        VARCHAR (50)  NULL,
    [Email]            VARCHAR (50)  NULL,
    [MPhone]           VARCHAR (50)  NULL,
    [IsEmail]          BIT           NULL,
    [IsSMS]            BIT           NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUELOG...';


GO
ALTER TABLE [dbo].[ISS_IssueLog]
    ADD CONSTRAINT [PK_ISS_ISSUELOG] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueMstr]...';


GO
CREATE TABLE [dbo].[ISS_IssueMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [IssueAddr]        VARCHAR (50)  NULL,
    [IssueType]        VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [IssueNo]          VARCHAR (50)  NULL,
    [IssueSubject]     VARCHAR (50)  NULL,
    [BackYards]        VARCHAR (50)  NULL,
    [Content]          VARCHAR (256) NULL,
    [Solution]         VARCHAR (256) NULL,
    [Status]           TINYINT       NOT NULL,
    [Priority]         TINYINT       NOT NULL,
    [FinishedUser]     VARCHAR (50)  NULL,
    [FinishedDate]     DATETIME      NULL,
    [UserName]         VARCHAR (100) NULL,
    [Email]            VARCHAR (50)  NULL,
    [MPhone]           VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ReleaseDate]      DATETIME      NULL,
    [ReleaseUser]      INT           NULL,
    [ReleaseUserNm]    VARCHAR (100) NULL,
    [StartDate]        DATETIME      NULL,
    [StartUser]        INT           NULL,
    [StartUserNm]      VARCHAR (100) NULL,
    [CloseDate]        DATETIME      NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CancelDate]       DATETIME      NULL,
    [CancelUser]       INT           NULL,
    [CancelUserNm]     VARCHAR (100) NULL,
    [CompleteDate]     DATETIME      NULL,
    [CompleteUser]     INT           NULL,
    [CompleteUserNm]   VARCHAR (100) NULL,
    [FailCode]         VARCHAR (50)  NULL,
    [DefectCode]       VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ISS_ISSUEMSTR...';


GO
ALTER TABLE [dbo].[ISS_IssueMstr]
    ADD CONSTRAINT [PK_ISS_ISSUEMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueNo]...';


GO
CREATE TABLE [dbo].[ISS_IssueNo] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IssueType]        VARCHAR (50)  NOT NULL,
    [Seq]              INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUENO...';


GO
ALTER TABLE [dbo].[ISS_IssueNo]
    ADD CONSTRAINT [PK_ISS_ISSUENO] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueType]...';


GO
CREATE TABLE [dbo].[ISS_IssueType] (
    [Code]                 VARCHAR (50)    NOT NULL,
    [Desc1]                VARCHAR (100)   NOT NULL,
    [InProcessWaitingTime] DECIMAL (18, 8) NULL,
    [CompleteWaitingTime]  DECIMAL (18, 8) NULL,
    [IsActive]             BIT             NOT NULL,
    [CreateUser]           INT             NOT NULL,
    [CreateUserNm]         VARCHAR (100)   NOT NULL,
    [CreateDate]           DATETIME        NOT NULL,
    [LastModifyUser]       INT             NOT NULL,
    [LastModifyUserNm]     VARCHAR (100)   NOT NULL,
    [LastModifyDate]       DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUETYPE...';


GO
ALTER TABLE [dbo].[ISS_IssueType]
    ADD CONSTRAINT [PK_ISS_ISSUETYPE] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueTypeToMstr]...';


GO
CREATE TABLE [dbo].[ISS_IssueTypeToMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [IssueType]        VARCHAR (50)  NOT NULL,
    [IssueLevel]       VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUETYPETOMSTR...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToMstr]
    ADD CONSTRAINT [PK_ISS_ISSUETYPETOMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueTypeToRoleDet]...';


GO
CREATE TABLE [dbo].[ISS_IssueTypeToRoleDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [IssueTypeTo]      VARCHAR (50)  NOT NULL,
    [RoleId]           INT           NOT NULL,
    [IsEmail]          BIT           NOT NULL,
    [IsSMS]            BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUETYPETOROLEDET...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToRoleDet]
    ADD CONSTRAINT [PK_ISS_ISSUETYPETOROLEDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_IssueTypeToUserDet]...';


GO
CREATE TABLE [dbo].[ISS_IssueTypeToUserDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [IssueTypeTo]      VARCHAR (50)  NOT NULL,
    [UserId]           INT           NOT NULL,
    [IsEmail]          BIT           NOT NULL,
    [IsSMS]            BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ISS_ISSUETYPETOUSERDET...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToUserDet]
    ADD CONSTRAINT [PK_ISS_ISSUETYPETOUSERDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ISS_SMSStatus]...';


GO
CREATE TABLE [dbo].[ISS_SMSStatus] (
    [Id]               INT            IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Issue]            VARCHAR (50)   NULL,
    [IssueDet]         INT            NULL,
    [IssueLevel]       VARCHAR (50)   NULL,
    [MsgID]            VARCHAR (255)  NULL,
    [SeqID]            INT            NULL,
    [SrcID]            VARCHAR (255)  NULL,
    [DestID]           VARCHAR (255)  NULL,
    [ServiceID]        VARCHAR (255)  NULL,
    [SrcTerminalId]    VARCHAR (255)  NULL,
    [SrcTerminalType]  INT            NULL,
    [MsgFmt]           INT            NULL,
    [MsgLength]        INT            NULL,
    [Status]           VARCHAR (255)  NULL,
    [Content_]         VARCHAR (1000) NULL,
    [DoneDatetime]     DATETIME       NULL,
    [SubmitDatetime]   DATETIME       NULL,
    [EventHandler]     VARCHAR (50)   NULL,
    [CreateUser]       INT            NOT NULL,
    [CreateUserNm]     VARCHAR (100)  NOT NULL,
    [CreateDate]       DATETIME       NOT NULL,
    [LastModifyUser]   INT            NOT NULL,
    [LastModifyUserNm] VARCHAR (100)  NOT NULL,
    [LastModifyDate]   DATETIME       NOT NULL
);


GO
PRINT N'Creating PK_ISS_SMSSTATUS...';


GO
ALTER TABLE [dbo].[ISS_SMSStatus]
    ADD CONSTRAINT [PK_ISS_SMSSTATUS] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_FlowDetExtraDmdSource]...';


GO
CREATE TABLE [dbo].[LE_FlowDetExtraDmdSource] (
    [FlowDetId] INT          NOT NULL,
    [Location]  VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating PK_LE_FlowDetExtraDmdSource...';


GO
ALTER TABLE [dbo].[LE_FlowDetExtraDmdSource]
    ADD CONSTRAINT [PK_LE_FlowDetExtraDmdSource] PRIMARY KEY CLUSTERED ([FlowDetId] ASC, [Location] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_FlowDetSnapShot]...';


GO
CREATE TABLE [dbo].[LE_FlowDetSnapShot] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [FlowDetId]        INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [Uom]              VARCHAR (5)     NULL,
    [UC]               DECIMAL (18, 8) NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NOT NULL,
    [IsRefFlow]        BIT             NULL,
    [SafeStock]        DECIMAL (18, 8) NULL,
    [MaxStock]         DECIMAL (18, 8) NULL,
    [MinLotSize]       DECIMAL (18, 8) NULL,
    [RoundUpOpt]       TINYINT         NULL,
    [Strategy]         TINYINT         NULL
);


GO
PRINT N'Creating PK_LE_FlowDetSnapShot_1...';


GO
ALTER TABLE [dbo].[LE_FlowDetSnapShot]
    ADD CONSTRAINT [PK_LE_FlowDetSnapShot_1] PRIMARY KEY CLUSTERED ([Item] ASC, [LocTo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_FlowDetSnapShot].[IX_FlowDetSnapshot_Flow]...';


GO
CREATE NONCLUSTERED INDEX [IX_FlowDetSnapshot_Flow]
    ON [dbo].[LE_FlowDetSnapShot]([Flow] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[LE_FlowMstrSnapShot]...';


GO
CREATE TABLE [dbo].[LE_FlowMstrSnapShot] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Flow]           VARCHAR (50)  NOT NULL,
    [Type]           TINYINT       NULL,
    [Strategy]       TINYINT       NULL,
    [PartyFrom]      VARCHAR (50)  NULL,
    [PartyTo]        VARCHAR (50)  NULL,
    [LocFrom]        VARCHAR (50)  NULL,
    [LocTo]          VARCHAR (50)  NULL,
    [Dock]           VARCHAR (50)  NULL,
    [ExtraDmdSource] VARCHAR (255) NULL,
    [OrderTime]      DATETIME      NULL,
    [ReqTimeFrom]    DATETIME      NULL,
    [ReqTimeTo]      DATETIME      NULL,
    [WindowTime]     DATETIME      NULL,
    [EMWindowTime]   DATETIME      NULL
);


GO
PRINT N'Creating PK_LE_FlowMstrSnapShot...';


GO
ALTER TABLE [dbo].[LE_FlowMstrSnapShot]
    ADD CONSTRAINT [PK_LE_FlowMstrSnapShot] PRIMARY KEY CLUSTERED ([Flow] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_LocationDetSnapshot]...';


GO
CREATE TABLE [dbo].[LE_LocationDetSnapshot] (
    [Item]     VARCHAR (50)    NOT NULL,
    [Location] VARCHAR (50)    NOT NULL,
    [Qty]      DECIMAL (18, 8) NULL
);


GO
PRINT N'Creating PK_LE_LocationDetSnapshot...';


GO
ALTER TABLE [dbo].[LE_LocationDetSnapshot]
    ADD CONSTRAINT [PK_LE_LocationDetSnapshot] PRIMARY KEY CLUSTERED ([Item] ASC, [Location] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_OrderBomCPTimeSnapshot]...';


GO
CREATE TABLE [dbo].[LE_OrderBomCPTimeSnapshot] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [VanProdLine]      VARCHAR (50)    NULL,
    [AssProdLine]      VARCHAR (50)    NULL,
    [Seq]              BIGINT          NULL,
    [SubSeq]           INT             NULL,
    [Op]               BIGINT          NULL,
    [OpTaktTime]       INT             NULL,
    [CPTime]           DATETIME        NULL,
    [Item]             VARCHAR (50)    NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [Location]         VARCHAR (50)    NULL,
    [IsCreateOrder]    BIT             NULL,
    [BomId]            INT             NULL,
    [DISPO]            VARCHAR (50)    NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NULL,
    [VanOp]            INT             NULL,
    [AssOp]            INT             NULL
);


GO
PRINT N'Creating PK_LE_OrderBomCPTimeSnapshot...';


GO
ALTER TABLE [dbo].[LE_OrderBomCPTimeSnapshot]
    ADD CONSTRAINT [PK_LE_OrderBomCPTimeSnapshot] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LE_OrderPlanSnapshot]...';


GO
CREATE TABLE [dbo].[LE_OrderPlanSnapshot] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [Item]             VARCHAR (50)    NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Location]         VARCHAR (50)    NULL,
    [ReqTime]          DATETIME        NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [IRType]           TINYINT         NULL,
    [OrderType]        TINYINT         NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [FinishQty]        DECIMAL (18, 8) NULL
);


GO
PRINT N'Creating PK_LE_OrderPlanSnapshot...';


GO
ALTER TABLE [dbo].[LE_OrderPlanSnapshot]
    ADD CONSTRAINT [PK_LE_OrderPlanSnapshot] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_GenSequenceOrder]...';


GO
CREATE TABLE [dbo].[LOG_GenSequenceOrder] (
    [Id]         BIGINT        IDENTITY (1, 1) NOT NULL,
    [SeqGroup]   VARCHAR (50)  NULL,
    [Lvl]        TINYINT       NULL,
    [Msg]        VARCHAR (500) NULL,
    [CreateDate] DATETIME      NULL
);


GO
PRINT N'Creating PK_LOG_GenSequenceOrder...';


GO
ALTER TABLE [dbo].[LOG_GenSequenceOrder]
    ADD CONSTRAINT [PK_LOG_GenSequenceOrder] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_GenVanProdOrder]...';


GO
CREATE TABLE [dbo].[LOG_GenVanProdOrder] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [AUFNR]      VARCHAR (50)  NULL,
    [ZLINE]      VARCHAR (50)  NULL,
    [ProdLine]   VARCHAR (50)  NULL,
    [BatchNo]    VARCHAR (50)  NULL,
    [Msg]        VARCHAR (500) NULL,
    [CreateDate] DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_LOG_GenVanProdOrder...';


GO
ALTER TABLE [dbo].[LOG_GenVanProdOrder]
    ADD CONSTRAINT [PK_LOG_GenVanProdOrder] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_OrderTrace]...';


GO
CREATE TABLE [dbo].[LOG_OrderTrace] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [UUID]             VARCHAR (50)    NULL,
    [Flow]             VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderDetSeq]      INT             NULL,
    [OrderDetId]       BIGINT          NULL,
    [Priority]         TINYINT         NULL,
    [StartTime]        DATETIME        NULL,
    [WindowTime]       DATETIME        NULL,
    [EMWindowTime]     DATETIME        NULL,
    [ReqTimeFrom]      DATETIME        NULL,
    [ReqTimeTo]        DATETIME        NULL,
    [Item]             VARCHAR (50)    NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [Uom]              VARCHAR (50)    NULL,
    [UC]               DECIMAL (18, 8) NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [SafeStock]        DECIMAL (18, 8) NULL,
    [MaxStock]         DECIMAL (18, 8) NULL,
    [MinLotSize]       DECIMAL (18, 8) NULL,
    [RoundUpOpt]       TINYINT         NULL,
    [ReqQty]           DECIMAL (18, 8) NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [CreateDate]       DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_LOG_ORDERTRACE...';


GO
ALTER TABLE [dbo].[LOG_OrderTrace]
    ADD CONSTRAINT [PK_LOG_ORDERTRACE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_OrderTraceDet]...';


GO
CREATE TABLE [dbo].[LOG_OrderTraceDet] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [UUID]             VARCHAR (50)    NULL,
    [Type]             VARCHAR (5)     NULL,
    [Item]             VARCHAR (50)    NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Location]         VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [ReqTime]          DATETIME        NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [FinishQty]        DECIMAL (18, 8) NULL,
    [CreateDate]       DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_LOG_ORDERTRACEDET...';


GO
ALTER TABLE [dbo].[LOG_OrderTraceDet]
    ADD CONSTRAINT [PK_LOG_ORDERTRACEDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_RunLeanEngine]...';


GO
CREATE TABLE [dbo].[LOG_RunLeanEngine] (
    [Id]         BIGINT        IDENTITY (1, 1) NOT NULL,
    [Flow]       VARCHAR (50)  NULL,
    [Item]       VARCHAR (50)  NULL,
    [LocFrom]    VARCHAR (50)  NULL,
    [LocTo]      VARCHAR (50)  NULL,
    [OrderNo]    VARCHAR (50)  NULL,
    [Lvl]        TINYINT       NULL,
    [ErrorId]    TINYINT       NULL,
    [Msg]        VARCHAR (500) NULL,
    [CreateDate] DATETIME      NULL
);


GO
PRINT N'Creating PK_LOG_RunLeanEngine...';


GO
ALTER TABLE [dbo].[LOG_RunLeanEngine]
    ADD CONSTRAINT [PK_LOG_RunLeanEngine] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_VanOrderBomTrace]...';


GO
CREATE TABLE [dbo].[LOG_VanOrderBomTrace] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [UUID]             VARCHAR (50)    NULL,
    [ProdLine]         VARCHAR (50)    NULL,
    [VanOrderNo]       VARCHAR (50)    NULL,
    [VanOrderBomDetId] INT             NULL,
    [Item]             VARCHAR (50)    NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [CPTime]           DATETIME        NULL,
    [CreateDate]       DATETIME        NULL
);


GO
PRINT N'Creating PK_LOG_VanOrderBomTrace...';


GO
ALTER TABLE [dbo].[LOG_VanOrderBomTrace]
    ADD CONSTRAINT [PK_LOG_VanOrderBomTrace] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[LOG_VanOrderTrace]...';


GO
CREATE TABLE [dbo].[LOG_VanOrderTrace] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [UUID]             VARCHAR (50)    NULL,
    [Flow]             VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderDetSeq]      INT             NULL,
    [OrderDetId]       BIGINT          NULL,
    [Priority]         TINYINT         NULL,
    [StartTime]        DATETIME        NULL,
    [WindowTime]       DATETIME        NULL,
    [EMWindowTime]     DATETIME        NULL,
    [ReqTimeFrom]      DATETIME        NULL,
    [ReqTimeTo]        DATETIME        NULL,
    [Item]             VARCHAR (50)    NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [Uom]              VARCHAR (50)    NULL,
    [UC]               DECIMAL (18, 8) NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Location]         VARCHAR (50)    NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [NetOrderQty]      DECIMAL (18, 8) NULL,
    [OrgOpRefQty]      DECIMAL (18, 8) NULL,
    [GrossOrderQty]    DECIMAL (18, 8) NULL,
    [OpRefQty]         DECIMAL (18, 8) NULL,
    [CreateDate]       DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_LOG_JITORDERTRACE...';


GO
ALTER TABLE [dbo].[LOG_VanOrderTrace]
    ADD CONSTRAINT [PK_LOG_JITORDERTRACE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Address]...';


GO
CREATE TABLE [dbo].[MD_Address] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [Address]          VARCHAR (256) NULL,
    [PostCode]         VARCHAR (50)  NULL,
    [TelPhone]         VARCHAR (50)  NULL,
    [MobilePhone]      VARCHAR (50)  NULL,
    [Fax]              VARCHAR (50)  NULL,
    [Email]            VARCHAR (50)  NULL,
    [ContactPsnNm]     VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_ADDRESS...';


GO
ALTER TABLE [dbo].[MD_Address]
    ADD CONSTRAINT [PK_MD_ADDRESS] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Container]...';


GO
CREATE TABLE [dbo].[MD_Container] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [InvType]          TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_CONTAINER...';


GO
ALTER TABLE [dbo].[MD_Container]
    ADD CONSTRAINT [PK_MD_CONTAINER] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Currency]...';


GO
CREATE TABLE [dbo].[MD_Currency] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (50)  NOT NULL,
    [IsBase]           BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_CURRENCY...';


GO
ALTER TABLE [dbo].[MD_Currency]
    ADD CONSTRAINT [PK_MD_CURRENCY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Custodian]...';


GO
CREATE TABLE [dbo].[MD_Custodian] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [UserCode]         VARCHAR (50)  NULL,
    [Location]         VARCHAR (50)  NULL,
    [Item]             VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[MD_Customer]...';


GO
CREATE TABLE [dbo].[MD_Customer] (
    [Code] VARCHAR (50) NOT NULL
);


GO
PRINT N'Creating PK_MD_CUSTOMER...';


GO
ALTER TABLE [dbo].[MD_Customer]
    ADD CONSTRAINT [PK_MD_CUSTOMER] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_FinanceCalendar]...';


GO
CREATE TABLE [dbo].[MD_FinanceCalendar] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [FinanceYear]      INT           NOT NULL,
    [FinanceMonth]     INT           NOT NULL,
    [StartDate]        DATETIME      NOT NULL,
    [EndDate]          DATETIME      NOT NULL,
    [IsClose]          BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_FINANCECALENDAR...';


GO
ALTER TABLE [dbo].[MD_FinanceCalendar]
    ADD CONSTRAINT [PK_MD_FINANCECALENDAR] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Item]...';


GO
CREATE TABLE [dbo].[MD_Item] (
    [Code]             VARCHAR (50)    NOT NULL,
    [RefCode]          VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [Desc1]            VARCHAR (100)   NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [ItemCategory]     VARCHAR (50)    NULL,
    [IsActive]         BIT             NOT NULL,
    [IsPurchase]       BIT             NOT NULL,
    [IsSales]          BIT             NOT NULL,
    [IsManufacture]    BIT             NOT NULL,
    [IsSubContract]    BIT             NOT NULL,
    [IsCustomerGoods]  BIT             NOT NULL,
    [IsVirtual]        BIT             NOT NULL,
    [IsKit]            BIT             NOT NULL,
    [IsInvFreeze]      BIT             NOT NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Location]         VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [Warranty]         INT             NOT NULL,
    [WarnLeadTime]     INT             NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [ShortCode]        VARCHAR (10)    NULL,
    [MinUC]            DECIMAL (18, 8) NULL,
    [SpecifiedModel]   VARCHAR (100)   NULL,
    [NotBackFlush]     BIT             NULL,
    [DISPO]            VARCHAR (100)   NULL,
    [PLIFZ]            VARCHAR (100)   NULL
);


GO
PRINT N'Creating PK_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_Item]
    ADD CONSTRAINT [PK_MD_ITEM] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Item].[IX_MD_Item_ShortCode]...';


GO
CREATE NONCLUSTERED INDEX [IX_MD_Item_ShortCode]
    ON [dbo].[MD_Item]([ShortCode] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[MD_ItemCategory]...';


GO
CREATE TABLE [dbo].[MD_ItemCategory] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [ParentCategory]   VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMCATEGORY...';


GO
ALTER TABLE [dbo].[MD_ItemCategory]
    ADD CONSTRAINT [PK_MD_ITEMCATEGORY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_ItemDiscon]...';


GO
CREATE TABLE [dbo].[MD_ItemDiscon] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [DisconItem]       VARCHAR (50)    NOT NULL,
    [Bom]              VARCHAR (50)    NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [Priority]         INT             NOT NULL,
    [StartDate]        DATETIME        NOT NULL,
    [EndDate]          DATETIME        NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMDISCON...';


GO
ALTER TABLE [dbo].[MD_ItemDiscon]
    ADD CONSTRAINT [PK_MD_ITEMDISCON] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_ItemKit]...';


GO
CREATE TABLE [dbo].[MD_ItemKit] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [KitItem]          VARCHAR (50)    NOT NULL,
    [ChildItem]        VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsActive]         BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMKIT...';


GO
ALTER TABLE [dbo].[MD_ItemKit]
    ADD CONSTRAINT [PK_MD_ITEMKIT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_ItemPackage]...';


GO
CREATE TABLE [dbo].[MD_ItemPackage] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Desc1]            VARCHAR (100)   NOT NULL,
    [IsDefault]        BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMPACKAGE...';


GO
ALTER TABLE [dbo].[MD_ItemPackage]
    ADD CONSTRAINT [PK_MD_ITEMPACKAGE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_ItemPackage_bak]...';


GO
CREATE TABLE [dbo].[MD_ItemPackage_bak] (
    [Id]               INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [Desc1]            VARCHAR (100)   NOT NULL,
    [IsDefault]        BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMPACKAG_bakE...';


GO
ALTER TABLE [dbo].[MD_ItemPackage_bak]
    ADD CONSTRAINT [PK_MD_ITEMPACKAG_bakE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_ItemRef]...';


GO
CREATE TABLE [dbo].[MD_ItemRef] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [Party]            VARCHAR (50)  NULL,
    [RefCode]          VARCHAR (50)  NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_ITEMREF...';


GO
ALTER TABLE [dbo].[MD_ItemRef]
    ADD CONSTRAINT [PK_MD_ITEMREF] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Location]...';


GO
CREATE TABLE [dbo].[MD_Location] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (50)  NOT NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [AllowNegaInv]     BIT           NOT NULL,
    [EnableAdvWM]      BIT           NOT NULL,
    [IsCS]             BIT           NOT NULL,
    [IsMRP]            BIT           NOT NULL,
    [IsInvFreeze]      BIT           NOT NULL,
    [SAPLocation]      VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [PartSuffix]       VARCHAR (10)  NULL
);


GO
PRINT N'Creating PK_MD_LOCATION...';


GO
ALTER TABLE [dbo].[MD_Location]
    ADD CONSTRAINT [PK_MD_LOCATION] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_LocationArea]...';


GO
CREATE TABLE [dbo].[MD_LocationArea] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (100) NOT NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_LOCATIONAREA...';


GO
ALTER TABLE [dbo].[MD_LocationArea]
    ADD CONSTRAINT [PK_MD_LOCATIONAREA] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_LocationBin]...';


GO
CREATE TABLE [dbo].[MD_LocationBin] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (100) NOT NULL,
    [Area]             VARCHAR (50)  NOT NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [Seq]              INT           NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_LOCATIONBIN...';


GO
ALTER TABLE [dbo].[MD_LocationBin]
    ADD CONSTRAINT [PK_MD_LOCATIONBIN] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Party]...';


GO
CREATE TABLE [dbo].[MD_Party] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_Party]
    ADD CONSTRAINT [PK_MD_PARTY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_PartyAddr]...';


GO
CREATE TABLE [dbo].[MD_PartyAddr] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Party]            VARCHAR (50)  NOT NULL,
    [Address]          VARCHAR (50)  NOT NULL,
    [IsPrimary]        BIT           NOT NULL,
    [Seq]              INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_PARTYADDR...';


GO
ALTER TABLE [dbo].[MD_PartyAddr]
    ADD CONSTRAINT [PK_MD_PARTYADDR] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Picker]...';


GO
CREATE TABLE [dbo].[MD_Picker] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Code]             VARCHAR (50)  NOT NULL,
    [Decs1]            VARCHAR (100) NOT NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [UserCode]         VARCHAR (50)  NOT NULL,
    [UserNm]           VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[MD_PickRule]...';


GO
CREATE TABLE [dbo].[MD_PickRule] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [ItemDesc]         VARCHAR (100) NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [Picker]           VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[MD_Region]...';


GO
CREATE TABLE [dbo].[MD_Region] (
    [Code]     VARCHAR (50) NOT NULL,
    [Plant]    VARCHAR (50) NULL,
    [Workshop] VARCHAR (50) NULL
);


GO
PRINT N'Creating PK_MD_REGION...';


GO
ALTER TABLE [dbo].[MD_Region]
    ADD CONSTRAINT [PK_MD_REGION] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Shipper]...';


GO
CREATE TABLE [dbo].[MD_Shipper] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [Location]         VARCHAR (50)  NULL,
    [Address]          VARCHAR (50)  NULL,
    [Contact]          VARCHAR (50)  NULL,
    [Tel]              VARCHAR (50)  NULL,
    [Email]            VARCHAR (50)  NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[MD_SpecialTime]...';


GO
CREATE TABLE [dbo].[MD_SpecialTime] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Region]           VARCHAR (50)  NULL,
    [StartTime]        DATETIME      NOT NULL,
    [EndTime]          DATETIME      NOT NULL,
    [Desc1]            VARCHAR (100) NULL,
    [Type]             TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ProdLine]         VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_MD_SPECIALTIME...';


GO
ALTER TABLE [dbo].[MD_SpecialTime]
    ADD CONSTRAINT [PK_MD_SPECIALTIME] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Supplier]...';


GO
CREATE TABLE [dbo].[MD_Supplier] (
    [Code]            VARCHAR (50) NOT NULL,
    [ShortCode]       VARCHAR (50) NULL,
    [LastRefreshDate] DATETIME     NULL
);


GO
PRINT N'Creating PK_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[MD_Supplier]
    ADD CONSTRAINT [PK_MD_SUPPLIER] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Supplier].[IX_MD_Supplier_ShortCode]...';


GO
CREATE NONCLUSTERED INDEX [IX_MD_Supplier_ShortCode]
    ON [dbo].[MD_Supplier]([ShortCode] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[MD_Tax]...';


GO
CREATE TABLE [dbo].[MD_Tax] (
    [Code]             VARCHAR (50)    NOT NULL,
    [Name]             VARCHAR (50)    NOT NULL,
    [Rate]             DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_TAX...';


GO
ALTER TABLE [dbo].[MD_Tax]
    ADD CONSTRAINT [PK_MD_TAX] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_Uom]...';


GO
CREATE TABLE [dbo].[MD_Uom] (
    [Code]             VARCHAR (5)   NOT NULL,
    [Desc1]            VARCHAR (20)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_UOM...';


GO
ALTER TABLE [dbo].[MD_Uom]
    ADD CONSTRAINT [PK_MD_UOM] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_UomConv]...';


GO
CREATE TABLE [dbo].[MD_UomConv] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Item]             VARCHAR (50)    NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [AltUom]           VARCHAR (5)     NOT NULL,
    [BaseQty]          DECIMAL (18, 8) NOT NULL,
    [AltQty]           DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_MD_UOMCONV...';


GO
ALTER TABLE [dbo].[MD_UomConv]
    ADD CONSTRAINT [PK_MD_UOMCONV] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_UomConv].[Index_1]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [Index_1]
    ON [dbo].[MD_UomConv]([Item] ASC, [BaseUom] ASC, [AltUom] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[MD_WorkCenter]...';


GO
CREATE TABLE [dbo].[MD_WorkCenter] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Location]         VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_WORKCENTER...';


GO
ALTER TABLE [dbo].[MD_WorkCenter]
    ADD CONSTRAINT [PK_MD_WORKCENTER] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MD_WorkingCalendar]...';


GO
CREATE TABLE [dbo].[MD_WorkingCalendar] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Region]           VARCHAR (50)  NULL,
    [DayOfWeek]        TINYINT       NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MD_WORKINGCALENDAR...';


GO
ALTER TABLE [dbo].[MD_WorkingCalendar]
    ADD CONSTRAINT [PK_MD_WORKINGCALENDAR] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MSG_Email]...';


GO
CREATE TABLE [dbo].[MSG_Email] (
    [Id]             INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Subject]        VARCHAR (256) NOT NULL,
    [Body]           TEXT          NOT NULL,
    [MailTo]         VARCHAR (256) NOT NULL,
    [ReplayTo]       VARCHAR (256) NULL,
    [Priority]       TINYINT       NOT NULL,
    [Status]         TINYINT       NOT NULL,
    [CreateDate]     DATETIME      NOT NULL,
    [LastModifyDate] DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MSG_EMAIL...';


GO
ALTER TABLE [dbo].[MSG_Email]
    ADD CONSTRAINT [PK_MSG_EMAIL] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MSG_Message]...';


GO
CREATE TABLE [dbo].[MSG_Message] (
    [Id]             INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [SendTo]         VARCHAR (256) NOT NULL,
    [Content]        VARCHAR (256) NOT NULL,
    [Priority]       TINYINT       NOT NULL,
    [Status]         TINYINT       NOT NULL,
    [CreateDate]     DATETIME      NOT NULL,
    [LastModifyDate] DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_MSG_MESSAGE...';


GO
ALTER TABLE [dbo].[MSG_Message]
    ADD CONSTRAINT [PK_MSG_MESSAGE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[MSG_MessageQueue]...';


GO
CREATE TABLE [dbo].[MSG_MessageQueue] (
    [Id]             INT          IDENTITY (1, 1) NOT NULL,
    [MethodName]     VARCHAR (50) NOT NULL,
    [ParamValue]     VARCHAR (50) NOT NULL,
    [CreateTime]     DATETIME     NULL,
    [Status]         TINYINT      NOT NULL,
    [LastModifyDate] DATETIME     NOT NULL,
    [ErrorCount]     INT          NOT NULL
);


GO
PRINT N'Creating PK_MSG_MessageQueue...';


GO
ALTER TABLE [dbo].[MSG_MessageQueue]
    ADD CONSTRAINT [PK_MSG_MessageQueue] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_AliquotStartTask]...';


GO
CREATE TABLE [dbo].[ORD_AliquotStartTask] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Flow]             VARCHAR (50)  NOT NULL,
    [VanNo]            VARCHAR (50)  NULL,
    [IsStart]          BIT           NOT NULL,
    [StartTime]        DATETIME      NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [OrderNo]          VARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF)
);


GO
PRINT N'Creating [dbo].[ORD_ContOrderDet]...';


GO
CREATE TABLE [dbo].[ORD_ContOrderDet] (
    [Id]           INT             NOT NULL,
    [OrderNo]      VARCHAR (50)    NOT NULL,
    [Container]    VARCHAR (50)    NOT NULL,
    [ContId]       VARCHAR (50)    NULL,
    [Qty]          DECIMAL (18, 8) NOT NULL,
    [CreateUser]   INT             NOT NULL,
    [CreateUserNm] VARCHAR (100)   NOT NULL,
    [CreateDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ORD_CONTORDERDET...';


GO
ALTER TABLE [dbo].[ORD_ContOrderDet]
    ADD CONSTRAINT [PK_ORD_CONTORDERDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_ContOrderMstr]...';


GO
CREATE TABLE [dbo].[ORD_ContOrderMstr] (
    [OrderNo]      VARCHAR (50)  NOT NULL,
    [RefOrderNo]   VARCHAR (50)  NULL,
    [LocationFrom] VARCHAR (50)  NOT NULL,
    [LocationTo]   VARCHAR (50)  NOT NULL,
    [IsEmpty]      BIT           NOT NULL,
    [IsPrint]      BIT           NOT NULL,
    [CreateUser]   INT           NOT NULL,
    [CreateUserNm] VARCHAR (100) NOT NULL,
    [CreateDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ORD_CONTORDERMSTR...';


GO
ALTER TABLE [dbo].[ORD_ContOrderMstr]
    ADD CONSTRAINT [PK_ORD_CONTORDERMSTR] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet]...';


GO
CREATE TABLE [dbo].[ORD_IpDet] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0...';


GO
ALTER TABLE [dbo].[ORD_IpDet]
    ADD CONSTRAINT [PK_ORD_IpDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_0]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_0] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_0...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0]
    ADD CONSTRAINT [PK_ORD_IpDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_1]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_1] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_1...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1]
    ADD CONSTRAINT [PK_ORD_IpDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_2]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_2] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_2...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2]
    ADD CONSTRAINT [PK_ORD_IpDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_3]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_3] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_3...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3]
    ADD CONSTRAINT [PK_ORD_IpDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_4]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_4] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_4...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4]
    ADD CONSTRAINT [PK_ORD_IpDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_5]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_5] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_5...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5]
    ADD CONSTRAINT [PK_ORD_IpDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_6]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_6] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_6...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6]
    ADD CONSTRAINT [PK_ORD_IpDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_7]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_7] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_7...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7]
    ADD CONSTRAINT [PK_ORD_IpDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpDet_8]...';


GO
CREATE TABLE [dbo].[ORD_IpDet_8] (
    [Id]               INT             NOT NULL,
    [Type]             TINYINT         NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [GapRecNo]         VARCHAR (50)    NULL,
    [GapIpDetId]       INT             NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [Windowtime]       DATETIME        NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsScanHu]         BIT             NOT NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [PSTYP]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpDet_0_8...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8]
    ADD CONSTRAINT [PK_ORD_IpDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_0]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_0] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_0...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_0]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_1]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_1] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_1...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_1]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_2]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_2] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_2...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_2]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_3]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_3] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_3...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_3]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_4]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_4] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_4...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_4]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_5]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_5] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_5...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_5]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_6]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_6] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_6...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_6]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_7]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_7] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_7...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_7]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpLocationDet_8]...';


GO
CREATE TABLE [dbo].[ORD_IpLocationDet_8] (
    [Id]               INT             NOT NULL,
    [IpNo]             VARCHAR (50)    NOT NULL,
    [IpDetId]          INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_IpLocationDet_0_8...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_8]
    ADD CONSTRAINT [PK_ORD_IpLocationDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0...';


GO
ALTER TABLE [dbo].[ORD_IpMstr]
    ADD CONSTRAINT [PK_ORD_IpMstr_0] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_0]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_0] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_0...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_0]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_0] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_1]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_1] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_1...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_1]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_1] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_2]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_2] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_2...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_2]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_2] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_3]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_3] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_3...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_3]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_3] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_4]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_4] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_4...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_4]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_4] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_5]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_5] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_5...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_5]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_5] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_6]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_6] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_6...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_6]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_6] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_7]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_7] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_7...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_7]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_7] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_IpMstr_8]...';


GO
CREATE TABLE [dbo].[ORD_IpMstr_8] (
    [IpNo]                 VARCHAR (50)  NOT NULL,
    [ExtIpNo]              VARCHAR (50)  NULL,
    [GapIpNo]              VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [DepartTime]           DATETIME      NOT NULL,
    [ArriveTime]           DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsAsnPrinted]         BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CloseReason]          VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [ShipNo]               VARCHAR (50)  NULL,
    [Vehicle]              VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_IpMstr_0_8...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_8]
    ADD CONSTRAINT [PK_ORD_IpMstr_0_8] PRIMARY KEY CLUSTERED ([IpNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_KBOrderBomDet]...';


GO
CREATE TABLE [dbo].[ORD_KBOrderBomDet] (
    [Id]               INT          NOT NULL,
    [OrderBomDetId]    INT          NOT NULL,
    [Flow]             VARCHAR (50) NOT NULL,
    [CreateUser]       INT          NOT NULL,
    [CreateUserNm]     VARCHAR (50) NOT NULL,
    [CreateDate]       DATETIME     NOT NULL,
    [LastModifyUser]   INT          NULL,
    [LastModifyUserNm] VARCHAR (50) NULL,
    [LastModifyDate]   DATETIME     NULL
);


GO
PRINT N'Creating [dbo].[ORD_MiscOrderDet]...';


GO
CREATE TABLE [dbo].[ORD_MiscOrderDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [MiscOrderNo]      VARCHAR (50)    NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [Location]         VARCHAR (50)    NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [EBELN]            VARCHAR (50)    NULL,
    [EBELP]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_MISCORDERDET...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet]
    ADD CONSTRAINT [PK_ORD_MISCORDERDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_MiscOrderLocationDet]...';


GO
CREATE TABLE [dbo].[ORD_MiscOrderLocationDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [MiscOrderDetId]   INT             NOT NULL,
    [MiscOrderDetSeq]  INT             NOT NULL,
    [MiscOrderNo]      VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [CSSupplier]       VARCHAR (50)    NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ORD_MISCORDERLOCATIONDET...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet]
    ADD CONSTRAINT [PK_ORD_MISCORDERLOCATIONDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_MiscOrderMstr]...';


GO
CREATE TABLE [dbo].[ORD_MiscOrderMstr] (
    [MiscOrderNo]      VARCHAR (50)  NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [Status]           TINYINT       NOT NULL,
    [IsScanHu]         BIT           NOT NULL,
    [MoveType]         VARCHAR (5)   NOT NULL,
    [CancelMoveType]   VARCHAR (5)   NOT NULL,
    [QualityType]      TINYINT       NOT NULL,
    [Region]           VARCHAR (50)  NOT NULL,
    [Location]         VARCHAR (50)  NOT NULL,
    [RecLoc]           VARCHAR (50)  NULL,
    [Note]             VARCHAR (256) NULL,
    [CostCenter]       VARCHAR (50)  NULL,
    [Asn]              VARCHAR (50)  NULL,
    [RefNo]            VARCHAR (50)  NULL,
    [DeliverRegion]    VARCHAR (50)  NULL,
    [WBS]              VARCHAR (50)  NULL,
    [EffDate]          DATETIME      NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CloseDate]        DATETIME      NULL,
    [CancelUser]       INT           NULL,
    [CancelUserNm]     VARCHAR (100) NULL,
    [CancelDate]       DATETIME      NULL,
    [Version]          INT           NOT NULL,
    [WMSNo]            VARCHAR (50)  NULL,
    [Consignment]      BIT           NULL,
    [ManufactureParty] VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_MISCORDERMSTR...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderMstr]
    ADD CONSTRAINT [PK_ORD_MISCORDERMSTR] PRIMARY KEY CLUSTERED ([MiscOrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBackflushDet]...';


GO
CREATE TABLE [dbo].[ORD_OrderBackflushDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [OrderBomDetId]    INT             NULL,
    [OrderBomDetSeq]   INT             NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [RecDetId]         INT             NULL,
    [RecDetSeq]        INT             NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [TraceCode]        VARCHAR (50)    NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Op]               INT             NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [BFQty]            DECIMAL (18, 8) NOT NULL,
    [BFRejQty]         DECIMAL (18, 8) NOT NULL,
    [BFScrapQty]       DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NOT NULL,
    [ProdLine]         VARCHAR (50)    NOT NULL,
    [ProdLineFact]     VARCHAR (50)    NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [PlanBill]         INT             NULL,
    [EffDate]          DATETIME        NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [NotReport]        BIT             NOT NULL,
    [FGItem]           VARCHAR (50)    NOT NULL,
    [IsVoid]           BIT             NOT NULL,
    [ProdSeqReportId]  INT             NULL,
    [OrderOpId]        INT             NULL,
    [WorkCenter]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_ORDERBACKFLUSHDET...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet]
    ADD CONSTRAINT [PK_ORD_ORDERBACKFLUSHDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBinding]...';


GO
CREATE TABLE [dbo].[ORD_OrderBinding] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [BindFlow]         VARCHAR (50)  NOT NULL,
    [BindFlowStrategy] TINYINT       NOT NULL,
    [BindOrderNo]      VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL,
    [BindType]         TINYINT       NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDERBINDING...';


GO
ALTER TABLE [dbo].[ORD_OrderBinding]
    ADD CONSTRAINT [PK_ORD_ORDERBINDING] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBindingDet]...';


GO
CREATE TABLE [dbo].[ORD_OrderBindingDet] (
    [Id]               INT           NOT NULL,
    [OrderBindingId]   INT           NOT NULL,
    [OrderNo]          VARCHAR (50)  NOT NULL,
    [BindOrderNo]      VARCHAR (50)  NOT NULL,
    [OrderDetId]       INT           NOT NULL,
    [BindOrderDetId]   INT           NOT NULL,
    [OrderBomDetId]    INT           NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDERBINDINGDET...';


GO
ALTER TABLE [dbo].[ORD_OrderBindingDet]
    ADD CONSTRAINT [PK_ORD_ORDERBINDINGDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBomCPTime]...';


GO
CREATE TABLE [dbo].[ORD_OrderBomCPTime] (
    [Id]               BIGINT          IDENTITY (1, 1) NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [VanProdLine]      VARCHAR (50)    NULL,
    [AssProdLine]      VARCHAR (50)    NULL,
    [Seq]              BIGINT          NULL,
    [SubSeq]           INT             NULL,
    [Op]               INT             NULL,
    [OpTaktTime]       INT             NULL,
    [CPTime]           DATETIME        NULL,
    [Item]             VARCHAR (50)    NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [OrderQty]         DECIMAL (18, 8) NULL,
    [Location]         VARCHAR (50)    NULL,
    [IsCreateOrder]    BIT             NULL,
    [BomId]            INT             NULL,
    [DISPO]            VARCHAR (50)    NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NULL,
    [VanOp]            INT             NULL,
    [AssOp]            INT             NULL,
    [WorkCenter]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_OrderBomCPTime...';


GO
ALTER TABLE [dbo].[ORD_OrderBomCPTime]
    ADD CONSTRAINT [PK_ORD_OrderBomCPTime] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBomDet]...';


GO
CREATE TABLE [dbo].[ORD_OrderBomDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NOT NULL,
    [OrderDetSeq]      INT             NOT NULL,
    [Seq]              INT             NOT NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Op]               INT             NOT NULL,
    [OpRef]            VARCHAR (50)    NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [BFQty]            DECIMAL (18, 8) NOT NULL,
    [BFRejQty]         DECIMAL (18, 8) NOT NULL,
    [BFScrapQty]       DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [BomUnitQty]       DECIMAL (18, 8) NOT NULL,
    [Location]         VARCHAR (50)    NULL,
    [IsPrint]          BIT             NOT NULL,
    [BackFlushMethod]  TINYINT         NOT NULL,
    [FeedMethod]       TINYINT         NOT NULL,
    [IsAutoFeed]       BIT             NOT NULL,
    [IsScanHu]         BIT             NOT NULL,
    [EstConsumeTime]   DATETIME        NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [AssProdLine]      VARCHAR (50)    NULL,
    [IsCreateOrder]    BIT             NULL,
    [DISPO]            VARCHAR (50)    NULL,
    [BESKZ]            VARCHAR (100)   NULL,
    [SOBSL]            VARCHAR (100)   NULL,
    [JointOp]          INT             NULL,
    [WorkCenter]       VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_ORDERBOMDET...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet]
    ADD CONSTRAINT [PK_ORD_ORDERBOMDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderBomDet].[IX_ORD_OrderBomDet_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderBomDet_OrderNo]
    ON [dbo].[ORD_OrderBomDet]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0...';


GO
ALTER TABLE [dbo].[ORD_OrderDet]
    ADD CONSTRAINT [PK_ORD_OrderDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_0]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_0] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_0...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_1]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_1] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_1...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_1].[IX_ORD_OrderDet_1_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_1_OrderNo]
    ON [dbo].[ORD_OrderDet_1]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_2]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_2] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_2...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_2].[IX_ORD_OrderDet_2_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_2_OrderNo]
    ON [dbo].[ORD_OrderDet_2]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_3]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_3] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_3...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_3].[IX_ORD_OrderDet_3_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_3_OrderNo]
    ON [dbo].[ORD_OrderDet_3]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_4]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_4] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_4...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_4].[IX_ORD_OrderDet_4_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_4_OrderNo]
    ON [dbo].[ORD_OrderDet_4]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_5]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_5] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_5...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_5].[IX_ORD_OrderDet_5_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_5_OrderNo]
    ON [dbo].[ORD_OrderDet_5]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_6]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_6] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_6...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_6].[IX_ORD_OrderDet_6_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_6_OrderNo]
    ON [dbo].[ORD_OrderDet_6]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_7]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_7] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_7...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_7].[IX_ORD_OrderDet_7_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_7_OrderNo]
    ON [dbo].[ORD_OrderDet_7]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_8]...';


GO
CREATE TABLE [dbo].[ORD_OrderDet_8] (
    [Id]               INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [Seq]              INT             NOT NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [ScheduleType]     TINYINT         NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [ReqQty]           DECIMAL (18, 8) NOT NULL,
    [OrderQty]         DECIMAL (18, 8) NOT NULL,
    [ShipQty]          DECIMAL (18, 8) NOT NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [RejQty]           DECIMAL (18, 8) NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [PickQty]          DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [BillAddrDesc]     VARCHAR (256)   NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [Currency]         VARCHAR (50)    NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [BillTerm]         TINYINT         NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [IsScanHu]         BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [ZOPWZ]            VARCHAR (50)    NULL,
    [ZOPID]            VARCHAR (50)    NULL,
    [ZOPDS]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [WMSSeq]           VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderDet_0_8...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8]
    ADD CONSTRAINT [PK_ORD_OrderDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderDet_8].[extno_extseq]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [extno_extseq]
    ON [dbo].[ORD_OrderDet_8]([ExtNo] ASC, [ExtSeq] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderDet_8].[IX_ORD_OrderDet_8_OrderNo]...';


GO
CREATE NONCLUSTERED INDEX [IX_ORD_OrderDet_8_OrderNo]
    ON [dbo].[ORD_OrderDet_8]([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderItemTrace]...';


GO
CREATE TABLE [dbo].[ORD_OrderItemTrace] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderBomId]       INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Op]               INT             NOT NULL,
    [OpRef]            VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [ScanQty]          DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDERITEMTRACE...';


GO
ALTER TABLE [dbo].[ORD_OrderItemTrace]
    ADD CONSTRAINT [PK_ORD_ORDERITEMTRACE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderItemTraceResult]...';


GO
CREATE TABLE [dbo].[ORD_OrderItemTraceResult] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderItemTraceId] INT           NULL,
    [BarCode]          VARCHAR (50)  NOT NULL,
    [Supplier]         VARCHAR (50)  NULL,
    [LotNo]            VARCHAR (50)  NULL,
    [OpRef]            VARCHAR (50)  NULL,
    [Item]             VARCHAR (50)  NULL,
    [ItemDesc]         VARCHAR (100) NULL,
    [RefItemCode]      VARCHAR (50)  NULL,
    [BomId]            INT           NULL,
    [OrderNo]          VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [IsWithdraw]       BIT           NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDERITEMTRACERESULT...';


GO
ALTER TABLE [dbo].[ORD_OrderItemTraceResult]
    ADD CONSTRAINT [PK_ORD_ORDERITEMTRACERESULT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr]
    ADD CONSTRAINT [PK_ORD_OrderMstr] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_0]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_0] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_0...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0]
    ADD CONSTRAINT [PK_ORD_OrderMstr_0] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_1]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_1] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_1...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1]
    ADD CONSTRAINT [PK_ORD_OrderMstr_1] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_2]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_2] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2]
    ADD CONSTRAINT [PK_ORD_OrderMstr_2] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_3]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_3] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_3...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3]
    ADD CONSTRAINT [PK_ORD_OrderMstr_3] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_4]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_4] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_4...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4]
    ADD CONSTRAINT [PK_ORD_OrderMstr_4] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_5]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_5] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_5...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5]
    ADD CONSTRAINT [PK_ORD_OrderMstr_5] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_6]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_6] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_6...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6]
    ADD CONSTRAINT [PK_ORD_OrderMstr_6] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_7]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_7] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_7...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7]
    ADD CONSTRAINT [PK_ORD_OrderMstr_7] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_8]...';


GO
CREATE TABLE [dbo].[ORD_OrderMstr_8] (
    [OrderNo]             VARCHAR (50)  NOT NULL,
    [Flow]                VARCHAR (50)  NULL,
    [ProdLineFact]        VARCHAR (50)  NULL,
    [TraceCode]           VARCHAR (50)  NULL,
    [OrderStrategy]       TINYINT       NOT NULL,
    [RefOrderNo]          VARCHAR (50)  NULL,
    [ExtOrderNo]          VARCHAR (50)  NULL,
    [Type]                TINYINT       NOT NULL,
    [SubType]             TINYINT       NOT NULL,
    [QualityType]         TINYINT       NOT NULL,
    [StartTime]           DATETIME      NOT NULL,
    [WindowTime]          DATETIME      NOT NULL,
    [PauseSeq]            INT           NOT NULL,
    [PauseTime]           DATETIME      NULL,
    [EffDate]             DATETIME      NULL,
    [IsQuick]             BIT           NOT NULL,
    [Priority]            TINYINT       NOT NULL,
    [Status]              TINYINT       NOT NULL,
    [PartyFrom]           VARCHAR (50)  NOT NULL,
    [PartyFromNm]         VARCHAR (100) NULL,
    [PartyTo]             VARCHAR (50)  NOT NULL,
    [PartyToNm]           VARCHAR (100) NULL,
    [ShipFrom]            VARCHAR (50)  NULL,
    [ShipFromAddr]        VARCHAR (256) NULL,
    [ShipFromTel]         VARCHAR (50)  NULL,
    [ShipFromCell]        VARCHAR (50)  NULL,
    [ShipFromFax]         VARCHAR (50)  NULL,
    [ShipFromContact]     VARCHAR (50)  NULL,
    [ShipTo]              VARCHAR (50)  NULL,
    [ShipToAddr]          VARCHAR (256) NULL,
    [ShipToTel]           VARCHAR (50)  NULL,
    [ShipToCell]          VARCHAR (50)  NULL,
    [ShipToFax]           VARCHAR (50)  NULL,
    [ShipToContact]       VARCHAR (50)  NULL,
    [Shift]               VARCHAR (50)  NULL,
    [LocFrom]             VARCHAR (50)  NULL,
    [LocFromNm]           VARCHAR (100) NULL,
    [LocTo]               VARCHAR (50)  NULL,
    [LocToNm]             VARCHAR (100) NULL,
    [IsInspect]           BIT           NOT NULL,
    [BillAddr]            VARCHAR (50)  NULL,
    [BillAddrDesc]        VARCHAR (256) NULL,
    [PriceList]           VARCHAR (50)  NULL,
    [Currency]            VARCHAR (50)  NULL,
    [Dock]                VARCHAR (100) NULL,
    [Routing]             VARCHAR (50)  NULL,
    [CurtOp]              INT           NULL,
    [IsAutoRelease]       BIT           NOT NULL,
    [IsAutoStart]         BIT           NOT NULL,
    [IsAutoShip]          BIT           NOT NULL,
    [IsAutoReceive]       BIT           NOT NULL,
    [IsAutoBill]          BIT           NOT NULL,
    [IsManualCreateDet]   BIT           NOT NULL,
    [IsListPrice]         BIT           NOT NULL,
    [IsPrintOrder]        BIT           NOT NULL,
    [IsOrderPrinted]      BIT           NOT NULL,
    [IsPrintAsn]          BIT           NOT NULL,
    [IsPrintRec]          BIT           NOT NULL,
    [IsShipExceed]        BIT           NOT NULL,
    [IsRecExceed]         BIT           NOT NULL,
    [IsOrderFulfillUC]    BIT           NOT NULL,
    [IsShipFulfillUC]     BIT           NOT NULL,
    [IsRecFulfillUC]      BIT           NOT NULL,
    [IsShipScanHu]        BIT           NOT NULL,
    [IsRecScanHu]         BIT           NOT NULL,
    [IsCreatePL]          BIT           NOT NULL,
    [IsPLCreate]          BIT           NOT NULL,
    [IsShipFifo]          BIT           NOT NULL,
    [IsRecFifo]           BIT           NOT NULL,
    [IsShipByOrder]       BIT           NOT NULL,
    [IsOpenOrder]         BIT           NOT NULL,
    [IsAsnUniqueRec]      BIT           NOT NULL,
    [RecGapTo]            TINYINT       NOT NULL,
    [RecTemplate]         VARCHAR (100) NULL,
    [OrderTemplate]       VARCHAR (100) NULL,
    [AsnTemplate]         VARCHAR (100) NULL,
    [HuTemplate]          VARCHAR (100) NULL,
    [BillTerm]            TINYINT       NOT NULL,
    [CreateHuOpt]         TINYINT       NOT NULL,
    [ReCalculatePriceOpt] TINYINT       NOT NULL,
    [PickStrategy]        VARCHAR (50)  NULL,
    [ExtraDmdSource]      VARCHAR (256) NULL,
    [CreateUser]          INT           NOT NULL,
    [CreateUserNm]        VARCHAR (100) NOT NULL,
    [CreateDate]          DATETIME      NOT NULL,
    [LastModifyUser]      INT           NOT NULL,
    [LastModifyUserNm]    VARCHAR (100) NOT NULL,
    [LastModifyDate]      DATETIME      NOT NULL,
    [ReleaseDate]         DATETIME      NULL,
    [ReleaseUser]         INT           NULL,
    [ReleaseUserNm]       VARCHAR (100) NULL,
    [StartDate]           DATETIME      NULL,
    [StartUser]           INT           NULL,
    [StartUserNm]         VARCHAR (100) NULL,
    [CompleteDate]        DATETIME      NULL,
    [CompleteUser]        INT           NULL,
    [CompleteUserNm]      VARCHAR (100) NULL,
    [CloseDate]           DATETIME      NULL,
    [CloseUser]           INT           NULL,
    [CloseUserNm]         VARCHAR (100) NULL,
    [CancelDate]          DATETIME      NULL,
    [CancelUser]          INT           NULL,
    [CancelUserNm]        VARCHAR (100) NULL,
    [CancelReason]        VARCHAR (256) NULL,
    [Version]             INT           NOT NULL,
    [FlowDesc]            VARCHAR (100) NULL,
    [WMSNo]               VARCHAR (50)  NULL,
    [ProdLineType]        TINYINT       NOT NULL,
    [PauseStatus]         TINYINT       NOT NULL,
    [SeqGroup]            VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_OrderMstr_8...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8]
    ADD CONSTRAINT [PK_ORD_OrderMstr_8] PRIMARY KEY CLUSTERED ([OrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderMstr_8].[extorderno_reforderno]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [extorderno_reforderno]
    ON [dbo].[ORD_OrderMstr_8]([RefOrderNo] ASC, [ExtOrderNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[ORD_OrderOp]...';


GO
CREATE TABLE [dbo].[ORD_OrderOp] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderDetId]       INT             NOT NULL,
    [Op]               INT             NOT NULL,
    [OpRef]            VARCHAR (50)    NOT NULL,
    [LeadTime]         FLOAT           NOT NULL,
    [TimeUnit]         TINYINT         NOT NULL,
    [Location]         VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [WorkCenter]       VARCHAR (50)    NULL,
    [IsAutoReport]     BIT             NOT NULL,
    [ReportQty]        DECIMAL (18, 8) NOT NULL,
    [BackflushQty]     DECIMAL (18, 8) NULL,
    [AUFPL]            VARCHAR (50)    NULL,
    [PLNFL]            VARCHAR (50)    NULL,
    [VORNR]            VARCHAR (50)    NULL,
    [NeedReport]       BIT             NOT NULL,
    [IsRecFG]          BIT             NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDEROP...';


GO
ALTER TABLE [dbo].[ORD_OrderOp]
    ADD CONSTRAINT [PK_ORD_ORDEROP] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderOpCPTime]...';


GO
CREATE TABLE [dbo].[ORD_OrderOpCPTime] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [OrderNo]     VARCHAR (50) NULL,
    [VanProdLine] VARCHAR (50) NULL,
    [AssProdLine] VARCHAR (50) NULL,
    [Seq]         BIGINT       NULL,
    [SubSeq]      INT          NULL,
    [Op]          INT          NULL,
    [OpTaktTime]  INT          NULL,
    [CPTime]      DATETIME     NULL,
    [CreateDate]  DATETIME     NOT NULL,
    [VanOp]       INT          NULL,
    [AssOp]       INT          NULL
);


GO
PRINT N'Creating PK_ORD_OrderOpCPTime...';


GO
ALTER TABLE [dbo].[ORD_OrderOpCPTime]
    ADD CONSTRAINT [PK_ORD_OrderOpCPTime] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderSeq]...';


GO
CREATE TABLE [dbo].[ORD_OrderSeq] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [ProdLine]         VARCHAR (50)  NOT NULL,
    [TraceCode]        VARCHAR (50)  NULL,
    [Seq]              BIGINT        NOT NULL,
    [SapSeq]           BIGINT        NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [Version]          INT           NOT NULL,
    [OrderNo]          VARCHAR (50)  NULL,
    [SubSeq]           INT           NOT NULL
);


GO
PRINT N'Creating PK_ORD_ORDERSEQ...';


GO
ALTER TABLE [dbo].[ORD_OrderSeq]
    ADD CONSTRAINT [PK_ORD_ORDERSEQ] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_OrderTracer]...';


GO
CREATE TABLE [dbo].[ORD_OrderTracer] (
    [Id]                 INT             IDENTITY (1, 1) NOT NULL,
    [Code]               VARCHAR (50)    NULL,
    [ReqTime]            DATETIME        NULL,
    [Item]               VARCHAR (50)    NULL,
    [OrderedQty]         DECIMAL (18, 8) NULL,
    [FinishedQty]        DECIMAL (18, 8) NULL,
    [Qty]                DECIMAL (18, 8) NULL,
    [RefOrderLocTransId] INT             NULL,
    [OrderDetailId]      INT             NULL
);


GO
PRINT N'Creating PK_ORD_OrderTracer...';


GO
ALTER TABLE [dbo].[ORD_OrderTracer]
    ADD CONSTRAINT [PK_ORD_OrderTracer] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickHu]...';


GO
CREATE TABLE [dbo].[ORD_PickHu] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [PickId]           VARCHAR (50)  NOT NULL,
    [RepackHu]         VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_ORD_PickHu...';


GO
ALTER TABLE [dbo].[ORD_PickHu]
    ADD CONSTRAINT [PK_ORD_PickHu] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickListDet]...';


GO
CREATE TABLE [dbo].[ORD_PickListDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [PLNo]             VARCHAR (50)    NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NOT NULL,
    [OrderDetSeq]      INT             NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [Area]             VARCHAR (50)    NULL,
    [Bin]              VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [PickedQty]        DECIMAL (18, 8) NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsInspect]        BIT             NOT NULL,
    [Memo]             VARCHAR (256)   NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [IsClose]          BIT             NOT NULL,
    [IsOdd]            BIT             NOT NULL,
    [IsDevan]          BIT             NOT NULL,
    [IsInventory]      BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [WindowTime]       DATETIME        NULL
);


GO
PRINT N'Creating PK_ORD_PICKLISTDET...';


GO
ALTER TABLE [dbo].[ORD_PickListDet]
    ADD CONSTRAINT [PK_ORD_PICKLISTDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickListMstr]...';


GO
CREATE TABLE [dbo].[ORD_PickListMstr] (
    [PLNo]                 VARCHAR (50)  NOT NULL,
    [Status]               TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [StartTime]            DATETIME      NOT NULL,
    [WinTime]              DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [StartDate]            DATETIME      NULL,
    [StartUser]            INT           NULL,
    [StartUserNm]          VARCHAR (100) NULL,
    [CompleteDate]         DATETIME      NULL,
    [CompleteUser]         INT           NULL,
    [CompleteUserNm]       VARCHAR (100) NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [CancelDate]           DATETIME      NULL,
    [CancelUser]           INT           NULL,
    [CancelUserNm]         VARCHAR (100) NULL,
    [CancelReason]         VARCHAR (256) NULL,
    [Version]              INT           NOT NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_ORD_PICKLISTMSTR...';


GO
ALTER TABLE [dbo].[ORD_PickListMstr]
    ADD CONSTRAINT [PK_ORD_PICKLISTMSTR] PRIMARY KEY CLUSTERED ([PLNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickListResult]...';


GO
CREATE TABLE [dbo].[ORD_PickListResult] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [PLNo]             VARCHAR (50)    NOT NULL,
    [PLDetId]          INT             NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ORD_PICKLISTRESULT...';


GO
ALTER TABLE [dbo].[ORD_PickListResult]
    ADD CONSTRAINT [PK_ORD_PICKLISTRESULT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickResult]...';


GO
CREATE TABLE [dbo].[ORD_PickResult] (
    [ResultId]         VARCHAR (50)    NOT NULL,
    [PickId]           VARCHAR (50)    NOT NULL,
    [PickedHu]         VARCHAR (50)    NULL,
    [HuQty]            DECIMAL (18, 8) NULL,
    [PickedQty]        DECIMAL (18, 8) NULL,
    [Picker]           VARCHAR (50)    NULL,
    [PickDate]         DATETIME        NULL,
    [AsnNo]            VARCHAR (50)    NULL,
    [Memo]             VARCHAR (256)   NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ORD_PickResult...';


GO
ALTER TABLE [dbo].[ORD_PickResult]
    ADD CONSTRAINT [PK_ORD_PickResult] PRIMARY KEY CLUSTERED ([ResultId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_PickTask]...';


GO
CREATE TABLE [dbo].[ORD_PickTask] (
    [PickId]           VARCHAR (50)    NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrdDetId]         INT             NOT NULL,
    [DemandType]       TINYINT         NOT NULL,
    [IsHold]           BIT             NOT NULL,
    [Flow]             VARCHAR (50)    NULL,
    [FlowDesc]         VARCHAR (100)   NULL,
    [Item]             VARCHAR (50)    NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [Uom]              VARCHAR (5)     NULL,
    [BaseUom]          VARCHAR (5)     NULL,
    [PartyFrom]        VARCHAR (50)    NULL,
    [PartyFromName]    VARCHAR (100)   NULL,
    [PartyTo]          VARCHAR (50)    NULL,
    [PartyToName]      VARCHAR (100)   NULL,
    [LocationFrom]     VARCHAR (50)    NULL,
    [LocationFromName] VARCHAR (100)   NULL,
    [LocationTo]       VARCHAR (50)    NULL,
    [LocationToName]   VARCHAR (100)   NULL,
    [WindowTime]       DATETIME        NULL,
    [ReleaseDate]      DATETIME        NULL,
    [Supplier]         VARCHAR (50)    NULL,
    [SupplierName]     VARCHAR (100)   NULL,
    [UnitCount]        DECIMAL (18, 8) NULL,
    [OrderedQty]       DECIMAL (18, 8) NULL,
    [PickedQty]        DECIMAL (18, 8) NULL,
    [Picker]           VARCHAR (50)    NULL,
    [PrintCount]       INT             NOT NULL,
    [Memo]             VARCHAR (256)   NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_ORD_PickTask...';


GO
ALTER TABLE [dbo].[ORD_PickTask]
    ADD CONSTRAINT [PK_ORD_PickTask] PRIMARY KEY CLUSTERED ([PickId] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet]...';


GO
CREATE TABLE [dbo].[ORD_RecDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0...';


GO
ALTER TABLE [dbo].[ORD_RecDet]
    ADD CONSTRAINT [PK_ORD_RecDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_0]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_0] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_0...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0]
    ADD CONSTRAINT [PK_ORD_RecDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_1]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_1] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_1...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1]
    ADD CONSTRAINT [PK_ORD_RecDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_2]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_2] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_2...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2]
    ADD CONSTRAINT [PK_ORD_RecDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_3]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_3] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_3...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3]
    ADD CONSTRAINT [PK_ORD_RecDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_4]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_4] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_4...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4]
    ADD CONSTRAINT [PK_ORD_RecDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_5]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_5] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_5...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5]
    ADD CONSTRAINT [PK_ORD_RecDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_6]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_6] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_6...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6]
    ADD CONSTRAINT [PK_ORD_RecDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_7]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_7] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_7...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7]
    ADD CONSTRAINT [PK_ORD_RecDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecDet_8]...';


GO
CREATE TABLE [dbo].[ORD_RecDet_8] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [OrderDetSeq]      INT             NULL,
    [IpNo]             VARCHAR (50)    NULL,
    [IpDetId]          INT             NULL,
    [IpDetSeq]         INT             NULL,
    [ExtNo]            VARCHAR (50)    NULL,
    [ExtSeq]           VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [RecQty]           DECIMAL (18, 8) NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocFromNm]        VARCHAR (100)   NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [LocToNm]          VARCHAR (100)   NULL,
    [IsInspect]        BIT             NOT NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [UnitPrice]        DECIMAL (18, 8) NULL,
    [Currency]         VARCHAR (50)    NULL,
    [IsProvEst]        BIT             NOT NULL,
    [Tax]              VARCHAR (50)    NULL,
    [IsIncludeTax]     BIT             NOT NULL,
    [BillTerm]         INT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [IpDetType]        TINYINT         NOT NULL,
    [IpGapAdjOpt]      TINYINT         NOT NULL,
    [ScrapQty]         DECIMAL (18, 8) NOT NULL,
    [Flow]             VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecDet_0_8...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8]
    ADD CONSTRAINT [PK_ORD_RecDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_0]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_0] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_0...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_0]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_0] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_1]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_1] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_1...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_1]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_1] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_2]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_2] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_2...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_2]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_2] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_3]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_3] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_3...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_3]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_3] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_4]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_4] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_4...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_4]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_4] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_5]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_5] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_5...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_5]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_5] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_6]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_6] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_6...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_6]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_6] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_7]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_7] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_7...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_7]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_7] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecLocationDet_8]...';


GO
CREATE TABLE [dbo].[ORD_RecLocationDet_8] (
    [Id]               INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderDetId]       INT             NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCreatePlanBill] BIT             NOT NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [ActBill]          INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [IsFreeze]         BIT             NOT NULL,
    [IsATP]            BIT             NOT NULL,
    [OccupyType]       TINYINT         NOT NULL,
    [OccupyRefNo]      VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WMSSeq]           VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_ORD_RecLocationDet_0_8...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_8]
    ADD CONSTRAINT [PK_ORD_RecLocationDet_0_8] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0...';


GO
ALTER TABLE [dbo].[ORD_RecMstr]
    ADD CONSTRAINT [PK_ORD_RecMstr_0] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_0]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_0] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_0...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_0]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_0] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_1]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_1] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_1...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_1]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_1] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_2]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_2] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_2...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_2]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_2] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_3]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_3] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_3...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_3]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_3] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_4]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_4] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_4...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_4]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_4] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_5]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_5] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_5...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_5]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_5] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_6]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_6] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_6...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_6]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_6] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_7]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_7] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_7...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_7]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_7] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_RecMstr_8]...';


GO
CREATE TABLE [dbo].[ORD_RecMstr_8] (
    [RecNo]                VARCHAR (50)  NOT NULL,
    [ExtRecNo]             VARCHAR (50)  NULL,
    [IpNo]                 VARCHAR (50)  NULL,
    [SeqNo]                VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [OrderSubType]         TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (100) NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (100) NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [EffDate]              DATETIME      NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsRecPrinted]         BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [Version]              INT           NOT NULL,
    [WMSNo]                VARCHAR (50)  NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [CancelReason]         VARCHAR (256) NULL
);


GO
PRINT N'Creating PK_ORD_RecMstr_0_8...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_8]
    ADD CONSTRAINT [PK_ORD_RecMstr_0_8] PRIMARY KEY CLUSTERED ([RecNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_SeqDet]...';


GO
CREATE TABLE [dbo].[ORD_SeqDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [SeqNo]            VARCHAR (50)    NOT NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [TraceCode]        VARCHAR (50)    NULL,
    [OrderDetId]       INT             NOT NULL,
    [OrderDetSeq]      INT             NOT NULL,
    [Seq]              BIGINT          NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [QualityType]      TINYINT         NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [StartTime]        DATETIME        NULL,
    [WindowTime]       DATETIME        NULL
);


GO
PRINT N'Creating PK_ORD_SEQDET...';


GO
ALTER TABLE [dbo].[ORD_SeqDet]
    ADD CONSTRAINT [PK_ORD_SEQDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_SeqMstr]...';


GO
CREATE TABLE [dbo].[ORD_SeqMstr] (
    [SeqNo]                VARCHAR (50)  NOT NULL,
    [Flow]                 VARCHAR (50)  NULL,
    [Status]               TINYINT       NOT NULL,
    [OrderType]            TINYINT       NOT NULL,
    [QualityType]          TINYINT       NOT NULL,
    [StartTime]            DATETIME      NOT NULL,
    [WinTime]              DATETIME      NOT NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyFromNm]          VARCHAR (50)  NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [PartyToNm]            VARCHAR (50)  NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipFromAddr]         VARCHAR (256) NULL,
    [ShipFromTel]          VARCHAR (50)  NULL,
    [ShipFromCell]         VARCHAR (50)  NULL,
    [ShipFromFax]          VARCHAR (50)  NULL,
    [ShipFromContact]      VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [ShipToAddr]           VARCHAR (256) NULL,
    [ShipToTel]            VARCHAR (50)  NULL,
    [ShipToCell]           VARCHAR (50)  NULL,
    [ShipToFax]            VARCHAR (50)  NULL,
    [ShipToContact]        VARCHAR (50)  NULL,
    [LocFrom]              VARCHAR (50)  NULL,
    [LocFromNm]            VARCHAR (50)  NULL,
    [LocTo]                VARCHAR (50)  NOT NULL,
    [LocToNm]              VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (50)  NULL,
    [Container]            VARCHAR (50)  NULL,
    [ContainerDesc]        VARCHAR (50)  NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsPrintRec]           BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [PackUser]             INT           NULL,
    [PackUserNm]           VARCHAR (100) NULL,
    [PackDate]             DATETIME      NULL,
    [ShipUser]             INT           NULL,
    [ShipUserNm]           VARCHAR (100) NULL,
    [ShipDate]             DATETIME      NULL,
    [CancelUser]           INT           NULL,
    [CancelUserNm]         VARCHAR (100) NULL,
    [CancelDate]           DATETIME      NULL,
    [CloseDate]            DATETIME      NULL,
    [CloseUser]            INT           NULL,
    [CloseUserNm]          VARCHAR (100) NULL,
    [Version]              INT           NOT NULL
);


GO
PRINT N'Creating PK_ORD_SEQMSTR...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr]
    ADD CONSTRAINT [PK_ORD_SEQMSTR] PRIMARY KEY CLUSTERED ([SeqNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[ORD_ShipList]...';


GO
CREATE TABLE [dbo].[ORD_ShipList] (
    [ShipNo]           VARCHAR (50)  NOT NULL,
    [Vehicle]          VARCHAR (50)  NULL,
    [Shipper]          VARCHAR (50)  NULL,
    [Status]           TINYINT       NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [CloseDate]        DATETIME      NULL,
    [CloseUser]        INT           NULL,
    [CloseUserNm]      VARCHAR (100) NULL,
    [CancelDate]       DATETIME      NULL,
    [CancelUser]       INT           NULL,
    [CancelUserNm]     VARCHAR (100) NULL
);


GO
PRINT N'Creating PK_ORD_ShipList...';


GO
ALTER TABLE [dbo].[ORD_ShipList]
    ADD CONSTRAINT [PK_ORD_ShipList] PRIMARY KEY CLUSTERED ([ShipNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[Part_PRD]...';


GO
CREATE TABLE [dbo].[Part_PRD] (
    [Client]  NVARCHAR (255) NULL,
    [Part]    NVARCHAR (255) NULL,
    [Plant]   NVARCHAR (255) NULL,
    [BU]      NVARCHAR (255) NULL,
    [Opart]   NVARCHAR (255) NULL,
    [Desc]    NVARCHAR (255) NULL,
    [Spart]   NVARCHAR (255) NULL,
    [KeyPart] NVARCHAR (255) NULL,
    [cglx]    NVARCHAR (255) NULL,
    [SPT]     NVARCHAR (255) NULL,
    [ESLOC]   NVARCHAR (255) NULL,
    [PGR]     NVARCHAR (255) NULL,
    [F13]     NVARCHAR (255) NULL
);


GO
PRINT N'Creating [dbo].[PRD_BFStrategy]...';


GO
CREATE TABLE [dbo].[PRD_BFStrategy] (
    [Code]        VARCHAR (50)  NOT NULL,
    [Description] VARCHAR (100) NULL,
    [BFMethod]    TINYINT       NOT NULL,
    [FeedMethod]  TINYINT       NOT NULL,
    [IsAutoFeed]  BIT           NOT NULL
);


GO
PRINT N'Creating PK_PRD_BFSTRATEGY...';


GO
ALTER TABLE [dbo].[PRD_BFStrategy]
    ADD CONSTRAINT [PK_PRD_BFSTRATEGY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_BomDet]...';


GO
CREATE TABLE [dbo].[PRD_BomDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Bom]              VARCHAR (50)    NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [Op]               INT             NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [StruType]         TINYINT         NOT NULL,
    [StartDate]        DATETIME        NOT NULL,
    [EndDate]          DATETIME        NULL,
    [RateQty]          DECIMAL (18, 8) NOT NULL,
    [ScrapPct]         DECIMAL (18, 8) NOT NULL,
    [BFStrategy]       VARCHAR (50)    NULL,
    [BFMethod]         TINYINT         NOT NULL,
    [FeedMethod]       TINYINT         NOT NULL,
    [IsAutoFeed]       BIT             NOT NULL,
    [Location]         VARCHAR (50)    NULL,
    [IsPrint]          BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL
);


GO
PRINT N'Creating PK_PRD_BOMDET...';


GO
ALTER TABLE [dbo].[PRD_BomDet]
    ADD CONSTRAINT [PK_PRD_BOMDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_BomMstr]...';


GO
CREATE TABLE [dbo].[PRD_BomMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [Uom]              VARCHAR (5)   NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_PRD_BOMMSTR...';


GO
ALTER TABLE [dbo].[PRD_BomMstr]
    ADD CONSTRAINT [PK_PRD_BOMMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_MultiSupplyGroup]...';


GO
CREATE TABLE [dbo].[PRD_MultiSupplyGroup] (
    [GroupNo]          VARCHAR (50)    NOT NULL,
    [Desc1]            VARCHAR (100)   NULL,
    [EffSupplier]      VARCHAR (50)    NULL,
    [TargetCycleQty]   INT             NOT NULL,
    [AccumulateQty]    DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [KBEffSupplier]    VARCHAR (50)    NULL,
    [KBTargetCycleQty] INT             NOT NULL,
    [KBAccumulateQty]  INT             NOT NULL
);


GO
PRINT N'Creating PK_PRD_MULTISUPPLYGROUP...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyGroup]
    ADD CONSTRAINT [PK_PRD_MULTISUPPLYGROUP] PRIMARY KEY CLUSTERED ([GroupNo] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_MultiSupplyItem]...';


GO
CREATE TABLE [dbo].[PRD_MultiSupplyItem] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [GroupNo]          VARCHAR (50)  NOT NULL,
    [Supplier]         VARCHAR (50)  NOT NULL,
    [Item]             VARCHAR (50)  NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ItemDesc]         VARCHAR (100) NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [SubstituteGroup]  VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_PRD_MULTISUPPLYITEM...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyItem]
    ADD CONSTRAINT [PK_PRD_MULTISUPPLYITEM] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_MultiSupplySupplier]...';


GO
CREATE TABLE [dbo].[PRD_MultiSupplySupplier] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [GroupNo]          VARCHAR (50)    NOT NULL,
    [Supplier]         VARCHAR (50)    NOT NULL,
    [SupplierNm]       VARCHAR (100)   NULL,
    [Seq]              INT             NOT NULL,
    [CycleQty]         INT             NOT NULL,
    [SpillQty]         DECIMAL (18, 8) NOT NULL,
    [AccumulateQty]    DECIMAL (18, 8) NOT NULL,
    [IsActive]         BIT             NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [Proportion]       VARCHAR (100)   NULL
);


GO
PRINT N'Creating PK_PRD_MULTISUPPLYSUPPLIER...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplySupplier]
    ADD CONSTRAINT [PK_PRD_MULTISUPPLYSUPPLIER] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_PlanBackflush]...';


GO
CREATE TABLE [dbo].[PRD_PlanBackflush] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [ProdLine]         VARCHAR (50)    NOT NULL,
    [ProdLineFact]     VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NOT NULL,
    [OrderType]        TINYINT         NOT NULL,
    [OrderSubType]     TINYINT         NOT NULL,
    [OrderDetSeq]      INT             NOT NULL,
    [OrderDetId]       INT             NOT NULL,
    [OrderBomDetId]    INT             NOT NULL,
    [OrderBomDetSeq]   INT             NOT NULL,
    [RecNo]            VARCHAR (50)    NOT NULL,
    [RecDetId]         INT             NOT NULL,
    [RecDetSeq]        INT             NOT NULL,
    [Bom]              VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UnitQty]          DECIMAL (18, 8) NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [IsClose]          BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL,
    [FGItem]           VARCHAR (50)    NOT NULL
);


GO
PRINT N'Creating PK_PRD_PLANBACKFLUSH...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush]
    ADD CONSTRAINT [PK_PRD_PLANBACKFLUSH] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_ProdLineLocationDet]...';


GO
CREATE TABLE [dbo].[PRD_ProdLineLocationDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [ProdLine]         VARCHAR (50)    NOT NULL,
    [ProdLineFact]     VARCHAR (50)    NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderDetId]       INT             NULL,
    [Op]               INT             NULL,
    [OpRef]            VARCHAR (50)    NULL,
    [TraceCode]        VARCHAR (50)    NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [ItemDesc]         VARCHAR (100)   NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [HuId]             VARCHAR (50)    NULL,
    [LotNo]            VARCHAR (50)    NULL,
    [IsCS]             BIT             NOT NULL,
    [PlanBill]         INT             NULL,
    [QualityType]      TINYINT         NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [BFQty]            DECIMAL (18, 8) NOT NULL,
    [VoidQty]          DECIMAL (18, 8) NOT NULL,
    [IsClose]          BIT             NOT NULL,
    [LocFrom]          VARCHAR (50)    NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NOT NULL,
    [NotReport]        BIT             NOT NULL,
    [ReserveNo]        VARCHAR (50)    NULL,
    [ReserveLine]      VARCHAR (50)    NULL,
    [AUFNR]            VARCHAR (50)    NULL,
    [ICHARG]           VARCHAR (50)    NULL,
    [BWART]            VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_PRD_PRODLINELOCATIONDET...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet]
    ADD CONSTRAINT [PK_PRD_PRODLINELOCATIONDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_ProdLineLocationDet].[IX_PRD_ProdLineLocationDet_OrderNo_Item]...';


GO
CREATE NONCLUSTERED INDEX [IX_PRD_ProdLineLocationDet_OrderNo_Item]
    ON [dbo].[PRD_ProdLineLocationDet]([OrderNo] ASC, [Item] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[PRD_ProdLineWorkCenter]...';


GO
CREATE TABLE [dbo].[PRD_ProdLineWorkCenter] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Flow]             VARCHAR (50)  NOT NULL,
    [WorkCenter]       VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_PRD_PRODLINEWORKCENTER...';


GO
ALTER TABLE [dbo].[PRD_ProdLineWorkCenter]
    ADD CONSTRAINT [PK_PRD_PRODLINEWORKCENTER] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_RoutingDet]...';


GO
CREATE TABLE [dbo].[PRD_RoutingDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Routing]          VARCHAR (50)  NOT NULL,
    [Op]               INT           NOT NULL,
    [OpRef]            VARCHAR (50)  NOT NULL,
    [Location]         VARCHAR (50)  NULL,
    [WorkCenter]       VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [IsReport]         BIT           NOT NULL,
    [BackFlushMethod]  TINYINT       NOT NULL,
    [Capacity]         INT           NULL
);


GO
PRINT N'Creating PK_PRD_ROUTINGDET...';


GO
ALTER TABLE [dbo].[PRD_RoutingDet]
    ADD CONSTRAINT [PK_PRD_ROUTINGDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_RoutingMstr]...';


GO
CREATE TABLE [dbo].[PRD_RoutingMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (100) NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_PRD_ROUTINGMSTR...';


GO
ALTER TABLE [dbo].[PRD_RoutingMstr]
    ADD CONSTRAINT [PK_PRD_ROUTINGMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_ShiftDet]...';


GO
CREATE TABLE [dbo].[PRD_ShiftDet] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Shift]            VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [StartTime]        VARCHAR (5)   NULL,
    [EndTime]          VARCHAR (5)   NULL,
    [IsOvernight]      INT           NOT NULL,
    [Seq]              INT           NOT NULL
);


GO
PRINT N'Creating PK_PRD_SHIFTDET...';


GO
ALTER TABLE [dbo].[PRD_ShiftDet]
    ADD CONSTRAINT [PK_PRD_SHIFTDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_ShiftMstr]...';


GO
CREATE TABLE [dbo].[PRD_ShiftMstr] (
    [Code]             VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (100) NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [ShiftCount]       INT           NOT NULL
);


GO
PRINT N'Creating PK_PRD_SHIFTMSTR...';


GO
ALTER TABLE [dbo].[PRD_ShiftMstr]
    ADD CONSTRAINT [PK_PRD_SHIFTMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_StandardWorkingCalendar]...';


GO
CREATE TABLE [dbo].[PRD_StandardWorkingCalendar] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Region]           VARCHAR (50)  NULL,
    [Shift]            VARCHAR (50)  NOT NULL,
    [DayOfWeek]        TINYINT       NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [RegionName]       VARCHAR (50)  NULL,
    [Category]         TINYINT       NOT NULL,
    [ProdLine]         VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_PRD_STANDARDWORKINGCALENDAR...';


GO
ALTER TABLE [dbo].[PRD_StandardWorkingCalendar]
    ADD CONSTRAINT [PK_PRD_STANDARDWORKINGCALENDAR] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_WorkingCalendar]...';


GO
CREATE TABLE [dbo].[PRD_WorkingCalendar] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Region]           VARCHAR (50)  NULL,
    [Shift]            VARCHAR (50)  NOT NULL,
    [WorkingDate]      DATE          NOT NULL,
    [Type]             TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [DayOfWeek]        TINYINT       NOT NULL,
    [RegionName]       VARCHAR (50)  NULL,
    [Category]         TINYINT       NOT NULL,
    [ProdLine]         VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_PRD_WORKINGCALENDAR...';


GO
ALTER TABLE [dbo].[PRD_WorkingCalendar]
    ADD CONSTRAINT [PK_PRD_WORKINGCALENDAR] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[PRD_WorkingShift]...';


GO
CREATE TABLE [dbo].[PRD_WorkingShift] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Shift]            VARCHAR (50)  NOT NULL,
    [WorkingCalendar]  INT           NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_PRD_WORKINGSHIFT...';


GO
ALTER TABLE [dbo].[PRD_WorkingShift]
    ADD CONSTRAINT [PK_PRD_WORKINGSHIFT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_AlterDO]...';


GO
CREATE TABLE [dbo].[SAP_AlterDO] (
    [Id]              INT             IDENTITY (1, 1) NOT NULL,
    [OrderNo]         VARCHAR (10)    NULL,
    [Sequence]        INT             NULL,
    [Item]            VARCHAR (18)    NULL,
    [Plant]           CHAR (4)        NULL,
    [Location]        CHAR (4)        NULL,
    [Qty]             DECIMAL (18, 8) NULL,
    [Uom]             CHAR (3)        NULL,
    [KUNAG]           VARCHAR (20)    NULL,
    [KUNNR]           VARCHAR (20)    NULL,
    [Action]          CHAR (1)        NULL,
    [Status]          TINYINT         NOT NULL,
    [CreateDate]      DATETIME        NOT NULL,
    [LastModifyDate]  DATETIME        NOT NULL,
    [ErrorCount]      INT             NOT NULL,
    [WindowTime]      DATETIME        NULL,
    [ExternalOrderno] VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_SAP_DeliveryOrder...';


GO
ALTER TABLE [dbo].[SAP_AlterDO]
    ADD CONSTRAINT [PK_SAP_DeliveryOrder] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_CancelProdOpReport]...';


GO
CREATE TABLE [dbo].[SAP_CancelProdOpReport] (
    [Id]             INT          IDENTITY (1, 1) NOT NULL,
    [AUFNR]          VARCHAR (50) NOT NULL,
    [TEXT]           VARCHAR (50) NOT NULL,
    [Status]         TINYINT      NOT NULL,
    [CreateDate]     DATETIME     NOT NULL,
    [LastModifyDate] DATETIME     NOT NULL,
    [ErrorCount]     INT          NOT NULL,
    [RecNo]          VARCHAR (50) NULL,
    [OrderNo]        VARCHAR (50) NULL,
    [OrderOpId]      INT          NULL
);


GO
PRINT N'Creating PK_SAP_CancelProdOpReport...';


GO
ALTER TABLE [dbo].[SAP_CancelProdOpReport]
    ADD CONSTRAINT [PK_SAP_CancelProdOpReport] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_InvLoc]...';


GO
CREATE TABLE [dbo].[SAP_InvLoc] (
    [Id]         BIGINT       IDENTITY (1, 1) NOT NULL,
    [SourceType] INT          NOT NULL,
    [SourceId]   BIGINT       NOT NULL,
    [FRBNR]      VARCHAR (16) NOT NULL,
    [SGTXT]      VARCHAR (50) NOT NULL,
    [CreateUser] VARCHAR (50) NOT NULL,
    [CreateDate] DATETIME     NOT NULL
);


GO
PRINT N'Creating PK_InvLoc...';


GO
ALTER TABLE [dbo].[SAP_InvLoc]
    ADD CONSTRAINT [PK_InvLoc] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_InvTrans]...';


GO
CREATE TABLE [dbo].[SAP_InvTrans] (
    [TCODE]          VARCHAR (20)    NULL,
    [BWART]          VARCHAR (3)     NULL,
    [BLDAT]          CHAR (8)        NULL,
    [BUDAT]          CHAR (8)        NULL,
    [EBELN]          VARCHAR (50)    NULL,
    [EBELP]          VARCHAR (5)     NULL,
    [VBELN]          VARCHAR (10)    NULL,
    [POSNR]          VARCHAR (6)     NULL,
    [LIFNR]          VARCHAR (10)    NULL,
    [WERKS]          VARCHAR (4)     NULL,
    [LGORT]          VARCHAR (4)     NULL,
    [SOBKZ]          VARCHAR (1)     NULL,
    [MATNR]          VARCHAR (18)    NULL,
    [ERFMG]          DECIMAL (18, 2) NULL,
    [ERFME]          VARCHAR (3)     NULL,
    [UMLGO]          VARCHAR (4)     NULL,
    [GRUND]          VARCHAR (4)     NULL,
    [KOSTL]          VARCHAR (10)    NULL,
    [XBLNR]          VARCHAR (50)    NULL,
    [RSNUM]          VARCHAR (10)    NULL,
    [RSPOS]          VARCHAR (4)     NULL,
    [FRBNR]          VARCHAR (50)    NOT NULL,
    [SGTXT]          VARCHAR (50)    NOT NULL,
    [OLD]            VARCHAR (3)     NULL,
    [INSMK]          VARCHAR (1)     NULL,
    [XABLN]          VARCHAR (10)    NULL,
    [AUFNR]          VARCHAR (50)    NULL,
    [UMMAT]          VARCHAR (18)    NULL,
    [UMWRK]          VARCHAR (4)     NULL,
    [POSID]          VARCHAR (24)    NULL,
    [CreateDate]     DATETIME        NOT NULL,
    [LastModifyDate] DATETIME        NOT NULL,
    [Status]         TINYINT         NOT NULL,
    [ErrorCount]     INT             NOT NULL,
    [BatchNo]        INT             NOT NULL,
    [CHARG]          VARCHAR (50)    NULL,
    [KZEAR]          VARCHAR (1)     NULL,
    [ErrorId]        INT             NULL,
    [ErrorMessage]   VARCHAR (256)   NULL,
    [OrderNo]        VARCHAR (50)    NULL,
    [DetailId]       INT             NULL
);


GO
PRINT N'Creating PK_InvTrans...';


GO
ALTER TABLE [dbo].[SAP_InvTrans]
    ADD CONSTRAINT [PK_InvTrans] PRIMARY KEY CLUSTERED ([FRBNR] ASC, [SGTXT] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_Item]...';


GO
CREATE TABLE [dbo].[SAP_Item] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [Code]          VARCHAR (20)  NULL,
    [ReferenceCode] VARCHAR (20)  NULL,
    [Description]   NVARCHAR (60) NULL,
    [Uom]           VARCHAR (5)   NULL,
    [Plant]         VARCHAR (4)   NULL,
    [IOStatus]      INT           NOT NULL,
    [InboundDate]   DATETIME      NOT NULL,
    [OutboundDate]  DATETIME      NULL,
    [ShortCode]     VARCHAR (10)  NULL
);


GO
PRINT N'Creating PK_SAP_Item...';


GO
ALTER TABLE [dbo].[SAP_Item]
    ADD CONSTRAINT [PK_SAP_Item] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_MapMoveTypeTCode]...';


GO
CREATE TABLE [dbo].[SAP_MapMoveTypeTCode] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [BWART]       CHAR (3)      NOT NULL,
    [SOBKZ]       CHAR (1)      NULL,
    [TCode]       VARCHAR (10)  NOT NULL,
    [Description] VARCHAR (100) NULL
);


GO
PRINT N'Creating PK_SAP_MapMoveTypeTCode...';


GO
ALTER TABLE [dbo].[SAP_MapMoveTypeTCode]
    ADD CONSTRAINT [PK_SAP_MapMoveTypeTCode] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_PostDO]...';


GO
CREATE TABLE [dbo].[SAP_PostDO] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [OrderNo]        VARCHAR (50)  NULL,
    [ReceiptNo]      VARCHAR (50)  NULL,
    [Result]         VARCHAR (500) NULL,
    [ZTCODE]         VARCHAR (50)  NULL,
    [Success]        VARCHAR (50)  NULL,
    [LastModifyDate] DATETIME      NULL,
    [Status]         INT           NULL,
    [CreateDate]     DATETIME      NULL,
    [ErrorCount]     INT           NULL
);


GO
PRINT N'Creating PK_SAP_PostDO...';


GO
ALTER TABLE [dbo].[SAP_PostDO]
    ADD CONSTRAINT [PK_SAP_PostDO] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_ProdBomDet]...';


GO
CREATE TABLE [dbo].[SAP_ProdBomDet] (
    [Id]         BIGINT          IDENTITY (1, 1) NOT NULL,
    [BatchNo]    INT             NOT NULL,
    [CreateDate] DATETIME        NOT NULL,
    [AUFNR]      VARCHAR (50)    NULL,
    [RSNUM]      INT             NULL,
    [RSPOS]      INT             NULL,
    [WERKS]      VARCHAR (50)    NULL,
    [MATERIAL]   VARCHAR (50)    NULL,
    [BISMT]      VARCHAR (50)    NULL,
    [MAKTX]      VARCHAR (100)   NULL,
    [DISPO]      VARCHAR (50)    NULL,
    [BESKZ]      VARCHAR (50)    NULL,
    [SOBSL]      VARCHAR (50)    NULL,
    [MEINS]      VARCHAR (50)    NULL,
    [MDMNG]      DECIMAL (18, 8) NULL,
    [LGORT]      VARCHAR (50)    NULL,
    [BWART]      VARCHAR (50)    NULL,
    [AUFPL]      INT             NULL,
    [PLNFL]      VARCHAR (50)    NULL,
    [VORNR]      VARCHAR (50)    NULL,
    [GW]         VARCHAR (50)    NULL,
    [WZ]         VARCHAR (50)    NULL,
    [ZOPID]      VARCHAR (50)    NULL,
    [ZOPDS]      VARCHAR (50)    NULL,
    [LIFNR]      VARCHAR (50)    NULL,
    [ICHARG]     VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_SAP_PRODBOMDET...';


GO
ALTER TABLE [dbo].[SAP_ProdBomDet]
    ADD CONSTRAINT [PK_SAP_PRODBOMDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_ProdOpReport]...';


GO
CREATE TABLE [dbo].[SAP_ProdOpReport] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [AUFNR]            VARCHAR (50)    NOT NULL,
    [WORKCENTER]       VARCHAR (50)    NOT NULL,
    [GAMNG]            DECIMAL (18, 8) NOT NULL,
    [Status]           TINYINT         NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [ErrorCount]       INT             NOT NULL,
    [SCRAP]            DECIMAL (18, 8) NOT NULL,
    [TEXT]             VARCHAR (50)    NULL,
    [IsCancel]         BIT             NOT NULL,
    [OrderNo]          VARCHAR (50)    NULL,
    [OrderOpId]        INT             NULL,
    [RecNo]            VARCHAR (50)    NULL,
    [EffDate]          DATETIME        NOT NULL,
    [CreateUser]       INT             NULL,
    [CreateUserNm]     VARCHAR (50)    NULL,
    [LastModifyUser]   INT             NULL,
    [LastModifyUserNm] VARCHAR (50)    NULL,
    [Version]          INT             NOT NULL,
    [ProdLine]         VARCHAR (50)    NULL
);


GO
PRINT N'Creating PK_SAP_ProdOpReport...';


GO
ALTER TABLE [dbo].[SAP_ProdOpReport]
    ADD CONSTRAINT [PK_SAP_ProdOpReport] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_ProdOrder]...';


GO
CREATE TABLE [dbo].[SAP_ProdOrder] (
    [Id]         INT             IDENTITY (1, 1) NOT NULL,
    [BatchNo]    INT             NOT NULL,
    [CreateDate] DATETIME        NOT NULL,
    [AUFNR]      VARCHAR (50)    NULL,
    [WERKS]      VARCHAR (50)    NULL,
    [DAUAT]      VARCHAR (50)    NULL,
    [MATNR]      VARCHAR (50)    NULL,
    [MAKTX]      VARCHAR (50)    NULL,
    [DISPO]      VARCHAR (50)    NULL,
    [CHARG]      VARCHAR (50)    NULL,
    [GSTRS]      DATETIME        NULL,
    [CY_SEQNR]   BIGINT          NULL,
    [GMEIN]      VARCHAR (50)    NULL,
    [GAMNG]      DECIMAL (18, 8) NULL,
    [LGORT]      VARCHAR (50)    NULL,
    [LTEXT]      VARCHAR (50)    NULL,
    [ZLINE]      VARCHAR (50)    NULL,
    [RSNUM]      INT             NULL,
    [AUFPL]      INT             NULL
);


GO
PRINT N'Creating PK_SAP_PRODORDER...';


GO
ALTER TABLE [dbo].[SAP_ProdOrder]
    ADD CONSTRAINT [PK_SAP_PRODORDER] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_ProdRoutingDet]...';


GO
CREATE TABLE [dbo].[SAP_ProdRoutingDet] (
    [Id]         INT          IDENTITY (1, 1) NOT NULL,
    [BatchNo]    INT          NOT NULL,
    [CreateDate] DATETIME     NOT NULL,
    [AUFNR]      VARCHAR (50) NULL,
    [WERKS]      VARCHAR (50) NULL,
    [AUFPL]      INT          NULL,
    [APLZL]      INT          NULL,
    [PLNTY]      VARCHAR (50) NULL,
    [PLNNR]      VARCHAR (50) NULL,
    [PLNAL]      VARCHAR (50) NULL,
    [PLNFL]      VARCHAR (50) NULL,
    [VORNR]      VARCHAR (50) NULL,
    [ARBPL]      VARCHAR (50) NULL,
    [RUEK]       VARCHAR (50) NULL,
    [AUTWE]      VARCHAR (50) NULL
);


GO
PRINT N'Creating PK_SAP_PRODROUTINGDET...';


GO
ALTER TABLE [dbo].[SAP_ProdRoutingDet]
    ADD CONSTRAINT [PK_SAP_PRODROUTINGDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_ProdSeqReport]...';


GO
CREATE TABLE [dbo].[SAP_ProdSeqReport] (
    [Id]             INT             IDENTITY (1, 1) NOT NULL,
    [AUFNR]          VARCHAR (50)    NOT NULL,
    [WORKCENTER]     VARCHAR (50)    NOT NULL,
    [GAMNG]          DECIMAL (18, 8) NOT NULL,
    [Status]         TINYINT         NOT NULL,
    [CreateDate]     DATETIME        NOT NULL,
    [LastModifyDate] DATETIME        NOT NULL,
    [ErrorCount]     INT             NOT NULL,
    [SCRAP]          DECIMAL (18, 8) NOT NULL,
    [TEXT]           VARCHAR (50)    NOT NULL
);


GO
PRINT N'Creating PK_SAP_ProdSeqReport...';


GO
ALTER TABLE [dbo].[SAP_ProdSeqReport]
    ADD CONSTRAINT [PK_SAP_ProdSeqReport] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_Quota]...';


GO
CREATE TABLE [dbo].[SAP_Quota] (
    [Id]             INT             IDENTITY (1, 1) NOT NULL,
    [Code]           VARCHAR (20)    NOT NULL,
    [Sequence]       VARCHAR (20)    NULL,
    [Supplier]       VARCHAR (20)    NULL,
    [Plant]          VARCHAR (4)     NULL,
    [PlantFrom]      VARCHAR (4)     NULL,
    [Item]           VARCHAR (20)    NOT NULL,
    [StartDate]      DATETIME        NULL,
    [EndDate]        DATETIME        NULL,
    [PoType]         CHAR (1)        NULL,
    [SubPoType]      CHAR (1)        NULL,
    [Weight]         DECIMAL (18, 8) NULL,
    [Status]         TINYINT         NULL,
    [CreateDate]     DATETIME        NOT NULL,
    [LastModifyDate] DATETIME        NULL,
    [ErrorCount]     INT             NOT NULL
);


GO
PRINT N'Creating PK_SAP_Quota...';


GO
ALTER TABLE [dbo].[SAP_Quota]
    ADD CONSTRAINT [PK_SAP_Quota] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_SourceOrder]...';


GO
CREATE TABLE [dbo].[SAP_SourceOrder] (
    [Id]             INT             IDENTITY (1, 1) NOT NULL,
    [Code]           VARCHAR (50)    NULL,
    [Sequence]       VARCHAR (50)    NULL,
    [Item]           VARCHAR (50)    NULL,
    [Plant]          VARCHAR (50)    NULL,
    [ZEORD]          VARCHAR (50)    NULL,
    [Supplier]       VARCHAR (50)    NULL,
    [PlantFrom]      VARCHAR (50)    NULL,
    [StartDate]      DATETIME        NULL,
    [EndDate]        DATETIME        NULL,
    [Status]         TINYINT         NOT NULL,
    [CreateDate]     DATETIME        NOT NULL,
    [LastModifyDate] DATETIME        NOT NULL,
    [ErrorCount]     INT             NOT NULL,
    [Uom]            VARCHAR (50)    NULL,
    [BaseUom]        VARCHAR (50)    NULL,
    [UomQty]         DECIMAL (18, 8) NULL,
    [BaseUomQty]     DECIMAL (18, 8) NULL
);


GO
PRINT N'Creating PK_SAP_Source...';


GO
ALTER TABLE [dbo].[SAP_SourceOrder]
    ADD CONSTRAINT [PK_SAP_Source] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_Supplier]...';


GO
CREATE TABLE [dbo].[SAP_Supplier] (
    [Id]              INT           IDENTITY (1, 1) NOT NULL,
    [Code]            VARCHAR (20)  NULL,
    [OldSupplierCode] VARCHAR (20)  NULL,
    [Name]            NVARCHAR (60) NULL,
    [IOStatus]        INT           NOT NULL,
    [InboundDate]     DATETIME      NULL,
    [OutBoundDate]    DATETIME      NULL
);


GO
PRINT N'Creating PK_SAP_Supplier...';


GO
ALTER TABLE [dbo].[SAP_Supplier]
    ADD CONSTRAINT [PK_SAP_Supplier] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_TableIndex]...';


GO
CREATE TABLE [dbo].[SAP_TableIndex] (
    [TableName]      VARCHAR (50) NOT NULL,
    [Id]             BIGINT       NULL,
    [LastModifyDate] DATETIME     NULL
);


GO
PRINT N'Creating PK_TableIndex...';


GO
ALTER TABLE [dbo].[SAP_TableIndex]
    ADD CONSTRAINT [PK_TableIndex] PRIMARY KEY CLUSTERED ([TableName] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SAP_TransCallBack]...';


GO
CREATE TABLE [dbo].[SAP_TransCallBack] (
    [Id]         BIGINT         IDENTITY (1, 1) NOT NULL,
    [FRBNR]      VARCHAR (16)   NULL,
    [SGTXT]      VARCHAR (50)   NULL,
    [MBLNR]      VARCHAR (10)   NULL,
    [ZEILE]      VARCHAR (4)    NULL,
    [BUDAT]      CHAR (14)      NULL,
    [CPUDT]      CHAR (14)      NULL,
    [MTYPE]      VARCHAR (4)    NULL,
    [MSTXT]      NVARCHAR (220) NULL,
    [CreateDate] DATETIME       NOT NULL
);


GO
PRINT N'Creating PK_TransCallBack...';


GO
ALTER TABLE [dbo].[SAP_TransCallBack]
    ADD CONSTRAINT [PK_TransCallBack] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_FlowBinding]...';


GO
CREATE TABLE [dbo].[SCM_FlowBinding] (
    [Id]               INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [MstrFlow]         VARCHAR (50)  NOT NULL,
    [BindFlow]         VARCHAR (50)  NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [BindType]         TINYINT       NOT NULL,
    [JointOp]          INT           NULL
);


GO
PRINT N'Creating PK_SCM_FLOWBINDING...';


GO
ALTER TABLE [dbo].[SCM_FlowBinding]
    ADD CONSTRAINT [PK_SCM_FLOWBINDING] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_FlowDet]...';


GO
CREATE TABLE [dbo].[SCM_FlowDet] (
    [Id]               INT             IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Flow]             VARCHAR (50)    NOT NULL,
    [Seq]              INT             NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [RefItemCode]      VARCHAR (50)    NULL,
    [Uom]              VARCHAR (5)     NOT NULL,
    [BaseUom]          VARCHAR (5)     NOT NULL,
    [UC]               DECIMAL (18, 8) NOT NULL,
    [UCDesc]           VARCHAR (50)    NULL,
    [MinUC]            DECIMAL (18, 8) NOT NULL,
    [StartDate]        DATETIME        NULL,
    [EndDate]          DATETIME        NULL,
    [Bom]              VARCHAR (50)    NULL,
    [LocFrom]          VARCHAR (50)    NULL,
    [LocTo]            VARCHAR (50)    NULL,
    [BillAddr]         VARCHAR (50)    NULL,
    [PriceList]        VARCHAR (50)    NULL,
    [Routing]          VARCHAR (50)    NULL,
    [ReturnRouting]    VARCHAR (50)    NULL,
    [Strategy]         TINYINT         NOT NULL,
    [ProdScan]         VARCHAR (50)    NULL,
    [Container]        VARCHAR (50)    NULL,
    [ContainerDesc]    VARCHAR (50)    NULL,
    [IsAutoCreate]     BIT             NOT NULL,
    [IsInspect]        BIT             NOT NULL,
    [IsRejInspect]     BIT             NOT NULL,
    [SafeStock]        DECIMAL (18, 8) NULL,
    [MaxStock]         DECIMAL (18, 8) NULL,
    [MinLotSize]       DECIMAL (18, 8) NULL,
    [OrderLotSize]     DECIMAL (18, 8) NULL,
    [RecLotSize]       DECIMAL (18, 8) NULL,
    [BatchSize]        DECIMAL (18, 8) NULL,
    [RoundUpOpt]       TINYINT         NOT NULL,
    [BillTerm]         TINYINT         NOT NULL,
    [MrpWeight]        INT             NOT NULL,
    [MrpTotal]         DECIMAL (18, 8) NOT NULL,
    [MrpTotalAdj]      DECIMAL (18, 8) NOT NULL,
    [ExtraDmdSource]   VARCHAR (256)   NULL,
    [PickStrategy]     VARCHAR (50)    NULL,
    [EBELN]            VARCHAR (50)    NULL,
    [EBELP]            VARCHAR (50)    NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [BinTo]            VARCHAR (50)    NULL,
    [IsChangeUC]       BIT             NOT NULL,
    [IsCheckedPackage] BIT             NULL,
    [FreezeDays]       INT             NULL,
    [IsActive]         BIT             NULL,
    [ManufactureParty] VARCHAR (50)    NULL,
    [MrpTag]           VARCHAR (50)    NULL,
    [IsCreatePickList] BIT             NULL
);


GO
PRINT N'Creating PK_SCM_FLOWDET...';


GO
ALTER TABLE [dbo].[SCM_FlowDet]
    ADD CONSTRAINT [PK_SCM_FLOWDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_FlowDet].[IX_SCM_FlowDet_Flow]...';


GO
CREATE NONCLUSTERED INDEX [IX_SCM_FlowDet_Flow]
    ON [dbo].[SCM_FlowDet]([Flow] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[SCM_FlowMstr]...';


GO
CREATE TABLE [dbo].[SCM_FlowMstr] (
    [Code]                 VARCHAR (50)  NOT NULL,
    [Desc1]                VARCHAR (100) NOT NULL,
    [IsActive]             BIT           NOT NULL,
    [Type]                 TINYINT       NOT NULL,
    [RefFlow]              VARCHAR (50)  NULL,
    [PartyFrom]            VARCHAR (50)  NOT NULL,
    [PartyTo]              VARCHAR (50)  NOT NULL,
    [ShipFrom]             VARCHAR (50)  NULL,
    [ShipTo]               VARCHAR (50)  NULL,
    [LocFrom]              VARCHAR (50)  NULL,
    [LocTo]                VARCHAR (50)  NULL,
    [BillAddr]             VARCHAR (50)  NULL,
    [PriceList]            VARCHAR (50)  NULL,
    [Routing]              VARCHAR (50)  NULL,
    [ReturnRouting]        VARCHAR (50)  NULL,
    [Dock]                 VARCHAR (100) NULL,
    [IsAutoCreate]         BIT           NOT NULL,
    [IsAutoRelease]        BIT           NOT NULL,
    [IsAutoStart]          BIT           NOT NULL,
    [IsAutoShip]           BIT           NOT NULL,
    [IsAutoReceive]        BIT           NOT NULL,
    [IsAutoBill]           BIT           NOT NULL,
    [IsListDet]            BIT           NOT NULL,
    [IsManualCreateDet]    BIT           NOT NULL,
    [IsListPrice]          BIT           NOT NULL,
    [IsPrintOrder]         BIT           NOT NULL,
    [IsPrintAsn]           BIT           NOT NULL,
    [IsPrintRcpt]          BIT           NOT NULL,
    [IsShipExceed]         BIT           NOT NULL,
    [IsRecExceed]          BIT           NOT NULL,
    [IsOrderFulfillUC]     BIT           NOT NULL,
    [IsShipFulfillUC]      BIT           NOT NULL,
    [IsRecFulfillUC]       BIT           NOT NULL,
    [IsShipScanHu]         BIT           NOT NULL,
    [IsRecScanHu]          BIT           NOT NULL,
    [IsCreatePL]           BIT           NOT NULL,
    [IsInspect]            BIT           NOT NULL,
    [IsShipFifo]           BIT           NOT NULL,
    [IsRejInspect]         BIT           NOT NULL,
    [IsRecFifo]            BIT           NOT NULL,
    [IsShipByOrder]        BIT           NOT NULL,
    [IsAsnUniqueRec]       BIT           NOT NULL,
    [IsMRP]                BIT           NOT NULL,
    [IsCheckPartyFromAuth] BIT           NOT NULL,
    [IsCheckPartyToAuth]   BIT           NOT NULL,
    [RecGapTo]             TINYINT       NOT NULL,
    [RecTemplate]          VARCHAR (100) NULL,
    [OrderTemplate]        VARCHAR (100) NULL,
    [AsnTemplate]          VARCHAR (100) NULL,
    [HuTemplate]           VARCHAR (100) NULL,
    [BillTerm]             TINYINT       NOT NULL,
    [CreateHuOpt]          TINYINT       NOT NULL,
    [MaxOrderCount]        INT           NOT NULL,
    [MRPOpt]               INT           NOT NULL,
    [IsPause]              BIT           NOT NULL,
    [PauseTime]            DATETIME      NULL,
    [FlowStrategy]         TINYINT       NOT NULL,
    [ExtraDmdSource]       VARCHAR (256) NULL,
    [PickStrategy]         VARCHAR (50)  NULL,
    [CreateUser]           INT           NOT NULL,
    [CreateUserNm]         VARCHAR (100) NOT NULL,
    [CreateDate]           DATETIME      NOT NULL,
    [LastModifyUser]       INT           NOT NULL,
    [LastModifyUserNm]     VARCHAR (100) NOT NULL,
    [LastModifyDate]       DATETIME      NOT NULL,
    [DAUAT]                VARCHAR (50)  NULL,
    [LastRefreshDate]      DATETIME      NULL,
    [ProdLineType]         TINYINT       NOT NULL,
    [TaktTime]             INT           NULL,
    [VirtualOpRef]         VARCHAR (50)  NULL,
    [WorkCenter]           VARCHAR (50)  NULL
);


GO
PRINT N'Creating PK_SCM_FLOWMSTR...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr]
    ADD CONSTRAINT [PK_SCM_FLOWMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_FlowStrategy]...';


GO
CREATE TABLE [dbo].[SCM_FlowStrategy] (
    [Flow]             VARCHAR (50)    NOT NULL,
    [Strategy]         TINYINT         NOT NULL,
    [Desc1]            VARCHAR (100)   NULL,
    [LeadTime]         DECIMAL (18, 8) NOT NULL,
    [EmLeadTime]       DECIMAL (18, 8) NOT NULL,
    [TimeUnit]         TINYINT         NOT NULL,
    [WinTime1]         VARCHAR (256)   NULL,
    [WinTime2]         VARCHAR (256)   NULL,
    [WinTime3]         VARCHAR (256)   NULL,
    [WinTime4]         VARCHAR (256)   NULL,
    [WinTime5]         VARCHAR (256)   NULL,
    [WinTime6]         VARCHAR (256)   NULL,
    [WinTime7]         VARCHAR (256)   NULL,
    [WeekInterval]     INT             NOT NULL,
    [NextOrderTime]    DATETIME        NULL,
    [NextWinTime]      DATETIME        NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [WinTimeType]      TINYINT         NOT NULL,
    [WinTimeDiff]      DECIMAL (18, 8) NOT NULL,
    [SeqGroup]         VARCHAR (50)    NULL,
    [QiTiaoBian]       VARCHAR (10)    NULL,
    [SupplierGroup]    VARCHAR (50)    NULL,
    [KBCalc]           TINYINT         NULL,
    [SupplierGroupSeq] INT             NULL,
    [NextWinTime2]     DATETIME        NULL,
    [PreOrderTime]     DATETIME        NULL,
    [PreWinTime]       DATETIME        NULL,
    [PreWinTime2]      DATETIME        NULL,
    [WaitTime]         DECIMAL (18, 8) NULL,
    [WaitBatch]        INT             NULL,
    [WinTimeInterval]  DECIMAL (18, 8) NULL
);


GO
PRINT N'Creating PK_SCM_FLOWSTRATEGY...';


GO
ALTER TABLE [dbo].[SCM_FlowStrategy]
    ADD CONSTRAINT [PK_SCM_FLOWSTRATEGY] PRIMARY KEY CLUSTERED ([Flow] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_OpRefBalance]...';


GO
CREATE TABLE [dbo].[SCM_OpRefBalance] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [Item]             VARCHAR (50)    NOT NULL,
    [OpRef]            VARCHAR (50)    NOT NULL,
    [Qty]              DECIMAL (18, 8) NOT NULL,
    [CreateUser]       INT             NOT NULL,
    [CreateUserNm]     VARCHAR (100)   NOT NULL,
    [CreateDate]       DATETIME        NOT NULL,
    [LastModifyUser]   INT             NOT NULL,
    [LastModifyUserNm] VARCHAR (100)   NOT NULL,
    [LastModifyDate]   DATETIME        NOT NULL,
    [Version]          INT             NULL
);


GO
PRINT N'Creating PK_SCM_OPREFBALANCE...';


GO
ALTER TABLE [dbo].[SCM_OpRefBalance]
    ADD CONSTRAINT [PK_SCM_OPREFBALANCE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_PickStrategy]...';


GO
CREATE TABLE [dbo].[SCM_PickStrategy] (
    [Code]             VARCHAR (50)  NOT NULL,
    [IsPickFromBin]    BIT           NOT NULL,
    [OddOption]        TINYINT       NOT NULL,
    [IsOddOccupy]      BIT           NOT NULL,
    [IsDevan]          BIT           NOT NULL,
    [IsFulfillUC]      BIT           NOT NULL,
    [ShipStrategy]     TINYINT       NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL,
    [IsSimple]         BIT           NOT NULL
);


GO
PRINT N'Creating PK_SCM_PICKSTRATEGY...';


GO
ALTER TABLE [dbo].[SCM_PickStrategy]
    ADD CONSTRAINT [PK_SCM_PICKSTRATEGY] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_ProdLineFact]...';


GO
CREATE TABLE [dbo].[SCM_ProdLineFact] (
    [Code]             VARCHAR (50)  NOT NULL,
    [ProdLine]         VARCHAR (50)  NOT NULL,
    [IsActive]         BIT           NOT NULL,
    [LocFrom]          VARCHAR (50)  NULL,
    [LocTo]            VARCHAR (50)  NULL,
    [InspLoc]          VARCHAR (50)  NULL,
    [RejLoc]           VARCHAR (50)  NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_SCM_PRODLINEFACT...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact]
    ADD CONSTRAINT [PK_SCM_PRODLINEFACT] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SCM_SeqGroup]...';


GO
CREATE TABLE [dbo].[SCM_SeqGroup] (
    [Code]              VARCHAR (50)  NOT NULL,
    [ProdLine]          VARCHAR (50)  NOT NULL,
    [SeqBatch]          INT           NOT NULL,
    [PrevOrderNo]       VARCHAR (50)  NULL,
    [PrevTraceCode]     VARCHAR (50)  NULL,
    [PrevSeq]           BIGINT        NULL,
    [PrevSubSeq]        INT           NULL,
    [PrevDeliveryDate]  DATE          NULL,
    [PrevDeliveryCount] INT           NULL,
    [CreateUser]        INT           NOT NULL,
    [CreateUserNm]      VARCHAR (100) NOT NULL,
    [CreateDate]        DATETIME      NOT NULL,
    [LastModifyUser]    INT           NOT NULL,
    [LastModifyUserNm]  VARCHAR (100) NOT NULL,
    [LastModifyDate]    DATETIME      NOT NULL,
    [Version]           INT           NOT NULL,
    [OpRef]             VARCHAR (50)  NOT NULL
);


GO
PRINT N'Creating PK_SCM_SEQGROUP...';


GO
ALTER TABLE [dbo].[SCM_SeqGroup]
    ADD CONSTRAINT [PK_SCM_SEQGROUP] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_CodeDet]...';


GO
CREATE TABLE [dbo].[SYS_CodeDet] (
    [Id]        INT           IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]      VARCHAR (50)  NOT NULL,
    [Value]     VARCHAR (100) NOT NULL,
    [Desc1]     VARCHAR (100) NOT NULL,
    [IsDefault] BIT           NOT NULL,
    [Seq]       INT           NOT NULL
);


GO
PRINT N'Creating PK_SYS_CODEDET...';


GO
ALTER TABLE [dbo].[SYS_CodeDet]
    ADD CONSTRAINT [PK_SYS_CODEDET] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_CodeDet].[IX_CodeDet]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CodeDet]
    ON [dbo].[SYS_CodeDet]([Code] ASC, [Value] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [dbo].[SYS_CodeMstr]...';


GO
CREATE TABLE [dbo].[SYS_CodeMstr] (
    [Code]  VARCHAR (50)  NOT NULL,
    [Desc1] VARCHAR (100) NOT NULL,
    [Type]  TINYINT       NOT NULL
);


GO
PRINT N'Creating PK_SYS_CODEMSTR...';


GO
ALTER TABLE [dbo].[SYS_CodeMstr]
    ADD CONSTRAINT [PK_SYS_CODEMSTR] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_EntityPreference]...';


GO
CREATE TABLE [dbo].[SYS_EntityPreference] (
    [Id]               INT           NOT NULL,
    [Seq]              INT           NOT NULL,
    [Value]            VARCHAR (100) NOT NULL,
    [Desc1]            VARCHAR (100) NOT NULL,
    [CreateUser]       INT           NOT NULL,
    [CreateUserNm]     VARCHAR (100) NOT NULL,
    [CreateDate]       DATETIME      NOT NULL,
    [LastModifyUser]   INT           NOT NULL,
    [LastModifyUserNm] VARCHAR (100) NOT NULL,
    [LastModifyDate]   DATETIME      NOT NULL
);


GO
PRINT N'Creating PK_SYS_ENTITYPREFERENCE...';


GO
ALTER TABLE [dbo].[SYS_EntityPreference]
    ADD CONSTRAINT [PK_SYS_ENTITYPREFERENCE] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_ErrorLog]...';


GO
CREATE TABLE [dbo].[SYS_ErrorLog] (
    [SP_Name]        VARCHAR (50)  NULL,
    [ErrorMessage]   VARCHAR (MAX) NULL,
    [ErrorNumber]    INT           NULL,
    [ErrorSeverity]  INT           NULL,
    [ErrorState]     INT           NULL,
    [ErrorProcedure] VARCHAR (100) NULL,
    [ErrorLine]      INT           NULL
);


GO
PRINT N'Creating [dbo].[SYS_Menu]...';


GO
CREATE TABLE [dbo].[SYS_Menu] (
    [Code]     VARCHAR (50)  NOT NULL,
    [Name]     VARCHAR (50)  NOT NULL,
    [Parent]   VARCHAR (50)  NULL,
    [Seq]      INT           NOT NULL,
    [Desc1]    VARCHAR (50)  NOT NULL,
    [PageUrl]  VARCHAR (256) NULL,
    [ImageUrl] VARCHAR (256) NULL,
    [IsActive] BIT           NOT NULL
);


GO
PRINT N'Creating PK_SYS_MENU...';


GO
ALTER TABLE [dbo].[SYS_Menu]
    ADD CONSTRAINT [PK_SYS_MENU] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_MsgSubscirber]...';


GO
CREATE TABLE [dbo].[SYS_MsgSubscirber] (
    [Id]          INT            NOT NULL,
    [Descritpion] NVARCHAR (100) NOT NULL,
    [Emails]      VARCHAR (500)  NULL,
    [Mobiles]     VARCHAR (500)  NULL
);


GO
PRINT N'Creating PK_SYS_MsgSubscirber...';


GO
ALTER TABLE [dbo].[SYS_MsgSubscirber]
    ADD CONSTRAINT [PK_SYS_MsgSubscirber] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_NumCtrl]...';


GO
CREATE TABLE [dbo].[SYS_NumCtrl] (
    [Code]     VARCHAR (50) NOT NULL,
    [IntValue] INT          NOT NULL
);


GO
PRINT N'Creating PK_SYS_NUMCTRL...';


GO
ALTER TABLE [dbo].[SYS_NumCtrl]
    ADD CONSTRAINT [PK_SYS_NUMCTRL] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_SNRule]...';


GO
CREATE TABLE [dbo].[SYS_SNRule] (
    [Code]        INT           NOT NULL,
    [Desc1]       VARCHAR (100) NOT NULL,
    [PreFixed]    VARCHAR (10)  NULL,
    [YearCode]    VARCHAR (6)   NULL,
    [MonthCode]   VARCHAR (4)   NULL,
    [DayCode]     VARCHAR (4)   NULL,
    [BlockSeq]    VARCHAR (10)  NULL,
    [SeqLength]   TINYINT       NOT NULL,
    [SeqBaseType] VARCHAR (10)  NULL,
    [SeqMin]      INT           NOT NULL
);


GO
PRINT N'Creating PK_SYS_SNRULE...';


GO
ALTER TABLE [dbo].[SYS_SNRule]
    ADD CONSTRAINT [PK_SYS_SNRULE] PRIMARY KEY CLUSTERED ([Code] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_SNRuleExt]...';


GO
CREATE TABLE [dbo].[SYS_SNRuleExt] (
    [Id]        INT          IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [Code]      INT          NOT NULL,
    [Field]     VARCHAR (20) NOT NULL,
    [FieldSeq]  INT          NOT NULL,
    [IsChoosed] BIT          NOT NULL
);


GO
PRINT N'Creating PK_SYS_SNRULEEXT...';


GO
ALTER TABLE [dbo].[SYS_SNRuleExt]
    ADD CONSTRAINT [PK_SYS_SNRULEEXT] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[SYS_TabIdSeq]...';


GO
CREATE TABLE [dbo].[SYS_TabIdSeq] (
    [TabNm] VARCHAR (50) NOT NULL,
    [Id]    BIGINT       NOT NULL
);


GO
PRINT N'Creating PK_SYS_TABIDSEQ...';


GO
ALTER TABLE [dbo].[SYS_TabIdSeq]
    ADD CONSTRAINT [PK_SYS_TABIDSEQ] PRIMARY KEY CLUSTERED ([TabNm] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [dbo].[Temp_FlowPro]...';


GO
CREATE TABLE [dbo].[Temp_FlowPro] (
    [序号_Serial No#] NVARCHAR (255) NULL,
    [_PRP No#]      NVARCHAR (255) NULL,
    [包装描述]          NVARCHAR (255) NULL,
    [数量]            FLOAT          NULL,
    [容器描述]          NVARCHAR (255) NULL,
    [是否允许修改包装]      FLOAT          NULL,
    [容器代码]          NVARCHAR (255) NULL,
    [上线包装]          FLOAT          NULL
);


GO
PRINT N'Creating [dbo].[初始化ASN$]...';


GO
CREATE TABLE [dbo].[初始化ASN$] (
    [a] NVARCHAR (255) NULL,
    [b] NVARCHAR (255) NULL,
    [c] NVARCHAR (255) NULL,
    [d] FLOAT          NULL
);


GO
PRINT N'Creating [dbo].[订单号$]...';


GO
CREATE TABLE [dbo].[订单号$] (
    [OrderNo]     NVARCHAR (255) NULL,
    [供应商]         NVARCHAR (255) NULL,
    [Item]        NVARCHAR (255) NULL,
    [PartyFromNm] NVARCHAR (255) NULL,
    [PartyTo]     NVARCHAR (255) NULL,
    [PartyToNm]   NVARCHAR (255) NULL,
    [ShipFrom]    NVARCHAR (255) NULL,
    [ShipTo]      NVARCHAR (255) NULL,
    [ShipToAddr]  NVARCHAR (255) NULL,
    [LocTo]       NVARCHAR (255) NULL,
    [LocToNm]     NVARCHAR (255) NULL,
    [BillAddr]    NVARCHAR (255) NULL,
    [FlowDesc]    NVARCHAR (255) NULL
);


GO
PRINT N'Creating [dbo].[有效路线$]...';


GO
CREATE TABLE [dbo].[有效路线$] (
    [code]      NVARCHAR (255) NULL,
    [desc1]     NVARCHAR (255) NULL,
    [partyfrom] NVARCHAR (255) NULL,
    [partyto]   NVARCHAR (255) NULL,
    [locto]     NVARCHAR (255) NULL,
    [item]      NVARCHAR (255) NULL,
    [uc]        FLOAT          NULL
);


GO
PRINT N'Creating DF_FIS_CreateIpDAT_ErrorCount...';


GO
ALTER TABLE [dbo].[FIS_CreateIpDAT]
    ADD CONSTRAINT [DF_FIS_CreateIpDAT_ErrorCount] DEFAULT ((0)) FOR [ErrorCount];


GO
PRINT N'Creating DF_FIS_CreateOrderDAT_ErrorCount...';


GO
ALTER TABLE [dbo].[FIS_CreateOrderDAT]
    ADD CONSTRAINT [DF_FIS_CreateOrderDAT_ErrorCount] DEFAULT ((0)) FOR [ErrorCount];


GO
PRINT N'Creating DF_FIS_LesINLog_IsCreateDat...';


GO
ALTER TABLE [dbo].[FIS_LesINLog]
    ADD CONSTRAINT [DF_FIS_LesINLog_IsCreateDat] DEFAULT ((0)) FOR [IsCreateDat];


GO
PRINT N'Creating DF_FIS_WMSDatFile_IsHand...';


GO
ALTER TABLE [dbo].[FIS_WMSDatFile]
    ADD CONSTRAINT [DF_FIS_WMSDatFile_IsHand] DEFAULT ((0)) FOR [IsHand];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[LOG_GenSequenceOrder]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_LOG_GenVanProdOrder_CreateDate...';


GO
ALTER TABLE [dbo].[LOG_GenVanProdOrder]
    ADD CONSTRAINT [DF_LOG_GenVanProdOrder_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[LOG_OrderTrace]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[LOG_OrderTraceDet]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF__LOG_RunLe__Creat__13A973D6...';


GO
ALTER TABLE [dbo].[LOG_RunLeanEngine]
    ADD CONSTRAINT [DF__LOG_RunLe__Creat__13A973D6] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[LOG_VanOrderBomTrace]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[LOG_VanOrderTrace]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_MSG_MessageQueue_CreateTime...';


GO
ALTER TABLE [dbo].[MSG_MessageQueue]
    ADD CONSTRAINT [DF_MSG_MessageQueue_CreateTime] DEFAULT (getdate()) FOR [CreateTime];


GO
PRINT N'Creating DF_ORD_OrderBomCPTime_CreateDate...';


GO
ALTER TABLE [dbo].[ORD_OrderBomCPTime]
    ADD CONSTRAINT [DF_ORD_OrderBomCPTime_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_ORD_OrderOpCPTime_CreateDate...';


GO
ALTER TABLE [dbo].[ORD_OrderOpCPTime]
    ADD CONSTRAINT [DF_ORD_OrderOpCPTime_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_SAP_InvLoc_CreateDate...';


GO
ALTER TABLE [dbo].[SAP_InvLoc]
    ADD CONSTRAINT [DF_SAP_InvLoc_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_SAP_InvTrans_CreateDate...';


GO
ALTER TABLE [dbo].[SAP_InvTrans]
    ADD CONSTRAINT [DF_SAP_InvTrans_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[SAP_ProdBomDet]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_SAP_ProdOpReport_Status...';


GO
ALTER TABLE [dbo].[SAP_ProdOpReport]
    ADD CONSTRAINT [DF_SAP_ProdOpReport_Status] DEFAULT ((0)) FOR [Status];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[SAP_ProdOrder]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating On column: CreateDate...';


GO
ALTER TABLE [dbo].[SAP_ProdRoutingDet]
    ADD DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating DF_SAP_TransCallBack_CreateDate...';


GO
ALTER TABLE [dbo].[SAP_TransCallBack]
    ADD CONSTRAINT [DF_SAP_TransCallBack_CreateDate] DEFAULT (getdate()) FOR [CreateDate];


GO
PRINT N'Creating FK_ACC_PERM_REFERENCE_ACC_PERM2...';


GO
ALTER TABLE [dbo].[ACC_Permission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM2] FOREIGN KEY ([Category]) REFERENCES [dbo].[ACC_PermissionCategory] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_PERM_REFERENCE_ACC_PERM...';


GO
ALTER TABLE [dbo].[ACC_PermissionGroupPermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM] FOREIGN KEY ([PermissionId]) REFERENCES [dbo].[ACC_Permission] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_PERM_REFERENCE_ACC_PERM3...';


GO
ALTER TABLE [dbo].[ACC_PermissionGroupPermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM3] FOREIGN KEY ([GroupId]) REFERENCES [dbo].[ACC_PermissionGroup] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_ROLE_REFERENCE_ACC_PERM2...';


GO
ALTER TABLE [dbo].[ACC_RolePermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_PERM2] FOREIGN KEY ([PermissionId]) REFERENCES [dbo].[ACC_Permission] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_ROLE_REFERENCE_ACC_ROLE2...';


GO
ALTER TABLE [dbo].[ACC_RolePermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_ROLE2] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[ACC_Role] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_ROLE_REFERENCE_ACC_PERM...';


GO
ALTER TABLE [dbo].[ACC_RolePermissionGroup] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_PERM] FOREIGN KEY ([GroupId]) REFERENCES [dbo].[ACC_PermissionGroup] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_ROLE_REFERENCE_ACC_ROLE...';


GO
ALTER TABLE [dbo].[ACC_RolePermissionGroup] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_ROLE] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[ACC_Role] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_USER...';


GO
ALTER TABLE [dbo].[ACC_UserFav] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ACC_User] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_SYS_MENU...';


GO
ALTER TABLE [dbo].[ACC_UserFav] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_SYS_MENU] FOREIGN KEY ([Menu]) REFERENCES [dbo].[SYS_Menu] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_PERM...';


GO
ALTER TABLE [dbo].[ACC_UserPermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_PERM] FOREIGN KEY ([PermissionId]) REFERENCES [dbo].[ACC_Permission] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_USER4...';


GO
ALTER TABLE [dbo].[ACC_UserPermission] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER4] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ACC_User] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_PERM2...';


GO
ALTER TABLE [dbo].[ACC_UserPermissionGroup] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_PERM2] FOREIGN KEY ([GroupId]) REFERENCES [dbo].[ACC_PermissionGroup] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_USER3...';


GO
ALTER TABLE [dbo].[ACC_UserPermissionGroup] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER3] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ACC_User] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_ROLE...';


GO
ALTER TABLE [dbo].[ACC_UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_ROLE] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[ACC_Role] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ACC_USER_REFERENCE_ACC_USER2...';


GO
ALTER TABLE [dbo].[ACC_UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER2] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ACC_User] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BAT_JOBP_REFERENCE_BAT_JOB...';


GO
ALTER TABLE [dbo].[BAT_JobParam] WITH NOCHECK
    ADD CONSTRAINT [FK_BAT_JOBP_REFERENCE_BAT_JOB] FOREIGN KEY ([JobId]) REFERENCES [dbo].[BAT_Job] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BAT_TRIG_REFERENCE_BAT_JOB...';


GO
ALTER TABLE [dbo].[BAT_Trigger] WITH NOCHECK
    ADD CONSTRAINT [FK_BAT_TRIG_REFERENCE_BAT_JOB] FOREIGN KEY ([JobId]) REFERENCES [dbo].[BAT_Job] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BAT_TRIG_REFERENCE_BAT_TRIG...';


GO
ALTER TABLE [dbo].[BAT_TriggerParam] WITH NOCHECK
    ADD CONSTRAINT [FK_BAT_TRIG_REFERENCE_BAT_TRIG] FOREIGN KEY ([TriggerId]) REFERENCES [dbo].[BAT_Trigger] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_ACTB_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[BIL_ActBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_BIL_ACTB...';


GO
ALTER TABLE [dbo].[BIL_BillDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_ACTB] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_BIL_BILL...';


GO
ALTER TABLE [dbo].[BIL_BillDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_BILL] FOREIGN KEY ([BillNo]) REFERENCES [dbo].[BIL_BillMstr] ([BillNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[BIL_BillDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[BIL_BillDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[BIL_BillDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[BIL_BillMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[BIL_BillMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[BIL_BillMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_BILL_REFERENCE_MD_TAX...';


GO
ALTER TABLE [dbo].[BIL_BillMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_TAX] FOREIGN KEY ([Tax]) REFERENCES [dbo].[MD_Tax] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PLAN_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[BIL_PlanBill] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[BIL_PriceListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[BIL_PriceListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[BIL_PriceListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[BIL_PriceListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[BIL_PriceListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_BIL_PRIC_REFERENCE_MD_TAX...';


GO
ALTER TABLE [dbo].[BIL_PriceListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_TAX] FOREIGN KEY ([Tax]) REFERENCES [dbo].[MD_Tax] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_CUST_DEF_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[CUST_DeferredFeedCounter] WITH NOCHECK
    ADD CONSTRAINT [FK_CUST_DEF_REFERENCE_SCM_FLOW] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_CUST_ITE_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[CUST_ItemTrace] WITH NOCHECK
    ADD CONSTRAINT [FK_CUST_ITE_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_INP_CONC...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_INP_CONC] FOREIGN KEY ([CCSNo]) REFERENCES [dbo].[INP_ConcessionMstr] ([CCSNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INP_ConcessionDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_INP_REJE...';


GO
ALTER TABLE [dbo].[INP_ConcessionMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_INP_REJE] FOREIGN KEY ([RejNo]) REFERENCES [dbo].[INP_RejectMstr] ([RejNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_CONC_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[INP_ConcessionMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_CONC_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_INP_INSP2...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_INP_INSP2] FOREIGN KEY ([InpNo]) REFERENCES [dbo].[INP_InspectMstr] ([InpNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_LOCAT4...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT4] FOREIGN KEY ([CurrLoc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_LOCAT5...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT5] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_UOM4...';


GO
ALTER TABLE [dbo].[INP_InspectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM4] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[INP_InspectMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_PARTY2] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[INP_InspectMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_INP_INSP...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_INP_INSP] FOREIGN KEY ([InpNo]) REFERENCES [dbo].[INP_InspectMstr] ([InpNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_INV_HU2...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_INV_HU2] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT3] FOREIGN KEY ([CurrLoc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_INSP_REFERENCE_MD_UOM3...';


GO
ALTER TABLE [dbo].[INP_InspectResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM3] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_InspectResultExt_inpRetId_FOREIGN_KEY...';


GO
ALTER TABLE [dbo].[INP_InspectResultExt] WITH NOCHECK
    ADD CONSTRAINT [FK_InspectResultExt_inpRetId_FOREIGN_KEY] FOREIGN KEY ([inpRetId]) REFERENCES [dbo].[INP_InspectResultExt] ([id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_PROD_REFERENCE_INP_PROD...';


GO
ALTER TABLE [dbo].[INP_ProdScanDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_PROD_REFERENCE_INP_PROD] FOREIGN KEY ([ProdScan]) REFERENCES [dbo].[INP_ProdScanMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_PROD_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INP_ProdScanDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_PROD_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_INP_INSP...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_INP_INSP] FOREIGN KEY ([InpNo]) REFERENCES [dbo].[INP_InspectMstr] ([InpNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_INP_INSP2...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_INP_INSP2] FOREIGN KEY ([InspResultId]) REFERENCES [dbo].[INP_InspectResult] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_INP_REJE...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_INP_REJE] FOREIGN KEY ([RejNo]) REFERENCES [dbo].[INP_RejectMstr] ([RejNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_LOCAT] FOREIGN KEY ([CurrLoc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INP_RejectDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_UOM2] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INP_REJE_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[INP_RejectMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INP_REJE_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_CONT_REFERENCE_MD_CONTA2...';


GO
ALTER TABLE [dbo].[INV_ContainerDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_CONT_REFERENCE_MD_CONTA2] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_CONT_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[INV_ContainerDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_CONT_REFERENCE_MD_PARTY2] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_CONT_REFERENCE_INV_CONT...';


GO
ALTER TABLE [dbo].[INV_ContLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_CONT_REFERENCE_INV_CONT] FOREIGN KEY ([ContId]) REFERENCES [dbo].[INV_ContainerDet] ([ContId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_CONT_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[INV_ContLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_CONT_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_CONT_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[INV_ContLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_CONT_REFERENCE_MD_PARTY] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_DAIL_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_DailyTransBalance] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_DAIL_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_DAIL_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[INV_DailyTransBalance] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_DAIL_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_HU_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_Hu] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_HU_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_HU_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[INV_Hu] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_HU_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_HU_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INV_Hu] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_HU_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_HU_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INV_Hu] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_HU_REFERENCE_MD_UOM2] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_HUCS_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INV_HuCS] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_HUCS_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_ITEM] FOREIGN KEY ([ItemTo]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_ITEM2] FOREIGN KEY ([ItemFrom]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocationTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocationFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_REGIO] FOREIGN KEY ([RegionTo]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_REGIO2...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_REGIO2] FOREIGN KEY ([RegionFrom]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_ITEM_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INV_ItemExchange] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_UOM2] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_KANB_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_KanBanCard] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_KANB_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_KANB_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INV_KanBanCard] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_KANB_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_KANB_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[INV_KanBanCard] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_KANB_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_KANB_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INV_KanBanCard] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_KANB_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_KANB_REFERENCE_INV_KANB...';


GO
ALTER TABLE [dbo].[INV_KanBanCardInfo] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_KANB_REFERENCE_INV_KANB] FOREIGN KEY ([KBICode]) REFERENCES [dbo].[INV_KanBanCard] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LOCA_0_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LOCA_0_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LOCA_0_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LOCA_0_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LOCA_0_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LOCA_0_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_LOCAT] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LOCA_0_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_LOCAT2] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_0_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_0_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet0_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet0_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet0_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet0_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet0_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet0_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet0_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet0_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_1_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_1_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet1_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet1_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet1_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet1_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet1_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet1_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet1_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet1_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_10_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_10_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet10_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet10_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet10_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet10_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet10_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet10_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet10_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet10_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet10_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet10_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_11_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_11_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet11_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet11_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet11_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet11_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet11_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet11_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet11_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet11_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet11_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet11_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_12_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_12_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet12_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet12_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet12_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet12_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet12_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet12_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet12_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet12_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet12_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet12_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_13_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_13_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet13_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet13_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet13_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet13_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet13_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet13_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet13_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet13_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet13_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet13_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_14_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_14_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet14_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet14_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet14_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet14_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet14_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet14_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet14_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet14_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet14_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet14_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_15_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_15_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet15_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet15_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet15_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet15_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet15_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet15_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet15_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet15_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet15_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet15_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_16_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_16_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet16_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet16_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet16_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet16_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet16_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet16_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet16_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet16_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet16_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet16_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_17_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_17_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet17_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet17_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet17_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet17_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet17_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet17_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet17_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet17_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet17_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet17_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_18_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_18_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet18_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet18_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet18_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet18_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet18_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet18_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet18_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet18_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet18_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet18_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_19_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_19_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet19_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet19_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet19_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet19_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet19_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet19_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet19_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet19_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet19_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet19_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_2_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_2_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet2_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet2_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet2_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet2_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet2_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet2_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet2_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet2_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_3_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_3_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet3_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet3_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet3_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet3_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet3_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet3_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet3_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet3_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_4_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_4_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet4_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet4_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet4_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet4_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet4_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet4_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet4_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet4_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_5_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_5_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet5_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet5_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet5_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet5_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet5_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet5_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet5_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet5_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_6_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_6_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet6_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet6_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet6_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet6_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet6_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet6_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet6_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet6_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_7_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_7_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet7_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet7_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet7_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet7_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet7_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet7_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet7_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet7_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_8_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_8_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet8_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet8_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet8_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet8_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet8_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet8_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet8_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet8_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet_9_REFERENCE_MD_SUPPLIER...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet_9_REFERENCE_MD_SUPPLIER] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet9_Bin_REFERENCE_MD_LocationBin_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet9_Bin_REFERENCE_MD_LocationBin_Code] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet9_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet9_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet9_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet9_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet9_Location_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet9_Location_REFERENCE_MD_Location_Code] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_LocationLotDet9_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_LocationLotDet9_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_OPRE_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_OpRefBalance] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_OPRE_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_HU2...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_HU2] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_STOC2...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC2] FOREIGN KEY ([StNo]) REFERENCES [dbo].[INV_StockTakeMstr] ([StNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT3] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT4...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT4] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT5...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT5] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[INV_StockTakeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_STOC4...';


GO
ALTER TABLE [dbo].[INV_StockTakeItem] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC4] FOREIGN KEY ([StNo]) REFERENCES [dbo].[INV_StockTakeMstr] ([StNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[INV_StockTakeItem] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_STOC...';


GO
ALTER TABLE [dbo].[INV_StockTakeLoc] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC] FOREIGN KEY ([StNo]) REFERENCES [dbo].[INV_StockTakeMstr] ([StNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[INV_StockTakeLoc] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT] FOREIGN KEY ([Loc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[INV_StockTakeMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT2] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_INV_STOC3...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC3] FOREIGN KEY ([StNo]) REFERENCES [dbo].[INV_StockTakeMstr] ([StNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_ITEM3...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM3] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT6...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT6] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT7...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT7] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_LOCAT8...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT8] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_INV_STOC_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[INV_StockTakeResult] WITH NOCHECK
    ADD CONSTRAINT [FK_INV_STOC_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU7...';


GO
ALTER TABLE [dbo].[ISS_IssueDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU7] FOREIGN KEY ([IssueLevel]) REFERENCES [dbo].[ISS_IssueLevel] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU9...';


GO
ALTER TABLE [dbo].[ISS_IssueDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU9] FOREIGN KEY ([IssueCode]) REFERENCES [dbo].[ISS_IssueMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU8...';


GO
ALTER TABLE [dbo].[ISS_IssueMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU8] FOREIGN KEY ([IssueType]) REFERENCES [dbo].[ISS_IssueType] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU...';


GO
ALTER TABLE [dbo].[ISS_IssueNo] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU] FOREIGN KEY ([IssueType]) REFERENCES [dbo].[ISS_IssueType] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU3...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU3] FOREIGN KEY ([IssueType]) REFERENCES [dbo].[ISS_IssueType] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU4...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU4] FOREIGN KEY ([IssueLevel]) REFERENCES [dbo].[ISS_IssueLevel] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ACC_ROLE...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToRoleDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ACC_ROLE] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[ACC_Role] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU6...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToRoleDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU6] FOREIGN KEY ([IssueTypeTo]) REFERENCES [dbo].[ISS_IssueTypeToMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ACC_USER...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToUserDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ACC_USER] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ACC_User] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ISS_ISSU_REFERENCE_ISS_ISSU5...';


GO
ALTER TABLE [dbo].[ISS_IssueTypeToUserDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU5] FOREIGN KEY ([IssueTypeTo]) REFERENCES [dbo].[ISS_IssueTypeToMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_inpRetId_FOREIGN_KEY...';


GO
ALTER TABLE [dbo].[MD_Custodian] WITH NOCHECK
    ADD CONSTRAINT [FK_inpRetId_FOREIGN_KEY] FOREIGN KEY ([UserCode]) REFERENCES [dbo].[ACC_User] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_Custodian_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_Custodian] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_Custodian_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_Custodian_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[MD_Custodian] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_Custodian_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_CUSTO_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_Customer] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_CUSTO_REFERENCE_MD_PARTY] FOREIGN KEY ([Code]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMC_REFERENCE_MD_ITEMC...';


GO
ALTER TABLE [dbo].[MD_ItemCategory] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMC_REFERENCE_MD_ITEMC] FOREIGN KEY ([ParentCategory]) REFERENCES [dbo].[MD_ItemCategory] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMD_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_ItemDiscon] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMD_REFERENCE_MD_ITEM] FOREIGN KEY ([DisconItem]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMD_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[MD_ItemDiscon] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMD_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMD_REFERENCE_PRD_BOMM...';


GO
ALTER TABLE [dbo].[MD_ItemDiscon] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMD_REFERENCE_PRD_BOMM] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMK_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_ItemKit] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMK_REFERENCE_MD_ITEM] FOREIGN KEY ([ChildItem]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMK_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[MD_ItemKit] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMK_REFERENCE_MD_ITEM2] FOREIGN KEY ([KitItem]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMP_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_ItemPackage] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMP_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMR_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_ItemRef] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMR_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_ITEMR_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_ItemRef] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_ITEMR_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_LOCAT_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[MD_Location] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_LOCAT_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[MD_LocationArea] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT2] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_LOCAT_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[MD_LocationBin] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_LOCAT_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[MD_LocationBin] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT3] FOREIGN KEY ([Area]) REFERENCES [dbo].[MD_LocationArea] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_PARTY_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[MD_PartyAddr] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_PARTY_REFERENCE_MD_ADDRE] FOREIGN KEY ([Address]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_PARTY_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_PartyAddr] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_PARTY_REFERENCE_MD_PARTY] FOREIGN KEY ([Party]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_REGIO_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_Region] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_REGIO_REFERENCE_MD_PARTY] FOREIGN KEY ([Code]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_SPECI_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[MD_SpecialTime] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_SPECI_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_SUPPL_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[MD_Supplier] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_SUPPL_REFERENCE_MD_PARTY] FOREIGN KEY ([Code]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_UOMCO_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[MD_UomConv] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_UOMCO_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[MD_UomConv] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_UOMCO_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[MD_UomConv] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_UOM2] FOREIGN KEY ([AltUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_WORKC_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[MD_WorkCenter] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_WORKC_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_MD_WORKI_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[MD_WorkingCalendar] WITH NOCHECK
    ADD CONSTRAINT [FK_MD_WORKI_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_CONT_REFERENCE_INV_CONT...';


GO
ALTER TABLE [dbo].[ORD_ContOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_CONT_REFERENCE_INV_CONT] FOREIGN KEY ([ContId]) REFERENCES [dbo].[INV_ContainerDet] ([ContId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_CONT_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[ORD_ContOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_CONT_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_CONT_REFERENCE_ORD_CONT...';


GO
ALTER TABLE [dbo].[ORD_ContOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_CONT_REFERENCE_ORD_CONT] FOREIGN KEY ([OrderNo]) REFERENCES [dbo].[ORD_ContOrderMstr] ([OrderNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_LOCAT3] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPDE_0_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_IpDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet0_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet0_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet1_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet1_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet2_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet2_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet3_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet3_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet4_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet4_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet5_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet5_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet6_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet6_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet7_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet7_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpDet8_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_IpDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpDet8_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPLO_0_REFERENCE_BIL_ACTB...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_BIL_ACTB] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPLO_0_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPLO_0_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPLO_0_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet0_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet0_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet1_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet1_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet2_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet2_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet3_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet3_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet4_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet4_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet5_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet5_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet6_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet6_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet7_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet7_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet8_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet8_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPMS_0_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[ORD_IpMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_ADDRE] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPMS_0_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[ORD_IpMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPMS_0_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_IpMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_PARTY] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IPMS_0_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[ORD_IpMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr0_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr0_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr0_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr0_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr0_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr0_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr0_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr0_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr1_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr1_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr1_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr1_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr1_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr1_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr1_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr1_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr2_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr2_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr2_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr2_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr2_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr2_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr2_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr2_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr3_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr3_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr3_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr3_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr3_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr3_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr3_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr3_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr4_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr4_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr4_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr4_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr4_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr4_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr4_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr4_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr5_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr5_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr5_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr5_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr5_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr5_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr5_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr5_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr6_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr6_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr6_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr6_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr6_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr6_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr6_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr6_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr7_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr7_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr7_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr7_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr7_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr7_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr7_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr7_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr8_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr8_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr8_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr8_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr8_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr8_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_IpMstr8_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_IpMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_IpMstr8_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_LOCAT3] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_UOM3...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM3] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_ORD_MISC2...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC2] FOREIGN KEY ([MiscOrderNo]) REFERENCES [dbo].[ORD_MiscOrderMstr] ([MiscOrderNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_BIL_ACTB...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_BIL_ACTB] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_SUPPL...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_SUPPL] FOREIGN KEY ([CSSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_ORD_MISC...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC] FOREIGN KEY ([MiscOrderNo]) REFERENCES [dbo].[ORD_MiscOrderMstr] ([MiscOrderNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_ORD_MISC3...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC3] FOREIGN KEY ([MiscOrderDetId]) REFERENCES [dbo].[ORD_MiscOrderDet] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_LOCAT2] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_MISC_REFERENCE_MD_REGIO2...';


GO
ALTER TABLE [dbo].[ORD_MiscOrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_REGIO2] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ITEM3...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM3] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ITEM4...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM4] FOREIGN KEY ([FGItem]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_LOCAT4...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT4] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_PARTY5...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY5] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_UOM5...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM5] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_UOM6...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM6] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_PRD_BOMM3...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_BOMM3] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_FLOW4...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW4] FOREIGN KEY ([ProdLine]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_PROD2...';


GO
ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PROD2] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[ORD_OrderBinding] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW] FOREIGN KEY ([BindFlow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_ORD_ORDE10...';


GO
ALTER TABLE [dbo].[ORD_OrderBindingDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_ORD_ORDE10] FOREIGN KEY ([OrderBindingId]) REFERENCES [dbo].[ORD_OrderBinding] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_ORD_ORDE14...';


GO
ALTER TABLE [dbo].[ORD_OrderBindingDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_ORD_ORDE14] FOREIGN KEY ([OrderBomDetId]) REFERENCES [dbo].[ORD_OrderBomDet] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_LOCAT10...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT10] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_UOM4...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM4] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_PRD_BOMM2...';


GO
ALTER TABLE [dbo].[ORD_OrderBomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_BOMM2] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_CURRE...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_CURRE] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_LOCAT6...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_LOCAT6] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_LOCAT7...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_LOCAT7] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_PARTY4...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_PARTY4] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_MD_UOM3...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_UOM3] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_PRD_BOMM...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_PRD_BOMM] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_PRD_ROUT...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_PRD_ROUT] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_0_REFERENCE_SCM_PICK...';


GO
ALTER TABLE [dbo].[ORD_OrderDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_SCM_PICK] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet0_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet0_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet1_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet1_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet2_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet2_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet3_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet3_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet4_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet4_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet5_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet5_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet6_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet6_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet7_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet7_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Bom_REFERENCE_PRD_BomMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Bom_REFERENCE_PRD_BomMstr_Code] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Container_REFERENCE_MD_Container_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Container_REFERENCE_MD_Container_Code] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderDet8_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderDet8_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_BIL_PRIC2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_BIL_PRIC2] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ADDRE3...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE3] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_ADDRE4...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE4] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_CURRE2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_CURRE2] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT3] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_PARTY3...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY3] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_PRD_ROUT2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_ROUT2] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_PRD_SHIF...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_SHIF] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_FLOW2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW2] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_PICK2...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PICK2] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_SCM_PROD...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PROD] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr0_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr0_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr1_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr1_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr2_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr2_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr3_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr3_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr4_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr4_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr5_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr5_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr6_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr6_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr7_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr7_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_BillAddr_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_BillAddr_REFERENCE_MD_Address_Code] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_Currency_REFERENCE_MD_Currency_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_Currency_REFERENCE_MD_Currency_Code] FOREIGN KEY ([Currency]) REFERENCES [dbo].[MD_Currency] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_Flow_REFERENCE_SCM_FlowMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_Flow_REFERENCE_SCM_FlowMstr_Code] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_PickStrategy_REFERENCE_SCM_PickStrategy_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_PickStrategy_REFERENCE_SCM_PickStrategy_Code] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_PriceList_REFERENCE_BIL_PriceListMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_PriceList_REFERENCE_BIL_PriceListMstr_Code] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_Routing_REFERENCE_PRD_RoutingMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_Routing_REFERENCE_PRD_RoutingMstr_Code] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_Shift_REFERENCE_PRD_ShiftMstr_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_Shift_REFERENCE_PRD_ShiftMstr_Code] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_OrderMstr8_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_OrderMstr8_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[ORD_OrderOp] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_ORDE_REFERENCE_MD_WORKC...';


GO
ALTER TABLE [dbo].[ORD_OrderOp] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_WORKC] FOREIGN KEY ([WorkCenter]) REFERENCES [dbo].[MD_WorkCenter] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_INV_HU2...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_INV_HU2] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ITEM2] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT3] FOREIGN KEY ([Area]) REFERENCES [dbo].[MD_LocationArea] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_LOCAT4...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT4] FOREIGN KEY ([Bin]) REFERENCES [dbo].[MD_LocationBin] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_UOM3...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM3] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_ORD_PICK2...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK2] FOREIGN KEY ([PLNo]) REFERENCES [dbo].[ORD_PickListMstr] ([PLNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_SCM_PICK...';


GO
ALTER TABLE [dbo].[ORD_PickListDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_SCM_PICK] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[ORD_PickListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_ADDRE3...';


GO
ALTER TABLE [dbo].[ORD_PickListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ADDRE3] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[ORD_PickListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_PARTY3...';


GO
ALTER TABLE [dbo].[ORD_PickListMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY3] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_MD_UOM4...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM4] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_ORD_PICK...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK] FOREIGN KEY ([PLNo]) REFERENCES [dbo].[ORD_PickListMstr] ([PLNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_PICK_REFERENCE_ORD_PICK3...';


GO
ALTER TABLE [dbo].[ORD_PickListResult] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK3] FOREIGN KEY ([PLDetId]) REFERENCES [dbo].[ORD_PickListDet] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECD_0_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_RecDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_UOM2] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet0_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet0_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet1_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet1_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet2_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet2_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet3_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet3_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet4_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet4_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet5_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet5_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet6_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet6_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet7_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet7_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_BaseUom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_BaseUom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_LocFrom_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_LocFrom_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_LocTo_REFERENCE_MD_Location_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_LocTo_REFERENCE_MD_Location_Code] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_ManufactureParty_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_ManufactureParty_REFERENCE_MD_Party_Code] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecDet8_Uom_REFERENCE_MD_Uom_Code...';


GO
ALTER TABLE [dbo].[ORD_RecDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecDet8_Uom_REFERENCE_MD_Uom_Code] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECL_0_REFERENCE_BIL_ACTB...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECL_0_REFERENCE_BIL_ACTB] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECL_0_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECL_0_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECL_0_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECL_0_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECL_0_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECL_0_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet0_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet0_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet0_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet0_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet1_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet1_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet1_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet1_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet2_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet2_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet2_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet2_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet3_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet3_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet3_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet3_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet4_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet4_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet4_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet4_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet5_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet5_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet5_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet5_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet6_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet6_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet6_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet6_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet7_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet7_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet7_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet7_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id] FOREIGN KEY ([ActBill]) REFERENCES [dbo].[BIL_ActBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet8_HuId_REFERENCE_INV_Hu_HuId...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet8_HuId_REFERENCE_INV_Hu_HuId] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet8_Item_REFERENCE_MD_Item_Code...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet8_Item_REFERENCE_MD_Item_Code] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id...';


GO
ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECM_0_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[ORD_RecMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_ADDRE] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECM_0_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[ORD_RecMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECM_0_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_RecMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_PARTY] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RECM_0_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[ORD_RecMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr0_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr0_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr0_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr0_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr0_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr0_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr0_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_0] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr0_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr1_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr1_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr1_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr1_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr1_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr1_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr1_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_1] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr1_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr2_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr2_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr2_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr2_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr2_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr2_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr2_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_2] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr2_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr3_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr3_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr3_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr3_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr3_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr3_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr3_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_3] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr3_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr4_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr4_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr4_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr4_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr4_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr4_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr4_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_4] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr4_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr5_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr5_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr5_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr5_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr5_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr5_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr5_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_5] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr5_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr6_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr6_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr6_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr6_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr6_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr6_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr6_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_6] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr6_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr7_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr7_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr7_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr7_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr7_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr7_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr7_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_7] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr7_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr8_PartyFrom_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr8_PartyFrom_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr8_PartyTo_REFERENCE_MD_Party_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr8_PartyTo_REFERENCE_MD_Party_Code] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr8_ShipFrom_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr8_ShipFrom_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_RecMstr8_ShipTo_REFERENCE_MD_Address_Code...';


GO
ALTER TABLE [dbo].[ORD_RecMstr_8] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_RecMstr8_ShipTo_REFERENCE_MD_Address_Code] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQD_REFERENCE_ORD_SEQM...';


GO
ALTER TABLE [dbo].[ORD_SeqDet] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQD_REFERENCE_ORD_SEQM] FOREIGN KEY ([SeqNo]) REFERENCES [dbo].[ORD_SeqMstr] ([SeqNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_ADDRE] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_PARTY] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_ORD_SEQM_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[ORD_SeqMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_ORD_SEQM_REFERENCE_SCM_FLOW] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMD_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[PRD_BomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMD_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[PRD_BomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMD_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[PRD_BomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMD_REFERENCE_PRD_BFST...';


GO
ALTER TABLE [dbo].[PRD_BomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMD_REFERENCE_PRD_BFST] FOREIGN KEY ([BFStrategy]) REFERENCES [dbo].[PRD_BFStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMD_REFERENCE_PRD_BOMM...';


GO
ALTER TABLE [dbo].[PRD_BomDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMD_REFERENCE_PRD_BOMM] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_BOMM_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[PRD_BomMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_BOMM_REFERENCE_MD_UOM] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_MD_SUPPL...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyGroup] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL] FOREIGN KEY ([EffSupplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_MD_SUPPL3...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL3] FOREIGN KEY ([Supplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_PRD_MULT2...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_PRD_MULT2] FOREIGN KEY ([GroupNo]) REFERENCES [dbo].[PRD_MultiSupplyGroup] ([GroupNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_MD_SUPPL2...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplySupplier] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL2] FOREIGN KEY ([Supplier]) REFERENCES [dbo].[MD_Supplier] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_MULT_REFERENCE_PRD_MULT...';


GO
ALTER TABLE [dbo].[PRD_MultiSupplySupplier] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_MULT_REFERENCE_PRD_MULT] FOREIGN KEY ([GroupNo]) REFERENCES [dbo].[PRD_MultiSupplyGroup] ([GroupNo]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_MD_ITEM2...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_ITEM2] FOREIGN KEY ([FGItem]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_MD_PARTY...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_PARTY] FOREIGN KEY ([ManufactureParty]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_ORD_ORDE...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_ORD_ORDE] FOREIGN KEY ([OrderBomDetId]) REFERENCES [dbo].[ORD_OrderBomDet] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_PRD_BOMM...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_PRD_BOMM] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_SCM_FLOW] FOREIGN KEY ([ProdLine]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PLAN_REFERENCE_SCM_PROD...';


GO
ALTER TABLE [dbo].[PRD_PlanBackflush] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PLAN_REFERENCE_SCM_PROD] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_BIL_PLAN...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_BIL_PLAN] FOREIGN KEY ([PlanBill]) REFERENCES [dbo].[BIL_PlanBill] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_INV_HU...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_INV_HU] FOREIGN KEY ([HuId]) REFERENCES [dbo].[INV_Hu] ([HuId]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_LOCAT] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_FLOW] FOREIGN KEY ([ProdLine]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_SCM_PROD...';


GO
ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_PROD] FOREIGN KEY ([ProdLineFact]) REFERENCES [dbo].[SCM_ProdLineFact] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_MD_WORKC...';


GO
ALTER TABLE [dbo].[PRD_ProdLineWorkCenter] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_WORKC] FOREIGN KEY ([WorkCenter]) REFERENCES [dbo].[MD_WorkCenter] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_PROD_REFERENCE_SCM_FLOW2...';


GO
ALTER TABLE [dbo].[PRD_ProdLineWorkCenter] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_FLOW2] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_ROUT_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[PRD_RoutingDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_ROUT_REFERENCE_MD_LOCAT] FOREIGN KEY ([Location]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_ROUT_REFERENCE_MD_WORKC...';


GO
ALTER TABLE [dbo].[PRD_RoutingDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_ROUT_REFERENCE_MD_WORKC] FOREIGN KEY ([WorkCenter]) REFERENCES [dbo].[MD_WorkCenter] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_ROUT_REFERENCE_PRD_ROUT...';


GO
ALTER TABLE [dbo].[PRD_RoutingDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_ROUT_REFERENCE_PRD_ROUT] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_SHIF_REFERENCE_PRD_SHIF...';


GO
ALTER TABLE [dbo].[PRD_ShiftDet] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_SHIF_REFERENCE_PRD_SHIF] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_STAN_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[PRD_StandardWorkingCalendar] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_STAN_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_STAN_REFERENCE_PRD_SHIF...';


GO
ALTER TABLE [dbo].[PRD_StandardWorkingCalendar] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_STAN_REFERENCE_PRD_SHIF] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_WORK_REFERENCE_MD_REGIO...';


GO
ALTER TABLE [dbo].[PRD_WorkingCalendar] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_WORK_REFERENCE_MD_REGIO] FOREIGN KEY ([Region]) REFERENCES [dbo].[MD_Region] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_WORKingCalendar_REFERENCE_PRD_SHIFMSTR_CODE...';


GO
ALTER TABLE [dbo].[PRD_WorkingCalendar] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_WORKingCalendar_REFERENCE_PRD_SHIFMSTR_CODE] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_WORK_REFERENCE_MD_WORKI...';


GO
ALTER TABLE [dbo].[PRD_WorkingShift] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_WORK_REFERENCE_MD_WORKI] FOREIGN KEY ([WorkingCalendar]) REFERENCES [dbo].[MD_WorkingCalendar] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRD_WORK_REFERENCE_PRD_SHIF...';


GO
ALTER TABLE [dbo].[PRD_WorkingShift] WITH NOCHECK
    ADD CONSTRAINT [FK_PRD_WORK_REFERENCE_PRD_SHIF] FOREIGN KEY ([Shift]) REFERENCES [dbo].[PRD_ShiftMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_FLOW2...';


GO
ALTER TABLE [dbo].[SCM_FlowBinding] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW2] FOREIGN KEY ([BindFlow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_FLOW6...';


GO
ALTER TABLE [dbo].[SCM_FlowBinding] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW6] FOREIGN KEY ([MstrFlow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_BIL_PRIC...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_BIL_PRIC] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_INP_PROD...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_INP_PROD] FOREIGN KEY ([ProdScan]) REFERENCES [dbo].[INP_ProdScanMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_ADDRE...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_CONTA...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_CONTA] FOREIGN KEY ([Container]) REFERENCES [dbo].[MD_Container] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_ITEM...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ITEM] FOREIGN KEY ([Item]) REFERENCES [dbo].[MD_Item] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_LOCAT8...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT8] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_LOCAT9...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT9] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_UOM...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_UOM] FOREIGN KEY ([BaseUom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_UOM2...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_UOM2] FOREIGN KEY ([Uom]) REFERENCES [dbo].[MD_Uom] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_PRD_BOMM...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_BOMM] FOREIGN KEY ([Bom]) REFERENCES [dbo].[PRD_BomMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_PRD_ROUT...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT] FOREIGN KEY ([ReturnRouting]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_PRD_ROUT4...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT4] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_FLOW4...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW4] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_PICK...';


GO
ALTER TABLE [dbo].[SCM_FlowDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_PICK] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_BIL_PRIC2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_BIL_PRIC2] FOREIGN KEY ([PriceList]) REFERENCES [dbo].[BIL_PriceListMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_ADDRE2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE2] FOREIGN KEY ([ShipTo]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_ADDRE3...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE3] FOREIGN KEY ([BillAddr]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_ADDRE4...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE4] FOREIGN KEY ([ShipFrom]) REFERENCES [dbo].[MD_Address] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT3] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_PARTY2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_PARTY2] FOREIGN KEY ([PartyFrom]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_MD_PARTY3...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_PARTY3] FOREIGN KEY ([PartyTo]) REFERENCES [dbo].[MD_Party] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_PRD_ROUT2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT2] FOREIGN KEY ([Routing]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_PRD_ROUT3...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT3] FOREIGN KEY ([ReturnRouting]) REFERENCES [dbo].[PRD_RoutingMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_FLOW3...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW3] FOREIGN KEY ([RefFlow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_PICK2...';


GO
ALTER TABLE [dbo].[SCM_FlowMstr] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_PICK2] FOREIGN KEY ([PickStrategy]) REFERENCES [dbo].[SCM_PickStrategy] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_FLOW_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[SCM_FlowStrategy] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW] FOREIGN KEY ([Flow]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_PROD_REFERENCE_MD_LOCAT...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT] FOREIGN KEY ([RejLoc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_PROD_REFERENCE_MD_LOCAT2...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT2] FOREIGN KEY ([LocFrom]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_PROD_REFERENCE_MD_LOCAT3...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT3] FOREIGN KEY ([LocTo]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_PROD_REFERENCE_MD_LOCAT4...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT4] FOREIGN KEY ([InspLoc]) REFERENCES [dbo].[MD_Location] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SCM_PROD_REFERENCE_SCM_FLOW...';


GO
ALTER TABLE [dbo].[SCM_ProdLineFact] WITH NOCHECK
    ADD CONSTRAINT [FK_SCM_PROD_REFERENCE_SCM_FLOW] FOREIGN KEY ([ProdLine]) REFERENCES [dbo].[SCM_FlowMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SYS_CODE_REFERENCE_SYS_CODE...';


GO
ALTER TABLE [dbo].[SYS_CodeDet] WITH NOCHECK
    ADD CONSTRAINT [FK_SYS_CODE_REFERENCE_SYS_CODE] FOREIGN KEY ([Code]) REFERENCES [dbo].[SYS_CodeMstr] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_SYS_SNRU_REFERENCE_SYS_SNRU...';


GO
ALTER TABLE [dbo].[SYS_SNRuleExt] WITH NOCHECK
    ADD CONSTRAINT [FK_SYS_SNRU_REFERENCE_SYS_SNRU] FOREIGN KEY ([Code]) REFERENCES [dbo].[SYS_SNRule] ([Code]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating [dbo].[USP_Busi_AddWorkingDate]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_AddWorkingDate]
@BaseDate DATETIME, @AddTime INT, @ProdLine VARCHAR (50), @Region VARCHAR (50), @ReturnDate DATETIME OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_AdjProdLineTaktTime]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_AdjProdLineTaktTime]
@ProdLine VARCHAR (50), @TaktTime INT, @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_AdjRegionSpecialTime]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE PROCEDURE [dbo].[USP_Busi_AdjRegionSpecialTime]
	@Region varchar(50),
	@CreateUserId int,
	@CreateUserNm varchar(100)
AS
BEGIN
	declare @DateTimeNow datetime = GetDate()
	declare @ErrorMsg nvarchar(Max)
	
	begin try
		begin tran AdjRegionSpecialTime
		save tran AdjRegionSpecialTime_Point
		
		Declare @ProdLineCycleId int
		Declare @MaxProdLineId int
		Declare @ProdLine varchar(50)
		
		select identity(int, 1, 1) as RowId, Code as ProdLine into #tempProdLine from SCM_FlowMstr where PartyFrom = @Region and [Type] = 4
		
		if exists(select top 1 ProdLine from #tempProdLine)
		begin
			select @ProdLineCycleId = MIN(RowId), @MaxProdLineId = MAX(RowId) from #tempProdLine
			while @MaxProdLineId >= @ProdLineCycleId
			begin
				select @ProdLine = ProdLine from #tempProdLine where RowId = @ProdLineCycleId
				exec USP_Busi_AdjSeqGroupNextWinTime @ProdLine, @CreateUserId, @CreateUserNm
				set @ProdLineCycleId = @ProdLineCycleId + 1
			end
		end
		
		commit tran AdjRegionSpecialTime
	end try
	begin catch
		rollback tran AdjRegionSpecialTime_Point
		commit tran AdjRegionSpecialTime
		set @ErrorMsg = Error_Message()
		RAISERROR(@ErrorMsg, 16, 1)
	end catch 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_AdjVanOrderSeq]...';


GO
-- =============================================
CREATE PROCEDURE [dbo].[USP_Busi_AdjVanOrderSeq]
	@ProdLine varchar(50),  --SAP生产线代码
	@TraceCode varchar(50), --Van号
	@OldStartTime DateTime,
	@OldSeq bigint,
	@NewStartTime DateTime,
	@NewSeq bigint,
	@UserId int,
	@UserNm varchar(100),
	@IsAdj bit output
AS
BEGIN
	Declare @DateTimeNow datetime = GetDate();
	Declare @OrgVanOrderNo varchar(50);   --原生产单号，需要调整顺序的生产单
	Declare @OrgVanOrderStatus tinyint;   --原生产单状态
	Declare @OrgVanOrderSeq bigint;		  --原生产单顺序号
	Declare @TargetVanOrderNo varchar(50);--目的生产单号，插入点的生产单
	Declare @TargetVanOrderStatus tinyint;--目的生产单状态
	Declare @TargetVanOrderSeq bigint;	  --目的生产单顺序号
	Declare @VanProdLine varchar(50);     --生产线代码
	
	--查找原生产单
	select @OrgVanOrderNo = OrderNo, @VanProdLine = Flow, @OrgVanOrderStatus = [Status], @OrgVanOrderSeq = Seq from ORD_OrderMstr_4 where Flow = @ProdLine and TraceCode = @TraceCode;
	
	If (@OrgVanOrderStatus is not null and @OrgVanOrderStatus <> 0) 
	begin
		--如果原生产单已经释放，不能调整顺序
		set @IsAdj = 0;
		return
	end
	
	If (@OrgVanOrderNo is null) 
	begin
		--原生产单还没有导入LES，在生产线映射表中查找生产线代码
		select @VanProdLine = ProdLine from CUST_ProductLineMap where SAPProdLine = @ProdLine;
	end
	
	--查找插入点的生产单
	select @TargetVanOrderNo = OrderNo, @TargetVanOrderStatus = [Status], @TargetVanOrderSeq = Seq from ORD_OrderMstr_4 where Flow = @VanProdLine and SapSeq = @NewSeq
	If (@TargetVanOrderStatus is not null and @TargetVanOrderStatus <> 0) 
	begin
		--如果插入点的生产单已经释放，不能调整顺序
		set @IsAdj = 0;
		return
	end
	
	--剩余情况都能够调整顺序
	set @IsAdj = 1;
	begin tran
		if (@OrgVanOrderNo is null and @TargetVanOrderNo is null)
		begin
			--如果原生产单和目的生产单都没有导入，可以调整
			return;
		end
		else if (@TargetVanOrderNo is null)			
		begin
			--如果目的生产单没有导入，相当于把原生产单调整至没有导入LES的生产单队列中
			--从当前生产队列中删除，调整原生产单队列顺序
			delete from ORD_OrderMstr_4 where OrderNo = @OrgVanOrderNo;
			update ORD_OrderMstr_4 set Seq = Seq - 1, SapSeq = SapSeq - 1, Version = Version + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = @DateTimeNow where Flow = @VanProdLine and StartTime = @OldStartTime and SapSeq > @OldSeq
		end
		else if (@OrgVanOrderNo is null)
		begin
			set @IsAdj = 1;
		end
		else
		begin
			set @IsAdj = 1;
		end
	commit
END
GO
PRINT N'Creating [dbo].[USP_Busi_AutoAddFlowDet]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_AutoAddFlowDet]
	@OrderNo varchar(50),
	@UserId int,
	@UserNm varchar(50)
AS
BEGIN
	declare @DateTimeNow datetime = GetDate();
	
	select distinct Item, Location into #tempOrderBom from ORD_OrderBomDet where OrderNo = @OrderNo;
	
	select distinct det.Flow, det.Item, det.RefItemCode, det.Uom, det.BaseUom, det.UC, det.UCDesc, det.MinUC, 
	case when isnull(det.LocFrom, '') <> '' then det.LocFrom else mstr.LocFrom end as LocFrom, 
	case when isnull(det.LocTo, '') <> '' then det.LocTo else mstr.LocTo end as LocTo, 
	case when isnull(det.BillAddr, '') <> '' then det.BillAddr else mstr.BillAddr end as BillAddr, 
	case when isnull(det.PriceList, '') <> '' then det.PriceList else mstr.PriceList end as PriceList, 
	det.Container, det.ContainerDesc, det.IsInspect, det.IsRejInspect, det.RoundUpOpt, det.BillTerm
	into #tempFlowDet from SCM_FlowDet as det 
	inner join SCM_FlowMstr as mstr on det.Flow = mstr.Code
	--（新逻辑）只查看当前生产单的拉料路线
	inner join #tempOrderBom as bom on (bom.Location = det.LocTo or (det.LocTo is null and bom.Location = mstr.LocTo))
	--（旧逻辑）生产单的来源区域等于路线的目的区域
	--where mstr.PartyTo in (select PartyFrom from ORD_OrderMstr_4 where OrderNo = 'OrderNo')
	--路线明细在有效期内
	and (det.StartDate is null or det.StartDate <= @DateTimeNow) and (det.EndDate is null or det.EndDate >= @DateTimeNow)
	
	insert into SCM_FlowDet 
	(
	Flow,				--1
	Seq,				--2
	Item,				--3
	RefItemCode,		--4
	Uom,				--5
	BaseUom,			--6
	UC,					--7
	UCDesc,				--8
	MinUC,				--9
	StartDate,			--10
	LocFrom,			--11
	LocTo,				--12
	BillAddr,			--13
	PriceList,			--14
	Strategy,			--15
	Container,			--16
	ContainerDesc,		--17
	IsAutoCreate,		--18
	IsInspect,			--19
	IsRejInspect,		--20
	RoundUpOpt,			--21
	BillTerm,			--22
	MrpWeight,			--23
	MrpTotal,			--24
	MrpTotalAdj,		--25
	CreateUser,			--26
	CreateUserNm,		--27
	CreateDate,			--28
	LastModifyUser,		--29
	LastModifyUserNm,	--30
	LastModifyDate,		--31
	IsChangeUC			--32
	)
	select 
	det.Flow,			--1
	999,				--2
	det.Item,			--3
	det.RefItemCode,	--4
	det.Uom,			--5
	det.BaseUom,		--6
	det.UC,				--7
	det.UCDesc,			--8
	det.MinUC,			--9
	@DateTimeNow,		--10
	det.LocFrom,		--11
	a.Location as LocTo,--12	使用Bom中零件的消耗库位作为入库库位
	det.BillAddr,		--13
	det.PriceList,		--14
	3,					--15	添加的路线全部采用JIT拉动
	det.Container,		--16	
	det.ContainerDesc,	--17
	1,					--18	设置为自动拉动
	det.IsInspect,		--19
	det.IsRejInspect,	--20
	det.RoundUpOpt,		--21
	det.BillTerm,		--22
	0,					--23
	0,					--24
	0,					--25
	@UserId,			--26
	@UserNm,			--27
	@DateTimeNow,		--28
	@UserId,			--29
	@UserNm,			--30
	@DateTimeNow,		--31
	0					--32
	from #tempFlowDet as det 
	inner join 
	(
		--未找到配送路线的零件
		select bom.Item, bom.Location from #tempOrderBom as bom left join #tempFlowDet as det on bom.Item = det.Item and bom.Location = det.LocTo
		where det.Item is null
	) as a on det.Item = a.Item
	group by det.Flow, det.Item, det.RefItemCode, det.Uom, det.BaseUom, det.UC, det.UCDesc, det.MinUC, 
	det.LocFrom, a.Location, det.BillAddr, det.PriceList, det.Container, det.ContainerDesc, det.IsInspect, 
	det.IsRejInspect, det.RoundUpOpt, det.BillTerm
	--过滤掉同一个零件找到两条配送路线
	having COUNT(*) = 1
	
	drop table #tempOrderBom;
	drop table #tempFlowDet;
END
GO
PRINT N'Creating [dbo].[USP_Busi_CreateOrUpdateVanProdOrder]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_CreateOrUpdateVanProdOrder]
@BatchNo INT, @VanProdLine VARCHAR (50), @VanProdLineNm VARCHAR (100), @CreateUserId INT, @CreateUserNm VARCHAR (50), @OrderNo VARCHAR (50) OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_EnableSeqGroup]...';


GO

CREATE PROCEDURE [dbo].[USP_Busi_EnableSeqGroup]
	@SeqGroup varchar(50),
	@IgnoreError bit,
	@CreateUserId int,
	@CreateUserNm varchar(100)
AS
BEGIN
	set nocount on
	begin try
		begin tran EnableSeqGroup
		save tran EnableSeqGroup_Point
		
		declare @DateTimeNow datetime = GetDate()
		declare @ErrorMsg nvarchar(MAX)
		
		Create table #tempMsg
		(
			[Level] tinyint,
			Msg varchar(500)
		)
		
		select * from SCM_FlowDet as det 
		inner join SCM_FlowStrategy as stra on det.Flow = stra.Flow
		where stra.SeqGroup = @SeqGroup
		
		
		commit tran	EnableSeqGroup
	end try
	begin catch
		rollback tran EnableSeqGroup_Point
		commit tran EnableSeqGroup
		set @ErrorMsg = Error_Message()
		RAISERROR(@ErrorMsg, 16, 1)
	end catch
END
GO
PRINT N'Creating [dbo].[USP_Busi_GenOrder4VanProdLine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GenOrder4VanProdLine]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_GenProductOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GenProductOrder]
@BatchNo INT, @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GenSequenceOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GenSequenceOrder]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GenVanProdOrder]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GenVanProdOrder]
@BatchNo INT, @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_GenVanProdOrderVerify]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GenVanProdOrderVerify]
@BatchNo INT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetActiveFlowDet]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetActiveFlowDet]
(
	@EffectiveDate datetime
)
AS
BEGIN
	SELECT     det.Id, mstr.Code AS Flow, mstr.PartyFrom, mstr.PartyTo, str.Strategy, str.LeadTime, str.EmLeadTime, str.TimeUnit, str.WeekInterval, str.WinTime1, str.WinTime2, 
                      str.WinTime3, str.WinTime4, str.WinTime5, str.WinTime6, str.WinTime7, str.NextOrderTime, str.NextWinTime, mstr.Type, det.Item, det.Uom, det.BaseUom, det.UC, 
                      CASE WHEN isnull(det.LocFrom, '') = '' THEN mstr.LocFrom ELSE det.LocFrom END AS LocFrom, CASE WHEN isnull(det.LocTo, '') 
                      = '' THEN mstr.LocTo ELSE det.LocTo END AS LocTo, det.SafeStock, det.MaxStock, det.MinLotSize, det.OrderLotSize, det.RoundUpOpt, det.MrpWeight, det.MrpTotal, 
                      det.MrpTotalAdj, det.ExtraDmdSource, mstr.ExtraDmdSource
FROM         dbo.SCM_FlowDet AS det INNER JOIN
                      dbo.SCM_FlowMstr AS mstr ON det.Flow = mstr.Code INNER JOIN
                      dbo.SCM_FlowStrategy AS str ON mstr.Code = str.Flow
                      WHERE (det.StartDate is null or det.StartDate <= @EffectiveDate) and (det.EndDate is null or det.EndDate > @EffectiveDate)
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetAotuPickInventory]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetAotuPickInventory]
(
	@Location varchar(50),
	@Item varchar(50),
	@QualityType tinyint,
	@OccupyType tinyint,
	@IsFreeze bit,
	@IsATP bit
)
AS
BEGIN
/*******************获取负库存数据*********************************
*******************create info*************************************
Author:		zhangsheng
CreateDate;2012-05-25
*******************Modify Info*************************************
LastModifyDate:
Modify For:
exec [USP_Busi_GetAotuPickInventory] 'SQCK01','5801306676',0,0,0,1
************steps**************************************************
step1.GetMinusInventory
******************************************************************/
	SET NOCOUNT ON;
	
	DECLARE @PartSuffix varchar(50)
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
	END 
	
	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL OR @IsFreeze IS NULL OR @IsATP IS NULL
	BEGIN
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT
	END	
	
	--PRINT @PartSuffix
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	
	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId, 
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.QualityType, 
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo, 
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser, 
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, lb.Area, 
                      lb.Seq AS BinSeq, hu.Qty AS HuQty, hu.UC, hu.Uom AS HuUom, hu.BaseUom, hu.UnitQty, 
                      hu.ManufactureParty, hu.ManufactureDate, hu.FirstInvDate, pb.Party AS ConsigementParty, hu.IsOdd
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld LEFT OUTER JOIN
                      dbo.INV_Hu as hu ON lld.HuId = hu.HuId LEFT OUTER JOIN
                      dbo.BIL_PlanBill as pb ON lld.PlanBill =pb.Id AND lld.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin as lb ON lld.Bin = lb.Code
				WHERE lld.HuId is NOT NULL AND lld.Qty>0 AND lld.Location=@Location_1 AND lld.Item=@Item_1 AND lld.QualityType=@QualityType_1 
					AND lld.OccupyType=@OccupyType_1 AND lld.IsFreeze=@IsFreeze_1 AND lld.IsATP=@IsATP_1'
	SET @Parameter=N'@Location_1 varchar(50),@Item_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint,@IsFreeze_1 bit,@IsATP_1 bit'
	PRINT @Statement
	exec sp_executesql @Statement,@Parameter,
		@Location_1=@Location,@Item_1=@Item,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@IsFreeze_1=@IsFreeze,@IsATP_1=@IsATP
	
	--SET @sql = 'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId, 
 --                     lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.QualityType, 
 --                     lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo, 
 --                     lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser, 
 --                     lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, lb.Area, 
 --                     lb.Seq AS BinSeq, hu.Qty AS HuQty, hu.UC, hu.Uom AS HuUom, hu.BaseUom, hu.UnitQty, 
 --                     hu.ManufactureParty, hu.ManufactureDate, hu.FirstInvDate, pb.Party AS ConsigementParty, hu.IsOdd
 --                     FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld LEFT OUTER JOIN
 --                     dbo.INV_Hu as hu ON lld.HuId = hu.HuId LEFT OUTER JOIN
 --                     dbo.BIL_PlanBill as pb ON lld.PlanBill =pb.Id AND lld.IsCS = 1 LEFT OUTER JOIN
 --                     dbo.MD_LocationBin as lb ON lld.Bin = lb.Code
	--			WHERE lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty < 0'

	--IF ISNULL(@where,'')<>''
	--BEGIN
	--	SET @sql=@sql+@where
	--END			
	----PRINT @sql
	--EXEC(@sql)
	
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetDeferredFeedOrderBomDet]...';


GO

CREATE PROCEDURE [dbo].[USP_Busi_GetDeferredFeedOrderBomDet]
(
	@Flow varchar(50),
	@UserId int,
	@UserNm varchar(100)
)
AS
BEGIN
	--查询生产单的后续工序
	select distinct mstr.OrderNo, 
	mstr.Seq,
	MIN(op.Op) as NextOp
	into #NextOrderOp 
	from ORD_OrderMstr_4 as mstr
	inner join ORD_OrderOp as op on mstr.OrderNo = op.OrderNo and (mstr.CurtOp is null or mstr.CurtOp < op.Op)
	where mstr.Flow = @Flow and mstr.Status = 2 and mstr.IsPause = 0
	group by mstr.OrderNo, mstr.Seq	
	
	--查询后续没有回冲的工序
	--select distinct op.OrderNo, op.Op, nextOp.Seq into #NextNotBFOp from #NextOrderOp as nextOp
	--inner join ORD_OrderOp as op on nextOp.OrderNo = op.OrderNo and op.IsBackflush = 0
	
	--如果两张工单回冲的工序相同，代表前一张为插入的工单，插入工单后的所有工单都不要前进工位和扣减物料	
	--工序相同的工单取工序号最大，序号最小一条，在待回冲列表中删除工单序号大于该序号的所有工单
	--delete a from #NextOrderOp as a
	--inner join (select top 1 MIN(Seq) as MinSeq from #NextNotBFOp group by Op having COUNT(*) > 1 order by Op desc) as b
	--on a.Seq > b.MinSeq
	delete a from #NextOrderOp as a
	inner join (select top 1 MIN(Seq) as MinSeq from #NextOrderOp group by NextOp having COUNT(*) > 1 order by NextOp desc) as b
	on a.Seq > b.MinSeq
	
	--更新生产单的当前工序
	update ORD_OrderMstr_4 set CurtOp = nextOp.NextOp, 								
								LastModifyDate = GETDATE(), 
								LastModifyUser = @UserId, 
								LastModifyUserNm = @UserNm, 
								[Version] = [Version] + 1
	from ORD_OrderMstr_4 as mstr 
	inner join #NextOrderOp as nextOp on mstr.OrderNo = nextOp.OrderNo
	
	--更新后续工序的回冲标记
	update ORD_OrderOp set IsBackflush = 1,
							LastModifyDate = GETDATE(), 
							LastModifyUser = @UserId, 
							LastModifyUserNm = @UserNm, 
							[Version] = [Version] + 1
	from ORD_OrderOp as op 
	inner join #NextOrderOp as nextOp on op.OrderNo = nextOp.OrderNo and op.Op = nextOp.NextOp

	--返回待回冲的生产单Bom
	select bom.* from #NextOrderOp as op
	inner join ORD_OrderBomDet as bom on op.OrderNo = bom.OrderNo and op.NextOp = bom.Op	
	where bom.IsAutoFeed = 1    --自动投料
	and bom.FeedMethod = 1      --投料至工单成品
	and bom.BackFlushMethod = 1 --回冲工单在制品
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetFlowDet4LeanEngine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetFlowDet4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetManufacturePartyConsignmentInventory]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetManufacturePartyConsignmentInventory]
(
	@Location varchar(50),
	@Item varchar(50),
	@QualityType tinyint,
	@OccupyType tinyint,
	@IsConsignment bit,
	@ManufactureParty varchar(50)
)
AS
BEGIN
/*******************获取负库存数据*********************************
*******************create info*************************************
Author:		zhangsheng
CreateDate;2012-05-25
*******************Modify Info*************************************
LastModifyDate:
Modify For:
exec [USP_Busi_GetManufacturePartyConsignmentInventory] 'ZAA02R','-CN6T',0,0,1,'0000102681'
************steps**************************************************
step1.GetMinusInventory
******************************************************************/
	SET NOCOUNT ON;
	
	DECLARE @sql varchar(max)
	DECLARE @where varchar(8000)
	DECLARE @PartSuffix varchar(50)
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
	END 
	
	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL OR @IsConsignment IS NULL
		OR ISNULL(@ManufactureParty,'')=''
	BEGIN
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT
	END	
	
	--IF @QualityType IS NOT NULL
	--BEGIN
	--	SET @where=ISNULL(@where,'')+' AND lld.QualityType='+CAST(@QualityType as varchar(10))
	--END
	
	--IF @OccupyType IS NOT NULL
	--BEGIN
	--	SET @where=ISNULL(@where,'')+' AND lld.OccupyType='+CAST(@OccupyType as varchar(10))
	--END	
	
	--IF @IsConsignment IS NOT NULL
	--BEGIN
	--	SET @where=@where+' AND lld.IsCS='+CAST(@IsConsignment as varchar(10))
	--END	
	
	--IF ISNULL(@ManufactureParty,'')=''
	--BEGIN
	--	SET @where=ISNULL(@where,'')+' AND hu.ManufactureParty='+@ManufactureParty
	--END		

	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	
	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId, 
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.QualityType, 
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo, 
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser, 
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, lb.Area, 
                      lb.Seq AS BinSeq, hu.Qty AS HuQty, hu.UC, hu.Uom AS HuUom, hu.BaseUom, hu.UnitQty, 
                      hu.ManufactureParty, hu.ManufactureDate, hu.FirstInvDate, pb.Party AS ConsigementParty, hu.IsOdd
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld INNER JOIN
                      dbo.BIL_PlanBill as pb ON lld.PlanBill =pb.Id LEFT OUTER JOIN
                      dbo.INV_Hu as hu ON lld.HuId = hu.HuId LEFT OUTER JOIN
                      dbo.MD_LocationBin as lb ON lld.Bin = lb.Code
				WHERE lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty > 0 AND lld.Item=@Item_1 AND lld.QualityType=@QualityType_1 
					AND lld.OccupyType=@OccupyType_1 AND lld.IsCS=@IsCS_1 AND pb.Party=@ManufactureParty_1 AND lld.Location=@Location_1'
	SET @Parameter=N'@Item_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint,@IsCS_1 bit,@ManufactureParty_1 varchar(50),@Location_1 varchar(50)'
	
	exec sp_executesql @Statement,@Parameter,
		@Item_1=@Item,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@IsCS_1=@IsConsignment,@ManufactureParty_1=@ManufactureParty,@Location_1=@Location
	
	
	
	--SET @sql = 'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId, 
 --                     lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.QualityType, 
 --                     lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo, 
 --                     lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser, 
 --                     lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, lb.Area, 
 --                     lb.Seq AS BinSeq, hu.Qty AS HuQty, hu.UC, hu.Uom AS HuUom, hu.BaseUom, hu.UnitQty, 
 --                     hu.ManufactureParty, hu.ManufactureDate, hu.FirstInvDate, pb.Party AS ConsigementParty, hu.IsOdd
 --                     FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld LEFT OUTER JOIN
 --                     dbo.INV_Hu as hu ON lld.HuId = hu.HuId LEFT OUTER JOIN
 --                     dbo.BIL_PlanBill as pb ON lld.PlanBill =pb.Id AND lld.IsCS = 1 LEFT OUTER JOIN
 --                     dbo.MD_LocationBin as lb ON lld.Bin = lb.Code
	--			WHERE lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty < 0'
	--IF ISNULL(@where,'')<>''
	--BEGIN
	--	SET @sql=@sql+@where
	--END			
	----PRINT @sql
	--EXEC(@sql)
	
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetMergeInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetMergeInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@Qty decimal(18,8), 
	@PlanBill int, 
	@QualityType tinyint, 
	@IsFreeze bit, 
	@IsATP bit, 
	@OccupyType tinyint, 
	@OccupyRefNo varchar(50), 
	@CSSupplier varchar(50) 
) 
AS 
BEGIN 
/*******************获取可以合并的库存数据************************* 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetMergeInventory] 'HBF010','5801281111',1,5285,1,0,1,2,NS00000039,null 
************steps************************************************** 
step1.USP_Busi_GetMergeInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Location,'')='' OR ISNULL(@Item,'')=''  
	OR @Qty IS NULL	OR @QualityType IS NULL OR @OccupyType IS NULL 
	OR (@OccupyType <> 0 AND ISNULL(@OccupyRefNo,'')='') 
	OR @IsFreeze IS NULL OR @IsATP IS NULL 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Location=@Location_1 AND lld.Item=@Item_1 AND HuId is null' 

	IF @Qty > 0 
	BEGIN 
		SET @Statement=@Statement + ' AND lld.Qty > 0' 
    END 
    ELSE 
    BEGIN 
		SET @Statement=@Statement + ' AND lld.Qty < 0' 
    END 
    IF @PlanBill IS NOT NULL 
    BEGIN 
		SET @Statement=@Statement + ' AND lld.IsCS=1 and lld.PlanBill=@PlanBill_1' 
    END 
    ELSE 
    BEGIN 
		SET @Statement=@Statement + ' AND lld.PlanBill IS NULL' 
    END 
    SET @Statement=@Statement + ' AND lld.QualityType=@QualityType_1 AND lld.IsFreeze=@IsFreeze_1  
                                  AND lld.IsATP=@IsATP_1 AND lld.OccupyType=@OccupyType_1' 

    IF @OccupyType <> 0 
    BEGIN 
		SET @Statement=@Statement + ' AND lld.OccupyRefNo=@OccupyRefNo_1' 
    END 
    IF ISNULL(@CSSupplier,'')<>'' 
    BEGIN 
		SET @Statement=@Statement + ' AND lld.CSSupplier=@CSSupplier_1' 
    END 
	SET @Parameter=N'@Location_1 varchar(50),@Item_1 varchar(50),@PlanBill_1 int,@QualityType_1 tinyint,@IsFreeze_1 bit 
	,@IsATP_1 bit,@OccupyType_1 tinyint,@OccupyRefNo_1 varchar(50),@CSSupplier_1 varchar(50)' 

	exec sp_executesql @Statement,@Parameter, 
		@Location_1=@Location,@Item_1=@Item,@PlanBill_1=@PlanBill,@QualityType_1=@QualityType,@IsFreeze_1=@IsFreeze,@IsATP_1=@IsATP 
		,@OccupyType_1=@OccupyType,@OccupyRefNo_1=@OccupyRefNo,@CSSupplier_1=@CSSupplier 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetMinusCSInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetMinusCSInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@QualityType tinyint, 
	@OccupyType tinyint, 
	@CSSupplier varchar(50) 
) 
AS 
BEGIN 
/*******************获取指定供应商负数库存数据***************** 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetMinusCSInventory] 'ZAA02R','-CN6T',0,0,'0000102681' 
************steps************************************************** 
step1.GetMinusInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @sql varchar(max) 
	DECLARE @where varchar(8000) 
	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL 
		OR ISNULL(@CSSupplier,'')='' 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Item=@Item_1 AND lld.Location=@Location_1 AND lld.CSSupplier=@CSSupplier_1 
				  AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty < 0 AND lld.IsCS = 0 
			      AND lld.QualityType=@QualityType_1 AND lld.OccupyType=@OccupyType_1' 
	SET @Parameter=N'@Item_1 varchar(50),@CSSupplier_1 varchar(50),@Location_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint' 

	exec sp_executesql @Statement,@Parameter, 
		@Item_1=@Item,@CSSupplier_1=@CSSupplier,@Location_1=@Location,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetMinusInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetMinusInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@QualityType tinyint, 
	@OccupyType tinyint 
) 
AS 
BEGIN 
/*******************获取负库存数据********************************* 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetMinusInventory] 'CS0010','5801306476',0,0,1 
************steps************************************************** 
step1.GetMinusInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Item=@Item_1 AND lld.Location=@Location_1 
				    AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty < 0 AND lld.QualityType=@QualityType_1  
					AND lld.OccupyType=@OccupyType_1 AND lld.IsCS=0 AND lld.CSSupplier is null' 
	SET @Parameter=N'@Item_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint,@Location_1 varchar(50)' 

	exec sp_executesql @Statement,@Parameter, 
		@Item_1=@Item,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@Location_1=@Location 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetNextWindowTime]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetNextWindowTime]
@Flow VARCHAR (50), @WindowTime DATETIME, @NextWindowTime DATETIME OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetOccupyInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetOccupyInventory] 
( 
 @Location varchar(50), 
 @Item varchar(50), 
 @QualityType tinyint, 
 @OccupyType tinyint, 
 @OccupyReferenceNo varchar(50), 
 @IsConsignment bit 
) 
AS 
BEGIN 
/*******************获取被占用库存数据***************************** 
*******************create info************************************* 
Author:  zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetOccupyInventory] 'CS0010','5801306476',0,0,'123', 1 
************steps************************************************** 
step1.GetManufacturePartyConsignmentInventory 
******************************************************************/ 
 SET NOCOUNT ON; 
 DECLARE @PartSuffix varchar(50) 
 SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 
 IF ISNULL(@PartSuffix,'')='' 
 BEGIN 
  SET @PartSuffix='0' 
  --RAISERROR ('Can''t get any data from table' , 16, 1) WITH NOWAIT 
 END 
 IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL OR ISNULL(@OccupyReferenceNo,'')='' 
 BEGIN 
  RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
 END  
 DECLARE @Statement nvarchar(4000) 
 DECLARE @Parameter nvarchar(4000) 
 SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
    WHERE lld.Item=@Item_1 AND lld.Location = @Location_1 AND lld.OccupyRefNo=@OccupyReferenceNo_1 AND lld.OccupyType=@OccupyType_1  
	  AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty > 0 AND lld.QualityType=@QualityType_1 AND lld.IsCS = @IsConsignment_1' 
 SET @Parameter=N'@Location_1 varchar(50),@Item_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint,@OccupyReferenceNo_1 varchar(50),@IsConsignment_1 bit' 
 exec sp_executesql @Statement,@Parameter, 
  @Location_1=@Location,@Item_1=@Item,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@OccupyReferenceNo_1=@OccupyReferenceNo,@IsConsignment_1=@IsConsignment 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetOrderPlan4LeanEngine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetOrderPlan4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetPlusCSInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetPlusCSInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@QualityType tinyint, 
	@OccupyType tinyint, 
	@CSSupplier varchar(50) 
) 
AS 
BEGIN 
/*******************获取正数寄售库存数据********************************* 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetPlusCSInventory] 'ZAA02R','-CN6T',0,0,'0000102681' 
************steps************************************************** 
step1.GetMinusInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @sql varchar(max) 
	DECLARE @where varchar(8000) 
	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL 
		OR ISNULL(@CSSupplier,'')='' 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Item=@Item_1 AND lld.Location=@Location_1 AND lld.CSSupplier=@CSSupplier_1 
				    AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty > 0 AND lld.IsCS = 1					  
					AND lld.QualityType=@QualityType_1 AND lld.OccupyType=@OccupyType_1' 
	SET @Parameter=N'@Item_1 varchar(50),@CSSupplier_1 varchar(50),@Location_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint' 

	exec sp_executesql @Statement,@Parameter, 
		@Item_1=@Item,@CSSupplier_1=@CSSupplier,@Location_1=@Location,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetPlusInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetPlusInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@QualityType tinyint, 
	@OccupyType tinyint, 
	@IsConsignment bit 
) 
AS 
BEGIN 
/*******************获取正数库存数据********************************* 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetMinusInventory] 'CS0010','5801306476',0,0,1 
************steps************************************************** 
step1.GetMinusInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL OR @IsConsignment IS NULL 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Item=@Item_1 AND lld.Location=@Location_1  
				    AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty > 0 AND lld.QualityType=@QualityType_1  
					AND lld.OccupyType=@OccupyType_1 AND lld.IsCS=@IsCS_1' 
	SET @Parameter=N'@Item_1 varchar(50),@QualityType_1 tinyint,@OccupyType_1 tinyint,@IsCS_1 bit,@Location_1 varchar(50)' 

	exec sp_executesql @Statement,@Parameter, 
		@Item_1=@Item,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@IsCS_1=@IsConsignment,@Location_1=@Location 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetStartTimeAsMinute]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetStartTimeAsMinute]
@ReturnMinute INT OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetVoidInventory]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetVoidInventory] 
( 
	@Location varchar(50), 
	@Item varchar(50), 
	@PlanBill int, 
	@QualityType tinyint, 
	@OccupyType tinyint 
) 
AS 
BEGIN 
/*******************获取指定Planbill库存数据********************************* 
*******************create info************************************* 
Author:		zhangsheng 
CreateDate;2012-05-25 
*******************Modify Info************************************* 
LastModifyDate: 
Modify For: 
exec [USP_Busi_GetVoidInventory] 'CS0010','5801306476',0,0,1  
************steps************************************************** 
step1.GetMinusInventory 
******************************************************************/ 
	SET NOCOUNT ON; 

	DECLARE @PartSuffix varchar(50) 
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location 

	IF ISNULL(@PartSuffix,'')='' 
	BEGIN 
		SET @PartSuffix='0' 
	END  

	IF ISNULL(@Item,'')='' OR @QualityType IS NULL OR @OccupyType IS NULL OR @PlanBill IS NULL 
	BEGIN 
		RAISERROR ('Backend Query is not correct!' , 16, 1) WITH NOWAIT 
	END	 

	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 

	SET @Statement=N'SELECT lld.Id, lld.Location, lld.Bin, lld.Item, lld.HuId,  
                      lld.LotNo, lld.Qty, lld.IsCS, lld.PlanBill, lld.CSSupplier, lld.QualityType,  
                      lld.IsFreeze, lld.IsATP, lld.OccupyType, lld.OccupyRefNo,  
                      lld.CreateUser, lld.CreateUserNm, lld.CreateDate, lld.LastModifyUser,  
                      lld.LastModifyUserNm, lld.LastModifyDate, lld.Version, NULL AS Area,NULL AS BinSeq, 
                      NULL AS HuQty,NULL AS UC,NULL AS HuUom,NULL AS BaseUom,NULL AS UnitQty,NULL AS ManufactureParty, 
                      NULL AS ManufactureDate,NULL AS FirstInvDate,NULL AS IsOdd 
                      FROM dbo.INV_LocationLotDet_'+@PartSuffix+' as lld 
				WHERE lld.Item=@Item_1 AND lld.Location=@Location_1 AND lld.PlanBill=@PlanBill_1  
				  AND lld.HuId is null AND lld.IsFreeze = 0 AND lld.Qty > 0 AND lld.IsCS = 1  
				  AND lld.QualityType=@QualityType_1 AND lld.OccupyType=@OccupyType_1 ' 
	SET @Parameter=N'@Item_1 varchar(50),@PlanBill_1 int,@QualityType_1 tinyint,@OccupyType_1 tinyint,@Location_1 varchar(50)' 

	exec sp_executesql @Statement,@Parameter, 
		@Item_1=@Item,@PlanBill_1=@PlanBill,@QualityType_1=@QualityType,@OccupyType_1=@OccupyType,@Location_1=@Location 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_GetWaitSeqDet]...';


GO


	
CREATE PROCEDURE [dbo].[USP_Busi_GetWaitSeqDet]
AS
BEGIN
	--已经生成的排序装箱单
	select OrderDetId, count(1) as Qty into #tempSeqOrder
	from ORD_SeqDet where IsClose = 0
	group by OrderDetId

	select ord.OrderNo, ord.Flow, ord.OrderType, ord.QualityType, ord.StartTime, ord.WindowTime,
		ord.PartyFrom, ord.PartyFromNm, ord.PartyTo, ord.PartyToNm, ord.ShipFrom, ord.ShipFromAddr, ord.ShipFromTel,
		ord.ShipFromCell, ord.ShipFromFax, ord.ShipFromContact, ord.ShipTo, ord.ShipToAddr, ord.ShipToTel, ord.ShipToCell,
		ord.ShipToFax, ord.ShipToContact, ord.LocFrom, ord.LocFromNm, ord.LocTo, ord.LocToNm, ord.Dock, 
		ord.IsAutoReceive, ord.IsPrintAsn, ord.IsPrintRec, ord.IsCheckPartyFromAuth, ord.IsCheckPartyToAuth,
		ord.AsnTemplate, ord.RecTemplate, ord.Seq, ord.TraceCode, 
		ord.OrderDetId, ord.OrderDetSeq, ord.Item, ord.ItemDesc, ord.RefItemCode,
		ord.Uom, ord.UnitQty, ord.BaseUom, ord.UC, ord.ManufactureParty,
		ord.Container, ord.ContainerDesc, ord.OrderQty, ord.ShipQty, isnull(Seq.Qty, 0) SeqQty
	from 
	( 
		--采购排序单
		select mstr.OrderNo, mstr.Flow, mstr.[Type] as OrderType, mstr.QualityType, mstr.StartTime, mstr.WindowTime,
		mstr.PartyFrom, mstr.PartyFromNm, mstr.PartyTo, mstr.PartyToNm, mstr.ShipFrom, mstr.ShipFromAddr, mstr.ShipFromTel,
		mstr.ShipFromCell, mstr.ShipFromFax, mstr.ShipFromContact, mstr.ShipTo, mstr.ShipToAddr, mstr.ShipToTel, mstr.ShipToCell,
		mstr.ShipToFax, mstr.ShipToContact, mstr.LocFrom, mstr.LocFromNm, mstr.LocTo, mstr.LocToNm, mstr.Dock, 
		mstr.IsAutoReceive, mstr.IsPrintAsn, mstr.IsPrintRec, mstr.IsCheckPartyFromAuth, mstr.IsCheckPartyToAuth,
		mstr.AsnTemplate, mstr.RecTemplate, mstr.Seq, mstr.TraceCode, 
		det.Id as OrderDetId, det.Seq as OrderDetSeq, det.Item, det.ItemDesc, det.RefItemCode,
		det.Uom, det.UnitQty, det.BaseUom, det.UC, det.ManufactureParty,
		det.Container, det.ContainerDesc, det.OrderQty, det.ShipQty
		from ord_orderdet_1 as det
		inner join ORD_OrderMstr_1 as mstr on det.OrderNo = mstr.OrderNo
		inner join 
		(
			select Flow, Min(mstr.Seq) as Seq from ord_orderdet_1 as det
			inner join ORD_OrderMstr_1 as mstr on det.OrderNo = mstr.OrderNo
			left join #tempSeqOrder as Seq on det.Id = Seq.OrderDetId
			where OrderStrategy = 4 and Status in (1, 2) and IsPause = 0 and det.OrderQty > (det.ShipQty + ISNULL(Seq.Qty, 0))
			--可以获取所有已经关闭（已配送）的排序单
			group by Flow
		) as minSeq on mstr.Flow = minSeq.Flow and mstr.Seq >= minSeq.Seq
		union all
		--移库排序单
		select mstr.OrderNo, mstr.Flow, mstr.[Type] as OrderType, mstr.QualityType, mstr.StartTime, mstr.WindowTime,
		mstr.PartyFrom, mstr.PartyFromNm, mstr.PartyTo, mstr.PartyToNm, mstr.ShipFrom, mstr.ShipFromAddr, mstr.ShipFromTel,
		mstr.ShipFromCell, mstr.ShipFromFax, mstr.ShipFromContact, mstr.ShipTo, mstr.ShipToAddr, mstr.ShipToTel, mstr.ShipToCell,
		mstr.ShipToFax, mstr.ShipToContact, mstr.LocFrom, mstr.LocFromNm, mstr.LocTo, mstr.LocToNm, mstr.Dock, 
		mstr.IsAutoReceive, mstr.IsPrintAsn, mstr.IsPrintRec, mstr.IsCheckPartyFromAuth, mstr.IsCheckPartyToAuth,
		mstr.AsnTemplate, mstr.RecTemplate, mstr.Seq, mstr.TraceCode, 
		det.Id as OrderDetId, det.Seq as OrderDetSeq, det.Item, det.ItemDesc, det.RefItemCode,
		det.Uom, det.UnitQty, det.BaseUom, det.UC, det.ManufactureParty,
		det.Container, det.ContainerDesc, det.OrderQty, det.ShipQty 
		from ord_orderdet_2 as det
		inner join ORD_OrderMstr_2 as mstr on det.OrderNo = mstr.OrderNo
		inner join 
		(
			select Flow, Min(mstr.Seq) as Seq from ord_orderdet_2 as det
			inner join ORD_OrderMstr_2 as mstr on det.OrderNo = mstr.OrderNo
			left join #tempSeqOrder as Seq on det.Id = Seq.OrderDetId
			where OrderStrategy = 4 and Status in (1, 2) and IsPause = 0 and det.OrderQty > (det.ShipQty + ISNULL(Seq.Qty, 0))
			--可以获取所有已经关闭（已配送）的排序单
			group by Flow
		) as minSeq on mstr.Flow = minSeq.Flow and mstr.Seq >= minSeq.Seq
		union all
		--客供品排序单
		select mstr.OrderNo, mstr.Flow, mstr.[Type] as OrderType, mstr.QualityType, mstr.StartTime, mstr.WindowTime,
		mstr.PartyFrom, mstr.PartyFromNm, mstr.PartyTo, mstr.PartyToNm, mstr.ShipFrom, mstr.ShipFromAddr, mstr.ShipFromTel,
		mstr.ShipFromCell, mstr.ShipFromFax, mstr.ShipFromContact, mstr.ShipTo, mstr.ShipToAddr, mstr.ShipToTel, mstr.ShipToCell,
		mstr.ShipToFax, mstr.ShipToContact, mstr.LocFrom, mstr.LocFromNm, mstr.LocTo, mstr.LocToNm, mstr.Dock, 
		mstr.IsAutoReceive, mstr.IsPrintAsn, mstr.IsPrintRec, mstr.IsCheckPartyFromAuth, mstr.IsCheckPartyToAuth,
		mstr.AsnTemplate, mstr.RecTemplate, mstr.Seq, mstr.TraceCode, 
		det.Id as OrderDetId, det.Seq as OrderDetSeq, det.Item, det.ItemDesc, det.RefItemCode,
		det.Uom, det.UnitQty, det.BaseUom, det.UC, det.ManufactureParty,
		det.Container, det.ContainerDesc, det.OrderQty, det.ShipQty 
		from ord_orderdet_6 as det
		inner join ORD_OrderMstr_6 as mstr on det.OrderNo = mstr.OrderNo
		inner join 
		(
			select Flow, Min(mstr.Seq) as Seq from ord_orderdet_6 as det
			inner join ORD_OrderMstr_6 as mstr on det.OrderNo = mstr.OrderNo
			left join #tempSeqOrder as Seq on det.Id = Seq.OrderDetId
			where OrderStrategy = 4 and Status in (1, 2) and IsPause = 0 and det.OrderQty > (det.ShipQty + ISNULL(Seq.Qty, 0))
			--可以获取所有已经关闭（已配送）的排序单
			group by Flow
		) as minSeq on mstr.Flow = minSeq.Flow and mstr.Seq >= minSeq.Seq
	) as ord
	left join #tempSeqOrder as Seq on ord.OrderDetId = Seq.OrderDetId;
	
	drop table #tempSeqOrder;
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetWorkingCalendarView]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetWorkingCalendarView]
@ProdLine VARCHAR (50), @Region VARCHAR (50), @DateFrom DATETIME, @DateTo DATETIME
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_MatchNextWindowTime]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_MatchNextWindowTime]
@BaseTime DATETIME, @WinTime VARCHAR (256), @NextTime DATETIME OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_MoveVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_MoveVanProdOrder]
@ProdLine VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_PauseProdLine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_PauseProdLine]
@ProdLine VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_PauseProductLine]...';


GO
Create PROCEDURE [dbo].[USP_Busi_PauseProductLine]
(
	@ProductLineCode varchar(50),
	@UserId int,
	@UserNm varchar(100)
)
AS
BEGIN
	declare @DateTimeNow as datetime;
	set @DateTimeNow = GETDATE();
	
	--查询该生产线上所有未关闭生产单的Van号
	select TraceCode into #temp1 from ORD_OrderMstr_4 where Flow = @ProductLineCode and Status in (0, 1, 2);
	
	begin tran	
		--生产线暂停
		update SCM_FlowMstr set IsPause = 1, PauseTime = @DateTimeNow, LastModifyDate = @DateTimeNow, LastModifyUser = @UserId, LastModifyUserNm = @UserNm where Code = @ProductLineCode;
		
		--根据Van号暂停采购单（Kit单/排序单）
		update ORD_OrderMstr_1 set IsPLPause = 1, PauseTime = @DateTimeNow, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_1 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号暂停移库单（Kit单/排序单）
		update ORD_OrderMstr_2 set IsPLPause = 1, PauseTime = @DateTimeNow, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_2 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号暂停生产单（驾驶室/底盘）
		update ORD_OrderMstr_4 set IsPLPause = 1, PauseTime = @DateTimeNow, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_4 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号暂停计划协议单（Kit单/排序单）
		update ORD_OrderMstr_8 set IsPLPause = 1, PauseTime = @DateTimeNow, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_8 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
	commit

END
GO
PRINT N'Creating [dbo].[USP_Busi_PauseVanOrder]...';


GO

CREATE PROCEDURE [dbo].[USP_Busi_PauseVanOrder]
AS
BEGIN
	--暂停计划暂停的工单，当前工位等于计划暂停工位
	update ORD_OrderMstr_4 set IsPause = 1, IsPlanPause = 0	where CurtOp = PauseSeq and IsPlanPause = 1
END
GO
PRINT N'Creating [dbo].[USP_Busi_ReceiveVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_ReceiveVanProdOrder]
@OrderNo VARCHAR (50), @IsCheckIssue BIT, @IsCheckItemTrace BIT, @ReceiveUserId INT, @ReceiveUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_ReplaceQualityBarcode]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_ReplaceQualityBarcode]
@WithdrawBarcode VARCHAR (50), @Barcode VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_RestartProdLine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_RestartProdLine]
@ProdLine VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_RestartVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_RestartVanProdOrder]
@OrderNo VARCHAR (50), @InsertOrderNoBefore VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_RunLeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_RunLeanEngine]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_ScanQualityBarcode]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_ScanQualityBarcode]
@OrderNo VARCHAR (50), @Barcode VARCHAR (50), @OpRef VARCHAR (50), @OrderItemTraceId INT, @IsForce BIT, @CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_SetMonthInv]...';


GO
--select * from INV_LocTrans_0
CREATE PROCEDURE [dbo].[USP_Busi_SetMonthInv]
(
	@FinanceYear int,
	@FinanceMonth int,
	@UserId int,
	@UserNm varchar(100)
)
as 
begin

	declare @StartDate datetime;
	declare @EndDate datetime;
	declare @CycleDate datetime;
	declare @DateTimeNow datetime = GetDate();

	--查找本次月结的会计期间
	select @StartDate = StartDate, @EndDate = EndDate from MD_FinanceCalendar where FinanceYear = @FinanceYear and FinanceMonth = @FinanceMonth
	
	--查找上月期末库存
	set @CycleDate = dateadd(day, -1, @StartDate);
	select Item, Location, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty into #tempPreviousDayInv from INV_DailyInvBalance where InvDate = @cycleDate;
	
	begin tran
		--循环结算每天期末库存和库存事务
		while @CycleDate < @EndDate
		begin
			set @CycleDate = dateadd(day, 1, @CycleDate);
				
			----------------------------期末库存------------------------------------------
			select Item, 
			Location, 
			SUM(CASE WHEN QualityType = 0 then Qty else 0 end) as QualifyQty,
			SUM(CASE WHEN QualityType = 1 then Qty else 0 end) as InspectQty,
			SUM(CASE WHEN QualityType = 2 then Qty else 0 end) as RejectQty,
			SUM(CASE WHEN QualityType = 0 then TobeQty else 0 end) as TobeQualifyQty,
			SUM(CASE WHEN QualityType = 1 then TobeQty else 0 end) as TobeInspectQty,
			SUM(CASE WHEN QualityType = 2 then TobeQty else 0 end) as TobeRejectQty
			into #tempTodayTrans from 
			(
				--汇总入库库存
				select Item, LocTo as Location, QualityType, 
				SUM(Qty) as Qty, 0 as TobeQty 
				from INV_LocTrans 
				where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
				and IOType = 0 
				group by Item, LocTo, QualityType
				union all
				--汇总出库库存
				select Item, LocFrom as Location, QualityType, 
				SUM(Qty) as Qty, 0 as TobeQty 
				from INV_LocTrans 
				where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
				and IOType = 1 
				group by Item, LocFrom, QualityType
				union all 
				--移库出库301/305，增加目的库位待收库存
				--移库入库冲销304/308，增加目的库位待收库存
				--移库退货出库311/315，增加目的库位待收库存
				--移库退货入库冲销314/318，增加目的库位待收库存
				select Item, LocTo as Location, QualityType, 
				0 as Qty, SUM(Qty) as TobeQty 
				from INV_LocTrans 
				where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
				and IOType = 1 and TransType in (301, 305, 304, 308, 311, 315, 314, 318) 
				group by Item, LocTo, QualityType
				union all
				--移库出库冲销302/306，减少目的库位待收库存
				--移库入库303/307，减少目的库位待收库存
				--移库退货出库冲销312/316，减少目的库位待收库存
				--移库退货入库313/317，减少目的库位待收库存
				select Item, LocTo as Location, QualityType, 
				0 as Qty, SUM(-Qty) as TobeQty 
				from INV_LocTrans 
				where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
				and IOType = 1 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
				group by Item, LocTo, QualityType
			) as A group by Item, Location, QualityType;
					
			--插入DailyInvBalance，先以昨天期末库存为基准生成当天期末库存
			insert into INV_DailyInvBalance 
			(Item, Location, 
			QualifyQty, InspectQty, RejectQty,
			TobeQualifyQty, TobeInspectQty, TobeRejectQty,
			FinanceYear, FinanceMonth, 
			InvDate, CreateUser, CreateUserNm,
			CreateDate)
			select pre.Item, pre.Location, 
			pre.QualifyQty + isnull(td.QualifyQty, 0), 
			pre.InspectQty + isnull(td.InspectQty, 0), 
			pre.RejectQty + isnull(td.RejectQty, 0),
			pre.TobeQualifyQty + isnull(td.TobeQualifyQty, 0), 
			pre.TobeInspectQty + isnull(td.TobeInspectQty, 0), 
			pre.TobeRejectQty + isnull(td.TobeRejectQty, 0),
			@FinanceYear as FinanceYear, @FinanceMonth as FinanceMonth,
			@cycleDate as InvDate, @UserId as CreateUser, @UserNm  as CreateUserNm,
			@DateTimeNow as CreateDate
			from #tempPreviousDayInv as pre 
			left join #tempTodayTrans as td on pre.Item = td.Item and pre.Location = td.Location;
			
			--插入DailyInvBalance，对于昨天期末库存不存在的记录，直接记录当天期末库存
			insert into INV_DailyInvBalance 
			(Item, Location, 
			QualifyQty, InspectQty, RejectQty,
			TobeQualifyQty, TobeInspectQty, TobeRejectQty,
			FinanceYear, FinanceMonth, 
			InvDate, CreateUser, CreateUserNm,
			CreateDate)
			select td.Item, td.Location, 
			td.QualifyQty, 
			td.InspectQty, 
			td.RejectQty,
			td.TobeQualifyQty, 
			td.TobeInspectQty, 
			td.TobeRejectQty,
			@FinanceYear as FinanceYear, @FinanceMonth as FinanceMonth,
			@cycleDate as InvDate, @UserId as CreateUser, @UserNm  as CreateUserNm,
			@DateTimeNow as CreateDate
			from #tempPreviousDayInv as pre 
			right join #tempTodayTrans as td on pre.Item = td.Item and pre.Location = td.Location
			where pre.Item is null;
			
			--把今天期末库存赋值给#tempPreviousDayInv作为下次循环的昨天期末库存
			truncate table #tempPreviousDayInv;
			
			insert into #tempPreviousDayInv
			select Item, Location, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
			from INV_DailyInvBalance where InvDate = @cycleDate;
			
			----------------------------库存事务------------------------------------------
			--出库事务
			insert into INV_DailyTransBalance
			select Item, TransType, 0 as IOType, PartyFrom as Region, LocFrom as Location,  
			sum(case when QualityType = 0 then Qty * UnitQty else 0 end) as QualifyQty,
			sum(case when QualityType = 1 then Qty * UnitQty else 0 end) as InspectQty,
			sum(case when QualityType = 2 then Qty * UnitQty else 0 end) as RejectQty,
			@FinanceYear as FinanceYear, @FinanceMonth as FinanceMonth,
			@cycleDate as InvDate, @UserId as CreateUser, @UserNm  as CreateUserNm,
			@DateTimeNow as CreateDate
			from INV_LocTrans 
			where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
			and IOType = 0 
			and TransType not in (607, 608, 609, 610, 611, 612)     --过滤库内事务
			group by Item, TransType, PartyFrom, LocFrom, QualityType
			
			--入库事务
			insert into INV_DailyTransBalance
			select Item, TransType, 1 as IOType, PartyTo as Region, LocTo as Location,  
			sum(case when QualityType = 0 then Qty * UnitQty else 0 end) as QualifyQty,
			sum(case when QualityType = 1 then Qty * UnitQty else 0 end) as InspectQty,
			sum(case when QualityType = 2 then Qty * UnitQty else 0 end) as RejectQty,
			@FinanceYear as FinanceYear, @FinanceMonth as FinanceMonth,
			@cycleDate as InvDate, @UserId as CreateUser, @UserNm  as CreateUserNm,
			@DateTimeNow as CreateDate
			from INV_LocTrans 
			where EffDate between Convert(varchar(8), @CycleDate, 112)  and Convert(varchar(8), dateadd(day,1,@CycleDate), 112)
			and IOType = 1 
			and TransType not in (607, 608, 609, 610, 611, 612)     --过滤库内事务
			group by Item, TransType, PartyTo, LocTo, QualityType
		end
	commit tran
end




select * from sys.sql_modules where definition like '%where Convert%'
GO
PRINT N'Creating [dbo].[USP_Busi_SetMonthInv_All]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SetMonthInv_All]
(
	@FinanceYear int,
	@FinanceMonth int,
	@UserId int,
	@UserNm varchar(100)
)
AS 
BEGIN
	SET NOCOUNT ON
----USP_Busi_SetMonthInv_3 2012,2,1,'su'
	BEGIN TRY
		DECLARE @StartDate datetime
		DECLARE @EndDate datetime
		DECLARE @CycleDate datetime
		DECLARE @CurrLoopDate datetime
		DECLARE @DateTimeNow datetime = GetDate();
		DECLARE @sql varchar(max)
		DECLARE @i int
		DECLARE @max int
		DECLARE @TableSuffix varchar(50)
		DECLARE @LastMonthSuffix varchar(50)
		DECLARE @SumTabName varchar(50)
		DECLARE @Statement nvarchar(4000)
		DECLARE @Parameter nvarchar(4000)
		
		IF @FinanceMonth=1
		BEGIN
			SET @LastMonthSuffix=CAST(@FinanceYear-1 AS VARCHAR(5))+RIGHT('0'+CAST(12 AS VARCHAR(5)),2)
		END
		ELSE
		BEGIN
			SET @LastMonthSuffix=CAST(@FinanceYear AS VARCHAR(5))+RIGHT('0'+CAST(@FinanceMonth-1 AS VARCHAR(5)),2)
		END
		SET @TableSuffix=CAST(@FinanceYear AS VARCHAR(5))+RIGHT('0'+CAST(@FinanceMonth AS VARCHAR(5)),2)
		SET @sql='IF NOT EXISTS(SELECT * FROM SYS.OBJECTS WHERE Type=''U'' AND Name= ''INV_DailyInvBalance_'+@TableSuffix+''')'+CHAR(10)
		SET @sql=@sql+'BEGIN 
			CREATE TABLE INV_DailyInvBalance_'+@TableSuffix+'(Id bigint IDENTITY(1,1) NOT NULL PRIMARY KEY NONCLUSTERED,Item varchar(50) NOT NULL,Location varchar(50) NOT NULL,
			SAPLocation varchar(50) NOT NULL,ManufactureParty varchar(50) NULL,LotNo varchar(50) NULL,IsCs bit NOT NULL,
			QualifyQty decimal(18, 8) NOT NULL,InspectQty decimal(18, 8) NOT NULL,RejectQty decimal(18, 8) NOT NULL,
			TobeQualifyQty decimal(18, 8) NOT NULL,TobeInspectQty decimal(18, 8) NOT NULL,
			TobeRejectQty decimal(18, 8) NOT NULL,FinanceYear int NOT NULL,FinanceMonth int NOT NULL,
			InvDate datetime NOT NULL,CreateUser int NOT NULL,CreateUserNm varchar(100) NOT NULL,CreateDate datetime NOT NULL)
			CREATE CLUSTERED INDEX IX_INV_DailyInvBalance_'+@TableSuffix+'_1 ON INV_DailyInvBalance_'+@TableSuffix+'(Item,Location)
			CREATE INDEX IX_INV_DailyInvBalance_'+@TableSuffix+'_2 ON INV_DailyInvBalance_'+@TableSuffix+'(InvDate)'+CHAR(13)
		SET @sql=@sql+'END'
		--PRINT @sql
		--return 
		EXEC(@sql)
		CREATE TABLE #tempTodayTransNoGroup(Item varchar(50),Location varchar(50),	ManufactureParty varchar(50),
			LotNo varchar(50) ,IsCs bit,QualifyQty decimal(18,8),InspectQty decimal(18,8),RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))
		CREATE TABLE #tempTodayTrans(Item varchar(50),Location varchar(50),	ManufactureParty varchar(50),
			LotNo varchar(50) ,IsCs bit,QualifyQty decimal(18,8),InspectQty decimal(18,8),RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))			
		--查找本次月结的会计期间
		SELECT @StartDate = StartDate, @EndDate = EndDate FROM MD_FinanceCalendar 
			WHERE FinanceYear = @FinanceYear and FinanceMonth = @FinanceMonth
			
		set @CycleDate = @StartDate
		----查找所有需要月结得TransTable
		--SELECT id=ROW_NUMBER()OVER(ORDER BY name),name into #tempSumTabName FROM sys.objects WHERE type=N'U' AND name like N'INV_LocTrans_%'
		SELECT @sql='',@max=19,@i=0
		---创建前一天的库存表
		SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
			into #tempPreviousDayInv from INV_DailyInvBalance where 1<>1
		
		SET @sql='SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
			 from INV_DailyInvBalance_'+@LastMonthSuffix+' where InvDate = '''+Convert(varchar(10), dateadd(day, -1, @StartDate), 121)+''''
		--PRINT @sql
		INSERT INTO #tempPreviousDayInv
		EXEC(@sql)	
		--SELECT * FROM #tempPreviousDayInv
		--RETURN
		--循环结算每天期末库存和库存事务
		--SET @CycleDate='2012-01-08'
		--SET @EndDate='2012-06-20'
		WHILE @CycleDate < @EndDate
		BEGIN			
			SET @i=0
			WHILE @i<@max
			BEGIN
				--PRINT @max
				--查找前一天库存,第一次循环查找得为上月期末库存
				set @sql='select Item, Location, ManufactureParty, LotNo, IsCs, 
					SUM(CASE WHEN QualityType = 0 then Qty else 0 end) as QualifyQty,
					SUM(CASE WHEN QualityType = 1 then Qty else 0 end) as InspectQty,
					SUM(CASE WHEN QualityType = 2 then Qty else 0 end) as RejectQty,
					SUM(CASE WHEN QualityType = 0 then TobeQty else 0 end) as TobeQualifyQty,
					SUM(CASE WHEN QualityType = 1 then TobeQty else 0 end) as TobeInspectQty,
					SUM(CASE WHEN QualityType = 2 then TobeQty else 0 end) as TobeRejectQty
					from 
					(
					 ---普通的移库采购事务的计算
						--汇总入库库存
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.IsCs=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						--汇总出库库存
						SELECT lt.Item, lt.LocFrom AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.IsCs=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
					----寄售移库的事务计算	
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.IsCs=1 AND lt.ActBill=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocFrom, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
						WHERE lt.EffDate >= '''+Convert(varchar(10),@CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.IsCs=1 AND lt.ActBill=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
					----寄售结算的事务	
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.ActBill<>0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocFrom AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.ActBill<>0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
					----寄售采购的事务
						UNION ALL
						SELECT lt.Item, CASE WHEN TransType in (201,205,202,206) THEN lt.LocTo ELSE lt.LocFrom END AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
						lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND TransType IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, CASE WHEN TransType in (201,205,202,206) THEN lt.LocTo ELSE lt.LocFrom END,
							CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType

					----非寄售在途	
					----移库出库301/305，增加目的库位待收库存
					----移库入库冲销304/308，增加目的库位待收库存
					----移库退货出库311/315，增加目的库位待收库存
					----移库退货入库冲销314/318，增加目的库位待收库存
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 1 and TransType in (301, 305, 304, 308, 311, 315, 314, 318) 
						GROUP BY lt.Item, lt.LocTo,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
					----移库出库冲销302/306，减少目的库位待收库存
					----移库入库303/307，减少目的库位待收库存
					----移库退货出库冲销312/316，减少目的库位待收库存
					----移库退货入库313/317，减少目的库位待收库存
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
						GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType	
						
					----寄售在途
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
						lt.LotNo, 1 AS IsCs, lt.QualityType, 
						SUM(-lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
						WHERE lt.EffDate >= '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND (lt.IsCs=1 OR (lt.IsCs=0 AND lt.ActBill<>0)) AND IOType = 1 AND lt.TransType IN (301, 305, 304, 308, 311, 315, 314, 318) 
						GROUP BY lt.Item, lt.LocTo,CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate >= '''+Convert(varchar(10), @CycleDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
						AND lt.IsCs=1 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
						GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType											
					) as A GROUP BY Item, Location,ManufactureParty, LotNo, IsCs, QualityType'
					--PRINT @sql	
					--PRINT datalength(@sql)
					--exec(@sql)
					INSERT INTO	#tempTodayTransNoGroup
					exec(@sql)
								
				
				SET @i=@i+1	
			END	
			INSERT INTO #tempTodayTrans(Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
			TobeQualifyQty, TobeInspectQty, TobeRejectQty)
			SELECT Item, Location, ManufactureParty, LotNo, IsCs,
				SUM(QualifyQty),SUM(InspectQty),SUM(RejectQty),SUM(TobeQualifyQty),SUM(TobeInspectQty),SUM(TobeRejectQty)
			FROM #tempTodayTransNoGroup GROUP BY Item, Location, ManufactureParty, LotNo, IsCs
			TRUNCATE TABLE #tempTodayTransNoGroup
			
			--PRINT 'CycleData='+Convert(varchar(10),@CycleDate,121)+';'
			--select * from #tempTodayTrans
			--select * from #tempPreviousDayInv
			--return
			--PRINT '1.lastday data'
			----------------------------期末库存------------------------------------------
			--插入DailyInvBalance，先以昨天期末库存为基准生成当天期末库存
			SET @Statement='insert into INV_DailyInvBalance_'+@TableSuffix+'
			(Item, Location, SAPLocation, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
			TobeQualifyQty, TobeInspectQty, TobeRejectQty, FinanceYear, FinanceMonth, 
			InvDate, CreateUser, CreateUserNm,
			CreateDate)
			SELECT pre.Item, pre.Location, l.SAPLocation, pre.ManufactureParty, pre.LotNo, pre.IsCs,
			pre.QualifyQty + isnull(td.QualifyQty, 0), 
			pre.InspectQty + isnull(td.InspectQty, 0), 
			pre.RejectQty + isnull(td.RejectQty, 0),
			pre.TobeQualifyQty + isnull(td.TobeQualifyQty, 0), 
			pre.TobeInspectQty + isnull(td.TobeInspectQty, 0), 
			pre.TobeRejectQty + isnull(td.TobeRejectQty, 0),
			@FinanceYear_1 AS FinanceYear, @FinanceMonth_1 AS FinanceMonth,
			@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  AS CreateUserNm,
			@DateTimeNow_1 AS CreateDate
			FROM #tempPreviousDayInv AS pre 
			LEFT JOIN MD_Location AS l ON pre.Location=l.Code
			LEFT JOIN #tempTodayTrans AS td ON pre.Item = td.Item AND pre.Location = td.Location
				AND pre.ManufactureParty = td.ManufactureParty AND pre.LotNo = td.LotNo AND pre.IsCs = td.IsCs'
			SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
			--PRINT @Statement
			exec sp_executesql @Statement,@Parameter,
				@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@CycleDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow						
			--PRINT '2.today data'
					
			--插入DailyInvBalance，对于昨天期末库存不存在的记录，直接记录当天期末库存
			SET @Statement='insert into INV_DailyInvBalance_'+@TableSuffix+'
			(Item, Location, SAPLocation, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
			TobeQualifyQty, TobeInspectQty, TobeRejectQty, FinanceYear, FinanceMonth, 
			InvDate, CreateUser, CreateUserNm,
			CreateDate)
			select td.Item, td.Location, l.SAPLocation, td.ManufactureParty, td.LotNo, td.IsCs,
			td.QualifyQty, 
			td.InspectQty, 
			td.RejectQty,
			td.TobeQualifyQty, 
			td.TobeInspectQty, 
			td.TobeRejectQty,
			@FinanceYear_1 AS FinanceYear, @FinanceMonth_1 AS FinanceMonth,
			@cycleDate_1 AS InvDate, @UserId_1 as CreateUser, @UserNm_1  AS CreateUserNm,
			@DateTimeNow_1 AS CreateDate
			FROM #tempPreviousDayInv as pre 
			RIGHT JOIN #tempTodayTrans AS td ON pre.Item = td.Item AND pre.Location = td.Location
			AND pre.ManufactureParty = td.ManufactureParty AND pre.LotNo = td.LotNo AND pre.IsCs = td.IsCs
			LEFT JOIN MD_Location AS l ON td.Location=l.Code
			WHERE pre.Item IS NULL'
			SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
			--PRINT @Statement
			exec sp_executesql @Statement,@Parameter,
				@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@CycleDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow						
			
			TRUNCATE TABLE #tempPreviousDayInv
			TRUNCATE TABLE #tempTodayTrans
			
			set @sql='SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
				FROM INV_DailyInvBalance_'+@TableSuffix+' where InvDate = '''+Convert(varchar(10), @CycleDate, 121)+''''
			INSERT INTO #tempPreviousDayInv
			EXEC(@sql)				
			
			set @CycleDate = dateadd(day, 1, @CycleDate)
		END
		 
		DROP TABLE #tempPreviousDayInv 
		DROP TABLE #tempTodayTransNoGroup
		DROP TABLE #tempTodayTrans
	END TRY
	BEGIN CATCH
		INSERT INTO SYS_ErrorLog
		SELECT 'USP_SetMonthInv_3',Error_Message(),Error_Number(),Error_Severity(),
			Error_State(),Error_Procedure(),Error_Line();
			 
		RAISERROR(N'月结无法完成，数据库产生错误。', 16, 1)
	END CATCH	
END
GO
PRINT N'Creating [dbo].[USP_Busi_SetMonthInv_NEW]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SetMonthInv_NEW]
(
	@FinanceYear int,
	@FinanceMonth int,
	@UserId int,
	@UserNm varchar(100)
)
AS 
BEGIN
	SET NOCOUNT ON
----USP_Busi_SetMonthInv_NEW 2012,2,1,'su'
	BEGIN TRY
		DECLARE @StartDate datetime
		DECLARE @EndDate datetime
		DECLARE @CycleDate datetime
		DECLARE @CurrLoopDate datetime
		DECLARE @DateTimeNow datetime = GetDate();
		DECLARE @sql varchar(max)
		DECLARE @i int
		DECLARE @max int
		DECLARE @SumTabName varchar(50)
		DECLARE @Statement nvarchar(4000)
		DECLARE @Parameter nvarchar(4000)

		CREATE TABLE #tempTodayTrans(Item varchar(50),Location varchar(50),	ManufactureParty varchar(50),
			LotNo varchar(50) ,IsCs bit,QualifyQty decimal(18,8),InspectQty decimal(18,8),RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))
		--查找本次月结的会计期间
		SELECT @StartDate = StartDate, @EndDate = EndDate FROM MD_FinanceCalendar 
			WHERE FinanceYear = @FinanceYear and FinanceMonth = @FinanceMonth
			
		set @CycleDate = dateadd(day, -1, @StartDate)
		----查找所有需要月结得TransTable
		--SELECT id=ROW_NUMBER()OVER(ORDER BY name),name into #tempSumTabName FROM sys.objects WHERE type=N'U' AND name like N'INV_LocTrans_%'
		SELECT @sql='',@max=19,@i=0
		---创建前一天的库存表
		SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
			into #tempPreviousDayInv from INV_DailyInvBalance where 1<>1
		
		--循环结算每天期末库存和库存事务
		--SET @CycleDate='2012-01-08'
		--SET @EndDate='2012-01-10'
		WHILE @CycleDate < dateadd(day, -1, @EndDate)
		BEGIN	
			SET @i=0
			WHILE @i<@max
			BEGIN
				--PRINT 'CycleData='+Convert(varchar(10),@CycleDate,121)+'; @i='+Cast(@i as varchar(10))
				--PRINT @max
				--查找前一天库存,第一次循环查找得为上月期末库存
				set @sql='SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
					FROM INV_DailyInvBalance_'+CAST(@i as varchar(10))+' where InvDate = '''+Convert(varchar(10), @CycleDate, 121)+''''
				
				--print @sql
				--exec(@sql)
				INSERT INTO #tempPreviousDayInv
				EXEC(@sql)
				
				--where EffDate between '''+Convert(varchar(10), @CycleDate, 121)+'''  and '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
				--SELECT @SumTabName=name FROM #tempSumTabName WHERE id=@i
				set @sql='select Item, Location, ManufactureParty, LotNo, IsCs, 
					SUM(CASE WHEN QualityType = 0 then Qty else 0 end) as QualifyQty,
					SUM(CASE WHEN QualityType = 1 then Qty else 0 end) as InspectQty,
					SUM(CASE WHEN QualityType = 2 then Qty else 0 end) as RejectQty,
					SUM(CASE WHEN QualityType = 0 then TobeQty else 0 end) as TobeQualifyQty,
					SUM(CASE WHEN QualityType = 1 then TobeQty else 0 end) as TobeInspectQty,
					SUM(CASE WHEN QualityType = 2 then TobeQty else 0 end) as TobeRejectQty
					from 
					(
					 ---普通的移库采购事务的计算
						--汇总入库库存
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.IsCs=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						--汇总出库库存
						SELECT lt.Item, lt.LocFrom AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.IsCs=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
					----寄售移库的事务计算	
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.IsCs=1 AND lt.ActBill=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocFrom, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.IsCs=1 AND lt.ActBill=0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
					----寄售结算的事务	
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=0 AND lt.ActBill<>0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocFrom AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IOType=1 AND lt.ActBill<>0
						AND TransType NOT IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocFrom, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
					----寄售采购的事务
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
						lt.LotNo, lt.IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND TransType IN (201, 202, 203, 204, 205, 206)
						GROUP BY lt.Item, lt.LocTo,CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType
					
					----非寄售在途	
					----移库出库301/305，增加目的库位待收库存
					----移库入库冲销304/308，增加目的库位待收库存
					----移库退货出库311/315，增加目的库位待收库存
					----移库退货入库冲销314/318，增加目的库位待收库存
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 1 and TransType in (301, 305, 304, 308, 311, 315, 314, 318) 
						GROUP BY lt.Item, lt.LocTo,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
					----移库出库冲销302/306，减少目的库位待收库存
					----移库入库303/307，减少目的库位待收库存
					----移库退货出库冲销312/316，减少目的库位待收库存
					----移库退货入库313/317，减少目的库位待收库存
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
						GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType	
						
					----寄售在途
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
						lt.LotNo, 1 AS IsCs, lt.QualityType, 
						SUM(lt.Qty) AS Qty,0 AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
						LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND (lt.IsCs=1 OR (lt.IsCs=0 AND lt.ActBill<>0)) AND IOType = 1 AND lt.TransType IN (301, 305, 304, 308, 311, 315, 314, 318) 
						GROUP BY lt.Item, lt.LocTo,CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType
						UNION ALL
						SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
						0 AS QTY,SUM(-lt.Qty) AS TobeQty
						FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
						LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
						WHERE lt.EffDate > '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''  and lt.EffDate <= '''+Convert(varchar(10), dateadd(day,2,@CycleDate), 121)+'''
						AND lt.IsCs=1 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
						GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType											
					) as A GROUP BY Item, Location,ManufactureParty, LotNo, IsCs, QualityType'
					--PRINT @sql	
					PRINT datalength(@sql)
					--exec(@sql)
					INSERT INTO	#tempTodayTrans
					exec(@sql)
					
					
					SET @CurrLoopDate=dateadd(day,1,@CycleDate)					
					
					--插入DailyInvBalance，先以昨天期末库存为基准生成当天期末库存
					SET @Statement='insert into INV_DailyInvBalance_'+Cast(@i AS varchar(10))+'
					(Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
					TobeQualifyQty, TobeInspectQty, TobeRejectQty, FinanceYear, FinanceMonth, 
					InvDate, CreateUser, CreateUserNm,
					CreateDate)
					select pre.Item, pre.Location, pre.ManufactureParty, pre.LotNo, pre.IsCs,
					pre.QualifyQty + isnull(td.QualifyQty, 0), 
					pre.InspectQty + isnull(td.InspectQty, 0), 
					pre.RejectQty + isnull(td.RejectQty, 0),
					pre.TobeQualifyQty + isnull(td.TobeQualifyQty, 0), 
					pre.TobeInspectQty + isnull(td.TobeInspectQty, 0), 
					pre.TobeRejectQty + isnull(td.TobeRejectQty, 0),
					@FinanceYear_1 as FinanceYear, @FinanceMonth_1 as FinanceMonth,
					@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  as CreateUserNm,
					@DateTimeNow_1 as CreateDate
					from #tempPreviousDayInv as pre 
					left join #tempTodayTrans as td on pre.Item = td.Item and pre.Location = td.Location'
					SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
					--PRINT @Statement
					exec sp_executesql @Statement,@Parameter,
						@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@CurrLoopDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow						

					--PRINT '@i1='+Cast(@i as varchar(10))
					/*SET @Statement='select td.Item, td.Location, td.ManufactureParty, td.LotNo, td.IsCs,
					td.QualifyQty, 
					td.InspectQty, 
					td.RejectQty,
					td.TobeQualifyQty, 
					td.TobeInspectQty, 
					td.TobeRejectQty,					
					@FinanceYear_1 as FinanceYear, @FinanceMonth_1 as FinanceMonth,
					@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  as CreateUserNm,
					@DateTimeNow_1 as CreateDate
					from #tempPreviousDayInv as pre 
					right join #tempTodayTrans as td on pre.Item = td.Item and pre.Location = td.Location
					where pre.Item is null'
					SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
					--PRINT @Statement
					exec sp_executesql @Statement,@Parameter,
						@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@CurrLoopDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow						
					*/
					
					--插入DailyInvBalance，对于昨天期末库存不存在的记录，直接记录当天期末库存
					SET @Statement='insert into INV_DailyInvBalance_'+Cast(@i AS varchar(10))+'
					(Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
					TobeQualifyQty, TobeInspectQty, TobeRejectQty, FinanceYear, FinanceMonth, 
					InvDate, CreateUser, CreateUserNm,
					CreateDate)
					select td.Item, td.Location, td.ManufactureParty, td.LotNo, td.IsCs,
					td.QualifyQty, 
					td.InspectQty, 
					td.RejectQty,
					td.TobeQualifyQty, 
					td.TobeInspectQty, 
					td.TobeRejectQty,
					@FinanceYear_1 as FinanceYear, @FinanceMonth_1 as FinanceMonth,
					@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  as CreateUserNm,
					@DateTimeNow_1 as CreateDate
					from #tempPreviousDayInv as pre 
					right join #tempTodayTrans as td on pre.Item = td.Item and pre.Location = td.Location
					where pre.Item is null'
					SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
					--PRINT @Statement
					exec sp_executesql @Statement,@Parameter,
						@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@CurrLoopDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow						
					
					--PRINT '@i2='+Cast(@i as varchar(10))
					/*
					SET @Statement='INSERT INTO INV_DailyTransBalance_'+Cast(@i AS varchar(10))+'
					(Item, TransType, IOType, Region, 
					Location, QualifyQty, InspectQty, 
					RejectQty, FinanceYear, FinanceMonth, 
					InvDate, CreateUser, CreateUserNm, CreateDate)
					select Item, TransType, 0 as IOType, PartyTo as Region, LocTo as Location,  
					sum(case when QualityType = 0 then Qty * UnitQty else 0 end) as QualifyQty,
					sum(case when QualityType = 1 then Qty * UnitQty else 0 end) as InspectQty,
					sum(case when QualityType = 2 then Qty * UnitQty else 0 end) as RejectQty,
					@FinanceYear_1 as FinanceYear, @FinanceMonth_1 as FinanceMonth,
					@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  as CreateUserNm,
					@DateTimeNow_1 as CreateDate
					from INV_LocTrans_'+Cast(@i AS varchar(10))+' 
					where EffDate between '''+Convert(varchar(10), @CycleDate, 121)+'''  and '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
					and IOType = 0 
					and TransType not in (607, 608, 609, 610, 611, 612)     --过滤库内事务
					group by Item, TransType, PartyTo, LocTo, QualityType'
					SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
					PRINT @Statement
					exec sp_executesql @Statement,@Parameter,
						@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@cycleDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow			
					PRINT '@i3='+Cast(@i as varchar(10))	
					
					SET @Statement='INSERT INTO INV_DailyTransBalance_'+Cast(@i AS varchar(10))+'
					(Item, TransType, IOType, Region, 
					Location, QualifyQty, InspectQty, 
					RejectQty, FinanceYear, FinanceMonth, 
					InvDate, CreateUser, CreateUserNm, CreateDate)
					select Item, TransType, 0 as IOType, PartyFrom as Region, LocFrom as Location,  
					sum(case when QualityType = 0 then Qty * UnitQty else 0 end) as QualifyQty,
					sum(case when QualityType = 1 then Qty * UnitQty else 0 end) as InspectQty,
					sum(case when QualityType = 2 then Qty * UnitQty else 0 end) as RejectQty,
					@FinanceYear_1 as FinanceYear, @FinanceMonth_1 as FinanceMonth,
					@cycleDate_1 as InvDate, @UserId_1 as CreateUser, @UserNm_1  as CreateUserNm,
					@DateTimeNow_1 as CreateDate
					from INV_LocTrans_'+Cast(@i AS varchar(10))+' 
					where EffDate between '''+Convert(varchar(10), @CycleDate, 121)+'''  and '''+Convert(varchar(10), dateadd(day,1,@CycleDate), 121)+'''
					and IOType = 1 
					and TransType not in (607, 608, 609, 610, 611, 612)     --过滤库内事务
					group by Item, TransType, PartyFrom, LocFrom, QualityType'
					SET @Parameter=N'@FinanceYear_1 int,@FinanceMonth_1 int,@cycleDate_1 datetime,@UserId_1 int,@UserNm_1 varchar(100),@DateTimeNow_1 datetime'
					PRINT @Statement
					exec sp_executesql @Statement,@Parameter,
						@FinanceYear_1=@FinanceYear,@FinanceMonth_1=@FinanceMonth,@cycleDate_1=@cycleDate,@UserId_1=@UserId,@UserNm_1=@UserNm,@DateTimeNow_1=@DateTimeNow
					PRINT '@i4='+Cast(@i as varchar(10))
					*/
					
					--清除临时表数据
					
					TRUNCATE TABLE #tempPreviousDayInv
					TRUNCATE TABLE #tempTodayTrans
				SET @i=@i+1	
			END	
			----------------------------期末库存------------------------------------------
			set @CycleDate = dateadd(day, 1, @CycleDate);
		END
		
		DROP TABLE #tempPreviousDayInv 
		DROP TABLE #tempTodayTrans
	END TRY
	BEGIN CATCH
		INSERT INTO SYS_ErrorLog
		SELECT 'USP_SetMonthInv_All',Error_Message(),Error_Number(),Error_Severity(),
			Error_State(),Error_Procedure(),Error_Line();
			
		RAISERROR(N'月结无法完成，数据库产生错误。', 16, 1)
	END CATCH	
END
GO
PRINT N'Creating [dbo].[USP_Busi_SnapshotFlowDet4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SnapshotFlowDet4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_SnapshotLocationDet4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SnapshotLocationDet4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_SnapshotOrderBomCPTime4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SnapshotOrderBomCPTime4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_SnapshotOrderPlan4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_SnapshotOrderPlan4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_StartEmptyVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_StartEmptyVanProdOrder]
@ProdLine VARCHAR (50), @StartUserId INT, @StartUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_StartVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_StartVanProdOrder]
@OrderNo VARCHAR (50), @StartUserId INT, @StartUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_SubtractWorkingDate]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_SubtractWorkingDate]
@BaseDate DATETIME, @SubtractTime INT, @ProdLine VARCHAR (50), @Region VARCHAR (50), @ReturnDate DATETIME OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_UpdateOrderBomConsumeTime]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_UpdateOrderBomConsumeTime]
@ProdLine VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_Busi_UpdateSeq4AdjVanOrderSeq_TargetVanOrderExist]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_UpdateSeq4AdjVanOrderSeq_TargetVanOrderExist]
	@VanProdLine varchar(50),     --生产线代码
	@OrgVanOrderNo varchar(50),   --原生产单号，需要调整顺序的生产单
	@OldStartTime DateTime,
	@NewStartTime DateTime,
	@OldSeq bigint,               --SAP原生产单顺序
	@NewSeq bigint,				  --SAP目的生产单顺序
	@TargetVanOrderSeq bigint,       --目的生产单顺序号，和SAP的顺序号要区分开，因为释放后的生产单调整顺序不会改变SAPSeq，只会修改Seq
	@UserId int,
	@UserNm varchar(100)
AS
BEGIN
	begin tran
		 if (@OldStartTime = @NewStartTime)
		 begin
			--调整前生产单的开工日期和目的生产单的开工日期在同一天
			if (@OldSeq > @NewSeq)
			begin
				--往前调整，NewSeq <= Seq < OldSeq，调整至目的生产单之后
				update ORD_OrderMstr_4 set Seq = Seq + 1, SapSeq = SapSeq + 1, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where Flow = @VanProdLine and StartTime = @NewStartTime and SapSeq >= @NewSeq and SapSeq < @OldSeq
				update ORD_OrderMstr_4 set Seq = @TargetVanOrderSeq, SapSeq = @NewSeq, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where OrderNo = @OrgVanOrderNo
			end  
			else if (@OldSeq < @NewSeq)
			begin
				--往后调整，OldSeq < Seq <= NewSeq，调整至目的生产单之后
				update ORD_OrderMstr_4 set Seq = Seq - 1, SapSeq = SapSeq - 1, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where Flow = @VanProdLine and StartTime = @NewStartTime and SapSeq <= @NewSeq and SapSeq > @OldSeq
				update ORD_OrderMstr_4 set Seq = @TargetVanOrderSeq, SapSeq = @NewSeq, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where OrderNo = @OrgVanOrderNo
			end
			else
			begin
				return;
			end
		 end
		 else
		 begin
			--调整前生产单的开工日期和目的生产单的开工日期不在同一天，调整前的工单从原来队列调整至新队列中
			update ORD_OrderMstr_4 set Seq = Seq + 1, SapSeq = SapSeq + 1, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where Flow = @VanProdLine and StartTime = @NewStartTime and SapSeq >= @NewSeq
			update ORD_OrderMstr_4 set Seq = Seq - 1, SapSeq = SapSeq - 1, Version = Version + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where Flow = @VanProdLine and StartTime = @OldStartTime and SapSeq > @OldSeq
			update ORD_OrderMstr_4 set StartTime = @NewStartTime, WindowTime = @NewStartTime, Seq = @TargetVanOrderSeq, SapSeq = @NewSeq, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where OrderNo = @OrgVanOrderNo
		 end
	commit
END
GO
PRINT N'Creating [dbo].[USP_Busi_UpdateSeq4AdjVanOrderSeq_TargetVanOrderNotExist]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_UpdateSeq4AdjVanOrderSeq_TargetVanOrderNotExist]
	@VanProdLine varchar(50),     --生产线代码
	@OrgVanOrderNo varchar(50),   --原生产单号，需要调整顺序的生产单
	@OldStartTime DateTime,
	@NewStartTime DateTime,
	@OldSeq bigint,
	@NewSeq bigint,
	@UserId int,
	@UserNm varchar(100)
AS
BEGIN
	begin tran
		if Exists(select top 1 OrderNo from ORD_OrderMstr_4 where StartTime between @NewStartTime and DATEADD(DAY,+1,@NewStartTime))
		begin
			Declare @maxSeq bigint;
			select @maxSeq = MAX(Seq) from ORD_OrderMstr_4 where StartTime between @NewStartTime and DATEADD(DAY,+1,@NewStartTime)
			--如果调整后的开始日期有生产单，可能是因为指定的@NewSeq为当天的最后一个没有该顺序的生产单
			update ORD_OrderMstr_4 set StartTime = @NewStartTime, WindowTime = @NewStartTime, Seq = @maxSeq + 1, SapSeq = @NewSeq, [Version] = [Version] + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where OrderNo = @OrgVanOrderNo
		end
		else
		begin
			--删除原生产单
			delete from ORD_OrderMstr_4 where OrderNo = @OrgVanOrderNo;			
		end
		update ORD_OrderMstr_4 set Seq = Seq - 1, SapSeq = SapSeq - 1, Version = Version + 1, LastModifyUser = @UserId, LastModifyUserNm = @UserNm, LastModifyDate = GETDATE() where Flow = @VanProdLine and StartTime = @OldStartTime and SapSeq > @OldSeq
	commit
END
GO
PRINT N'Creating [dbo].[USP_Busi_UpdateSeq4RestoreVanOrder]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_UpdateSeq4RestoreVanOrder]
(
	@TraceCode varchar(50),
	@VanOrder varchar(50),
	@NewSeq bigint,
	@UserId int,
	@UserNm varchar(100)
)
AS
BEGIN
	--查询包含TraceCode的采购单（Kit单/排序单）
	select Flow, OrderNo, CONVERT(varchar(8), StartTime, 112) as StartTime into #temp1 from ORD_OrderMstr_1 where TraceCode = @TraceCode;
	--查询包含TraceCode的移库单（Kit单/排序单）
	select Flow, OrderNo, CONVERT(varchar(8), StartTime, 112) as StartTime into #temp2 from ORD_OrderMstr_2 where TraceCode = @TraceCode;
	--查询包含TraceCode的生产单（驾驶室/底盘）
	select Flow, OrderNo, CONVERT(varchar(8), StartTime, 112) as StartTime into #temp4 from ORD_OrderMstr_4 where TraceCode = @TraceCode and OrderNo <> @VanOrder;
	--查询包含TraceCode的计划协议单（Kit单/排序单）
	select Flow, OrderNo, CONVERT(varchar(8), StartTime, 112) as StartTime into #temp8 from ORD_OrderMstr_8 where TraceCode = @TraceCode;
	
begin tran
	update ORD_OrderMstr_1 set Seq = mstr.Seq + 1, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
	from ORD_OrderMstr_1 as mstr inner join #temp1 as t on mstr.Flow = t.Flow and CONVERT(varchar(8), mstr.StartTime, 112) = t.StartTime
	where mstr.OrderNo <> t.OrderNo and mstr.Seq >= @NewSeq;
	
	update ORD_OrderMstr_2 set Seq = mstr.Seq + 1, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
	from ORD_OrderMstr_2 as mstr inner join #temp2 as t on mstr.Flow = t.Flow and CONVERT(varchar(8), mstr.StartTime, 112) = t.StartTime
	where mstr.OrderNo <> t.OrderNo and mstr.Seq >= @NewSeq;
	
	update ORD_OrderMstr_4 set Seq = mstr.Seq + 1, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
	from ORD_OrderMstr_4 as mstr inner join #temp4 as t on mstr.Flow = t.Flow and CONVERT(varchar(8), mstr.StartTime, 112) = t.StartTime
	where mstr.OrderNo <> t.OrderNo and mstr.Seq >= @NewSeq;
	
	update ORD_OrderMstr_8 set Seq = mstr.Seq + 1, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
	from ORD_OrderMstr_8 as mstr inner join #temp8 as t on mstr.Flow = t.Flow and CONVERT(varchar(8), mstr.StartTime, 112) = t.StartTime
	where mstr.OrderNo <> t.OrderNo and mstr.Seq >= @NewSeq;
commit

END
GO
PRINT N'Creating [dbo].[USP_Busi_UpdateVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_UpdateVanProdOrder]
@BatchNo INT, @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_WithdrawQualityBarcode]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_WithdrawQualityBarcode]
@Barcode VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_GetDocNo_ASN]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_ASN]
(
	@OrderType tinyint,
	@OrderSubType tinyint,
	@QualityType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@Dock varchar(100),
	@ASNNo varchar(100) output
)
AS
BEGIN
	SET NOCOUNT ON;
	/*
	declare @ASNNo varchar(100)
	exec USP_GetAsnNo 6,2,'RM','WIP','ABC',@ASNNo output
	select @ASNNo
	*/
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(100)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = @OrderType+1100
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = @OrderType+1100 AND B.IsChoosed = 1
	
	SET @ASNNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @ASNNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @ASNNo = @ASNNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @ASNNo = @ASNNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @ASNNo = @ASNNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @ASNNo = @ASNNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @ASNNo = @ASNNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'OrderType')
				BEGIN
					SET @ASNNo = @ASNNo + CAST(@OrderType AS VARCHAR(10))
				END	
				ELSE IF(@CurrRefColumn = 'OrderSubType')
				BEGIN
					SET @ASNNo = @ASNNo + CAST(@OrderSubType AS VARCHAR(10))
				END			
				ELSE IF(@CurrRefColumn = 'QualityType')
				BEGIN
					SET @ASNNo = @ASNNo + CAST(@QualityType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'PartyFrom')
				BEGIN
					SET @ASNNo = @ASNNo + ISNULL(@PartyFrom,'')
				END
				ELSE IF(@CurrRefColumn = 'PartyTo')
				BEGIN
					SET @ASNNo = @ASNNo + ISNULL(@PartyTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'Dock')
				BEGIN
					SET @ASNNo = @ASNNo + ISNULL(@Dock,'')
				END					
				SET @Temp = @Temp + 1														
			END
			
		END	
	END  
	
	PRINT @ASNNo
	
	IF CHARINDEX('****',@ASNNo)>0
	BEGIN
		PRINT @ASNNo
		SET @NumCtrKey = @ASNNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,1))
				SET @CurrSeq = ISNULL(@SeqMin,1)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @ASNNo = REPLACE(@ASNNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_CON]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_CON]
(
	@Region varchar(50),
	@ConNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	/*
	declare @ConNo varchar(1000)
	exec USP_GetConNo 'aaa',@ConNo output
	select @ConNo
	*/
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1901
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1901 AND B.IsChoosed = 1
	
	SET @ConNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @ConNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @ConNo = @ConNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @ConNo = @ConNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @ConNo = @ConNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @ConNo = @ConNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @ConNo = @ConNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Region')
				BEGIN
					SET @ConNo = @ConNo + ISNULL(@Region,'')
				END
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @ConNo
	
	IF CHARINDEX('****',@ConNo)>0
	BEGIN
		PRINT @ConNo
		SET @NumCtrKey = @ConNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @ConNo = REPLACE(@ConNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_HUID]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_HUID]
(
	@LotNo varchar(50),
	@Item varchar(50),
	@Qty decimal(18,8),
	@UC decimal(18,8),
	@ManufactureParty varchar(50)
	--@HuId varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @HuId varchar(1000)
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	DECLARE @IsOdd bit
	DECLARE @Count int
	
	CREATE TABLE #HuIds(HuId varchar(1000),Cnt decimal(18,8))
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		@PreFixed = PreFixed, @YearCode = YearCode,
		@MonthCode = MonthCode,@DayCode = DayCode,
		@SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 2001
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 2001 AND B.IsChoosed = 1
	
	SET @HuId=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		--PRINT @BlockSeq
		--PRINT @CurrBlockSeq
		--PRINT @HuId
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @HuId = @HuId+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @HuId = @HuId+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @HuId = @HuId+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @HuId = @HuId+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @HuId = @HuId+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
			
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'LotNo')
				BEGIN
					SET @HuId = @HuId + ISNULL(@LotNo,'')
				END
				ELSE IF(@CurrRefColumn = 'Item')
				BEGIN
					SET @HuId = @HuId + ISNULL(@Item,'')
				END
				ELSE IF(@CurrRefColumn = 'Qty')
				BEGIN
					SET @HuId = @HuId + CAST(FLOOR(@Qty) AS VARCHAR(50))
				END
				ELSE IF(@CurrRefColumn = 'UC')
				BEGIN
					SET @HuId = @HuId + CAST(FLOOR(@UC) AS VARCHAR(50)) 
				END
				ELSE IF(@CurrRefColumn = 'ManufactureParty')
				BEGIN
					SET @HuId = @HuId + ISNULL(@ManufactureParty,'')
				END
				ELSE IF(@CurrRefColumn = 'IsOdd')
				BEGIN
					SET @HuId = @HuId + '||||'
					SET @IsOdd = 1
				END				
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @HuId
	
	IF @IsOdd=1
	BEGIN
		BEGIN TRAN
			SET @NumCtrKey = @HuId
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END		
			IF @QTY%@UC=0
			BEGIN
				SET @Count=CAST(@QTY/@UC as int)
				WHILE(@Count>0)
				BEGIN
					--PRINT @HuId
					SET @Count=@Count-1
					INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(REPLACE(@HuId,'||||','1'),'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+@Count AS VARCHAR(20)),@SeqLength)),@UC)	
					--SET @Count=@Count-1
				END
				UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+CAST(@QTY/@UC as int) WHERE Code = @NumCtrKey
			END
			ELSE
			BEGIN
				SET @Count=CAST(@QTY/@UC as int)
				WHILE(@Count>0)
				BEGIN
					--PRINT @HuId
					PRINT @Count
					SET @Count=@Count-1
					INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(REPLACE(@HuId,'||||','1'),'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+@Count AS VARCHAR(20)),@SeqLength)),@UC)	
					--SET @Count=@Count-1
				END
				INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(REPLACE(@HuId,'||||','0'),'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+CAST(@QTY/@UC as int) AS VARCHAR(20)),@SeqLength)), @QTY % @UC )	
				UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+CEILING(@QTY/@UC) WHERE Code = @NumCtrKey
				
			END
		COMMIT	
	END
	ELSE
	BEGIN
		BEGIN TRAN
			SET @NumCtrKey = @HuId
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END		
			IF @QTY%@UC=0
			BEGIN
				
				SET @Count=CAST(@QTY/@UC as int)
				WHILE(@Count>0)
				BEGIN
					PRINT @HuId
					PRINT @Count
					SET @Count=@Count-1
					INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(@HuId,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+@Count AS VARCHAR(20)),@SeqLength)),@UC)
					--SET @Count=@Count-1
				END
				UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+CAST(@QTY/@UC as int) WHERE Code = @NumCtrKey
			END
			ELSE
			BEGIN
				SET @Count=CAST(@QTY/@UC as int)
				WHILE(@Count>0)
				BEGIN
					PRINT @HuId
					PRINT @Count
					SET @Count=@Count-1
					INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(@HuId,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+@Count AS VARCHAR(20)),@SeqLength)),@UC)
					--SET @Count=@Count-1
				END
				INSERT INTO #HuIds(HuId,Cnt) values(REPLACE(@HuId,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq+CAST(@QTY/@UC as int) AS VARCHAR(20)),@SeqLength)), @QTY % @UC )	
				UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+CEILING(@QTY/@UC) WHERE Code = @NumCtrKey
				
			END
		COMMIT	
			
		--BEGIN TRAN
		--	SET @Count=CEILING(@QTY/@UC)
		--	SET @NumCtrKey = @HuId
		--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
		--	BEGIN
		--		INSERT INTO SYS_NumCtrl(Code,IntValue)
		--		VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
		--		SET @CurrSeq = ISNULL(@SeqMin,0)
		--	END
		--	ELSE
		--	BEGIN
		--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
		--	END
		--	--PRINT @HuId
		--	WHILE(@Count>0)
		--	BEGIN
		--		SET @Count=@Count-1
		--		IF @Count>1
		--		BEGIN
		--			INSERT INTO #HuIds(HuId) values(REPLACE(@HuId,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)))
		--		END
		--		ELSE
		--		BEGIN
		--			INSERT INTO #HuIds(HuId) values(REPLACE(@HuId,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)))
		--		END
		--	END
		--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+CEILING(@QTY/@UC) WHERE Code = @NumCtrKey
		--COMMIT				
	END
	
	SELECT * FROM #HuIds ORDER BY HuId
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_INS]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_INS]
(
	@Type tinyint,
	@Region varchar(50),
	@IsAtp bit,
	@InsNo varchar(100) output
)
AS
BEGIN
	SET NOCOUNT ON;
	/*
	declare @InsNo varchar(100)
	exec USP_GetInsNo 2,'RM',0,@InsNo output
	select @InsNo
	*/
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(100)
	
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1601
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1601 AND B.IsChoosed = 1
	
	SET @InsNo=@PreFixed
	print @PreFixed
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @InsNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @InsNo = @InsNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @InsNo = @InsNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @InsNo = @InsNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @InsNo = @InsNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @InsNo = @InsNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Type')
				BEGIN
					SET @InsNo = @InsNo + CAST(@Type AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'Region')
				BEGIN
					SET @InsNo = @InsNo + ISNULL(@Region,'')
				END
				ELSE IF(@CurrRefColumn = 'IsAtp')
				BEGIN
					SET @InsNo = @InsNo + CAST(@IsAtp AS VARCHAR(10))
				END
				SET @Temp = @Temp + 1														
			END
			
		END	
	END  
	
	PRINT @InsNo
	
	IF CHARINDEX('****',@InsNo)>0
	BEGIN
		PRINT @InsNo
		SET @NumCtrKey = @InsNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @InsNo = REPLACE(@InsNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_MIS]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_MIS]
(
	@Type tinyint,
	@IsScanHu bit,
	@QualityType tinyint,
	@Region varchar(50),
	@Location varchar(50),
	@MisNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	/*
	declare @p6 varchar(100)
	set @p6=NULL
	exec USP_GetMisNo @Type=0,@IsScanHu=1,@QualityType=0,@Region='RDC',@Location='RDC2',@MisNo=@p6 output
	select @p6
	
	declare @MisNo varchar(1000)
	exec USP_GetMisNo 1,0,1,'aaa','bbb',@MisNo output
	select @MisNo
	*/
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1501+@Type
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1501+@Type AND B.IsChoosed = 1
	
	SET @MisNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @MisNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @MisNo = @MisNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @MisNo = @MisNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @MisNo = @MisNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @MisNo = @MisNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @MisNo = @MisNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Type')
				BEGIN
					SET @MisNo = @MisNo + CAST(@Type AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'IsScanHu')
				BEGIN
					SET @MisNo = @MisNo + CAST(@IsScanHu AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'QualityType')
				BEGIN
					SET @MisNo = @MisNo + CAST(@QualityType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'Region')
				BEGIN
					SET @MisNo = @MisNo + ISNULL(@Region,'')
				END
				ELSE IF(@CurrRefColumn = 'Location')
				BEGIN
					SET @MisNo = @MisNo + ISNULL(@Location,'')
				END	
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @MisNo
	
	IF CHARINDEX('****',@MisNo)>0
	BEGIN
		PRINT @MisNo
		SET @NumCtrKey = @MisNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @MisNo = REPLACE(@MisNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_ORD]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_ORD]
(
	@Flow varchar(50),
	@OrderStrategy tinyint,
	@Type tinyint,
	@SubType tinyint,
	@QualityType tinyint,
	@Priority tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocTo  varchar(50),
	@LocFrom  varchar(50),
	@Dock  varchar(50),
	@IsQuick bit,
	@OrderNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = @Type+1000
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = @Type+1000 AND B.IsChoosed = 1
	
	SET @ORDERNO=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @OrderNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @OrderNo = @OrderNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @OrderNo = @OrderNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @OrderNo = @OrderNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @OrderNo = @OrderNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @OrderNo = @OrderNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'FLOW')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@Flow,'')
				END
				ELSE IF(@CurrRefColumn = 'OrderStrategy')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@OrderStrategy AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'Type')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@Type AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'SubType')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@SubType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'QualityType')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@QualityType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'Priority')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@Priority AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'PartyFrom')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@PartyFrom,'')
				END
				ELSE IF(@CurrRefColumn = 'PartyTo')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@PartyTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'LocTo')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@LocTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'LocFrom')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@LocFrom,'')
				END	
				ELSE IF(@CurrRefColumn = 'Dock')
				BEGIN
					SET @OrderNo = @OrderNo + ISNULL(@Dock,'')
				END	
				ELSE IF(@CurrRefColumn = 'IsQuick')
				BEGIN
					SET @OrderNo = @OrderNo + CAST(@IsQuick AS VARCHAR(10))
				END	
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @OrderNo
	
	IF CHARINDEX('****',@OrderNo)>0
	BEGIN
		PRINT @OrderNo
		SET @NumCtrKey = @OrderNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @OrderNo = REPLACE(@OrderNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_PIK]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_PIK]
(
	@OrderType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@Dock varchar(100),
	@PikNo varchar(100) output
)
AS
BEGIN
	SET NOCOUNT ON;
	/*
	declare @PikNo varchar(100)
	exec USP_GetPikNo 2,'RM','WIP','ABC',@PikNo output
	select @PikNo
	*/	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(100)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = @OrderType+1300
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = @OrderType+1300 AND B.IsChoosed = 1
	
	SET @PikNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @PikNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @PikNo = @PikNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @PikNo = @PikNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @PikNo = @PikNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @PikNo = @PikNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @PikNo = @PikNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'OrderType')
				BEGIN
					SET @PikNo = @PikNo + CAST(@OrderType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'PartyFrom')
				BEGIN
					SET @PikNo = @PikNo + ISNULL(@PartyFrom,'')
				END
				ELSE IF(@CurrRefColumn = 'PartyTo')
				BEGIN
					SET @PikNo = @PikNo + ISNULL(@PartyTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'Dock')
				BEGIN
					SET @PikNo = @PikNo + ISNULL(@Dock,'')
				END					
				SET @Temp = @Temp + 1														
			END
			
		END	
	END  
	
	PRINT @PikNo
	
	IF CHARINDEX('****',@PikNo)>0
	BEGIN
		PRINT @PikNo
		SET @NumCtrKey = @PikNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @PikNo = REPLACE(@PikNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_REC]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_REC]
(
	@OrderType tinyint,
	@OrderSubType tinyint,
	@QualityType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@Dock  varchar(50),
	@RecNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = @OrderType+1200
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = @OrderType+1200 AND B.IsChoosed = 1
	
	SET @RecNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @RecNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @RecNo = @RecNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @RecNo = @RecNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @RecNo = @RecNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @RecNo = @RecNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @RecNo = @RecNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'OrderType')
				BEGIN
					SET @RecNo = @RecNo + CAST(@OrderType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'OrderSubType')
				BEGIN
					SET @RecNo = @RecNo + CAST(@OrderSubType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'QualityType')
				BEGIN
					SET @RecNo = @RecNo + CAST(@QualityType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'PartyFrom')
				BEGIN
					SET @RecNo = @RecNo + ISNULL(@PartyFrom,'')
				END
				ELSE IF(@CurrRefColumn = 'PartyTo')
				BEGIN
					SET @RecNo = @RecNo + ISNULL(@PartyTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'Dock')
				BEGIN
					SET @RecNo = @RecNo + ISNULL(@Dock,'')
				END	
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @RecNo
	
	IF CHARINDEX('****',@RecNo)>0
	BEGIN
		PRINT @RecNo
		SET @NumCtrKey = @RecNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @RecNo = REPLACE(@RecNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_REJ]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_REJ]
(
	@HandleResult tinyint,
	@Region varchar(50),
	@RejNo varchar(100) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(100)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1611
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1611 AND B.IsChoosed = 1
	
	SET @RejNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @RejNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @RejNo = @RejNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @RejNo = @RejNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @RejNo = @RejNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @RejNo = @RejNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @RejNo = @RejNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'HandleResult')
				BEGIN
					SET @RejNo = @RejNo + CAST(@HandleResult AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'Region')
				BEGIN
					SET @RejNo = @RejNo + ISNULL(@Region,'')
				END
				SET @Temp = @Temp + 1														
			END
			
		END	
	END  
	
	PRINT @RejNo
	
	IF CHARINDEX('****',@RejNo)>0
	BEGIN
		PRINT @RejNo
		SET @NumCtrKey = @RejNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @RejNo = REPLACE(@RejNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_SEQ]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_SEQ]
(
	@Flow varchar(50),
	@OrderType tinyint,
	@QualityType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocTo  varchar(50),
	@LocFrom  varchar(50),
	@Dock  varchar(50),
	@SeqNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1801
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1801 AND B.IsChoosed = 1
	
	SET @SeqNO=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @SeqNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @SeqNo = @SeqNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @SeqNo = @SeqNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @SeqNo = @SeqNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @SeqNo = @SeqNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @SeqNo = @SeqNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Flow')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@Flow,'')
				END
				ELSE IF(@CurrRefColumn = 'OrderType')
				BEGIN
					SET @SeqNo = @SeqNo + CAST(@OrderType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'QualityType')
				BEGIN
					SET @SeqNo = @SeqNo + CAST(@QualityType AS VARCHAR(10))
				END
				ELSE IF(@CurrRefColumn = 'PartyFrom')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@PartyFrom,'')
				END
				ELSE IF(@CurrRefColumn = 'PartyTo')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@PartyTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'LocTo')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@LocTo,'')
				END	
				ELSE IF(@CurrRefColumn = 'LocFrom')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@LocFrom,'')
				END	
				ELSE IF(@CurrRefColumn = 'Dock')
				BEGIN
					SET @SeqNo = @SeqNo + ISNULL(@Dock,'')
				END	
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @SeqNo
	
	IF CHARINDEX('****',@SeqNo)>0
	BEGIN
		PRINT @SeqNo
		SET @NumCtrKey = @SeqNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @SeqNo = REPLACE(@SeqNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_STT]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_STT]
(
	@Type tinyint,
	@Location varchar(50),
	@IsScanHu bit,
	@STTNo varchar(100) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(100)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 1701
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 1701 AND B.IsChoosed = 1
	
	SET @STTNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @STTNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @STTNo = @STTNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @STTNo = @STTNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @STTNo = @STTNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @STTNo = @STTNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @STTNo = @STTNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Type')
				BEGIN
					SET @STTNo = @STTNo + CAST(@Type AS VARCHAR(10))
				END				
				ELSE IF(@CurrRefColumn = 'Location')
				BEGIN
					SET @STTNo = @STTNo + ISNULL(@Location,'')
				END
				ELSE IF(@CurrRefColumn = 'IsScanHu')
				BEGIN
					SET @STTNo = @STTNo + CAST(@IsScanHu AS VARCHAR(10))
				END
				SET @Temp = @Temp + 1														
			END
			
		END	
	END  
	
	PRINT @STTNo
	
	IF CHARINDEX('****',@STTNo)>0
	BEGIN
		PRINT @STTNo
		SET @NumCtrKey = @STTNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @STTNo = REPLACE(@STTNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_GetDocNo_VEH]...';


GO
CREATE PROCEDURE [dbo].[USP_GetDocNo_VEH]
(
	@Plant varchar(50),
	@Status tinyint,
	@VehNo varchar(1000) output
)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Code varchar(50)
	DECLARE @BlockSeq varchar(10)
	DECLARE @PreFixed char(2)
	DECLARE @YearCode varchar(6)
	DECLARE @MonthCode varchar(4)
	DECLARE @DayCode varchar(4)
	DECLARE @SeqLength tinyint
	DECLARE @SeqMin int
	DECLARE @NumCtrKey varchar(1000)
	
	SELECT @BlockSeq = SUBSTRING(BlockSeq,2,LEN(BlockSeq)-1),@Code = Code,
		 @PreFixed = PreFixed, @YearCode = YearCode,
		 @MonthCode = MonthCode,@DayCode = DayCode,
		 @SeqLength = SeqLength,@SeqMin = SeqMin
	FROM dbo.SYS_SNRule 
	WHERE Code = 2011
	
	DECLARE @CurrSeq int
	DECLARE @CurrBlockSeq char(1)
	DECLARE @CurrRefColumn varchar(50)
	DECLARE @Temp int
	SET @Temp = 1
	DECLARE @MaxNO int
	DECLARE @CurrentDate datetime	
	SET @CurrentDate = GETDATE()
	
	SELECT ROWNO=ROW_NUMBER() OVER (ORDER BY B.FieldSeq),B.* INTO #TEMP FROM dbo.SYS_SNRule A
	LEFT JOIN SYS_SNRuleExt B
		ON A.CODE=B.CODE
	WHERE A.Code = 2011 AND B.IsChoosed = 1
	
	SET @VehNo=@PreFixed	
	WHILE(@BlockSeq>0)
	BEGIN
		SET @CurrBlockSeq = SUBSTRING(@BlockSeq,1,1)
		PRINT @BlockSeq
		PRINT @CurrBlockSeq
		PRINT @VehNo
		SET @BlockSeq = SUBSTRING(@BlockSeq,2,LEN(@BlockSeq)-1)
		
		IF @CurrBlockSeq = 2
		BEGIN
			SET @VehNo = @VehNo+dbo.FormatDate(@CurrentDate,@YearCode)
		END
		ELSE IF @CurrBlockSeq = 3
		BEGIN
			SET @VehNo = @VehNo+dbo.FormatDate(@CurrentDate,@MonthCode)
		END
		ELSE IF @CurrBlockSeq = 4
		BEGIN
			SET @VehNo = @VehNo+dbo.FormatDate(@CurrentDate,@DayCode)
		END
		ELSE IF @CurrBlockSeq = 5
		BEGIN
			--We will use '****' to replace the Seqence number for the number control key
			SET @VehNo = @VehNo+'****'
			--BEGIN TRAN
			--	IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @Code)
			--	BEGIN
			--		INSERT INTO SYS_NumCtrl(Code,IntValue)
			--		VALUES(@Code,@SeqMin)
			--		SET @CurrSeq = @SeqMin
			--	END
			--	ELSE
			--	BEGIN
			--		SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @Code
			--	END
			--	UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @Code
			--COMMIT		
			--SET @VehNo = @VehNo+RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength)
		END	
		ELSE IF @CurrBlockSeq = 6
		BEGIN
			SELECT @MaxNO = MAX(ROWNO) FROM #Temp
			WHILE(@Temp<=@MaxNO)
			BEGIN
				SELECT @CurrRefColumn = Field FROM #Temp WHERE ROWNO = @Temp
				IF(@CurrRefColumn = 'Plant')
				BEGIN
					SET @VehNo = @VehNo + ISNULL(@Plant,'')
				END
				ELSE IF(@CurrRefColumn = 'Status')
				BEGIN
					SET @VehNo = @VehNo + CAST(@Status AS VARCHAR(10))
				END
				SET @Temp = @Temp + 1														
			END
		END	
	END  
	
	PRINT @VehNo
	
	IF CHARINDEX('****',@VehNo)>0
	BEGIN
		PRINT @VehNo
		SET @NumCtrKey = @VehNo
		BEGIN TRAN
			IF NOT EXISTS(SELECT * FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey)
			BEGIN
				INSERT INTO SYS_NumCtrl(Code,IntValue)
				VALUES(@NumCtrKey,ISNULL(@SeqMin,0))
				SET @CurrSeq = ISNULL(@SeqMin,0)
			END
			ELSE
			BEGIN
				SELECT @CurrSeq = IntValue FROM dbo.SYS_NumCtrl WHERE Code = @NumCtrKey
			END
			UPDATE dbo.SYS_NumCtrl SET IntValue = IntValue+1 WHERE Code = @NumCtrKey
		COMMIT		
		SET @VehNo = REPLACE(@VehNo,'****',RIGHT('00000000000000000000'+CAST(@CurrSeq AS VARCHAR(20)),@SeqLength))		
	END
	
END
GO
PRINT N'Creating [dbo].[USP_LE_GenJITOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_GenJITOrder]
@Flow VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_GenKBOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_GenKBOrder]
@Flow VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_GenOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_GenOrder]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_GenOrder4VanProdLine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_GenOrder4VanProdLine]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_GenSequenceOrder]...';


GO
CREATE PROCEDURE [dbo].[USP_LE_GenSequenceOrder]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_LE_ManualGenOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_ManualGenOrder]
@ProdOrderNo VARCHAR (50), @CreateUserId INT, @CreateUserNm VARCHAR (50)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_RunLeanEngine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_RunLeanEngine]
@CreateUserId INT, @CreateUserNm VARCHAR (100)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_SnapshotFlowDet4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_LE_SnapshotFlowDet4LeanEngine] --WITH ENCRYPTION
AS
BEGIN
	SET NOCOUNT ON
	declare @DateTimeNow datetime = GetDate()
	declare @Msg nvarchar(Max)
	declare @trancount int
	
	--记录日志
	set @Msg = N'获取路线明细开始'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)

	CREATE TABLE #tempFlowDet (
		Id int identity(1, 1),
		Flow varchar(50) NULL,
		FlowDetId int NULL,
		Item varchar(50) NOT NULL,
		Uom varchar(5) NULL,
		UC decimal(18, 8) NULL,
		ManufactureParty varchar(50) NULL,
		LocFrom varchar(50) NULL,
		LocTo varchar(50) NOT NULL,
		ExtraDmdSource varchar(256) NULL,
		MrpTotal decimal(18, 8) NULL,
		MrpTotalAdj decimal(18, 8) NULL,
		MrpWeight decimal(18, 8) NULL,
		IsRefFlow bit NULL,
		SafeStock decimal(18, 8),
		MaxStock decimal(18, 8),
		MinLotSize decimal(18, 8),
		RoundUpOpt tinyint,
		Strategy tinyint
	)
	
	CREATE NONCLUSTERED INDEX IX_TempFlowDet  ON #tempFlowDet 
	(
		Item asc,
		LocTo asc
	)
	
	create table #tempMultiSupplierGroup
	(
		RowId int identity(1, 1),
		Item varchar(50),
		LocTo varchar(50),
	)
	
	create table #tempMultiSupplierItem
	(
		RowId int identity(1, 1),
		FlowDetRowId int,
		Flow varchar(50),
		Item varchar(50), 
		LocTo varchar(50),
		MSGRowId int,
		MrpTotal decimal(18, 8),
		MrpTotalAdj decimal(18, 8),
		MrpWeight int,
		TotalQty decimal(18, 8),
		TotalWeight decimal(18, 8)
	)
	
	CREATE NONCLUSTERED INDEX IX_TempMultiSupplierItem  ON #tempMultiSupplierItem 
	(
		Item asc,
		LocTo asc
	)
	
	create table #tempSortedMultiSupplierItem
	(
		GID int, 
		FlowDetRowId int,
		Flow varchar(50)
	)
	
	create table #tempOrderBom
	(
		Item varchar(50),
		Region varchar(50),
		Location varchar(50),
		IsMatch bit,
	)
	
	create table #tempPurchase
	(
		Item varchar(50),
		Region varchar(50),
		Location varchar(50)
	)
	
	create table #tempTransfer
	(
		Item varchar(50),
		PartyFrom varchar(50),
		PartyTo varchar(50),
		LocFrom varchar(50),
		LocTo varchar(50)
	)
	
	Create table #tempExtraDmdSource
	(
		RowId int identity(1, 1),
		FlowDetId int,
		ExtraDmdSource varchar(256)
	)
	
	--获取路线
	truncate table LE_FlowMstrSnapShot
	insert into LE_FlowMstrSnapShot(Flow, [Type], Strategy, PartyFrom, PartyTo, LocFrom, LocTo, Dock, ExtraDmdSource)
	select mstr.Code as Flow, mstr.[Type], stra.Strategy, mstr.PartyFrom, mstr.PartyTo, mstr.LocFrom, mstr.LocTo, mstr.Dock, mstr.ExtraDmdSource
	from SCM_FlowMstr as mstr 
	inner join SCM_FlowStrategy as stra on mstr.Code = stra.Flow
	where mstr.IsActive = 1 and mstr.IsAutoCreate = 1 and mstr.[Type] in (1, 2, 5, 6, 7, 8) and stra.Strategy in (2, 3)
	
	-------------------↓计算每条路线的需求时间段和发单时间-----------------------
	declare @FlowRowId int
	declare @MaxFlowRowId int
	
	select @FlowRowId = MIN(Id), @MaxFlowRowId = MAX(Id) from LE_FlowMstrSnapShot
	while (@FlowRowId <= @MaxFlowRowId)
	begin
		declare @Flow varchar(50) = null
		declare @FlowType tinyint = null
		declare @FlowStrategy tinyint = null
		declare @PartyFrom varchar(50) = null
		declare @PartyTo varchar(50) = null
		declare @LocFrom varchar(50) = null
		declare @LocTo varchar(50) = null
		declare @ExtraDmdSource varchar(50) = null
		declare @WinTimeType tinyint = null
		declare @WinTimeDiff decimal(18, 8) = null  --秒
		declare @LeadTime decimal(18, 8) = null  --秒
		declare @EMLeadTime decimal(18, 8) = null  --秒
		declare @WindowTime datetime = null
		declare @WindowTime2 datetime = null
		
		
		declare @EMWindowTime datetime = null
		declare @ReqTimeFrom datetime = null
		declare @ReqTimeTo datetime = null
		declare @OrderTime datetime = null
		
		select @Flow = Flow, @FlowType = [Type], 
		@PartyFrom = PartyFrom, @PartyTo = PartyTo,
		@LocFrom = LocFrom, @LocTo = LocTo, @ExtraDmdSource = ExtraDmdSource
		from LE_FlowMstrSnapShot where Id = @FlowRowId
		
		--记录日志
		set @Msg = N'计算路线需求时间段和发单时间开始'
		insert into LOG_RunLeanEngine(Flow, Lvl, Msg) values(@Flow, 0, @Msg)
		
		set @trancount = @@trancount
		begin try
			if @trancount = 0
			begin
				begin tran
			end		
		
			select @FlowStrategy = Strategy, @WinTimeType = WinTimeType, 
			@WinTimeDiff = WinTimeDiff * 60 * 60, --小时转为秒
			@LeadTime = -LeadTime * 60 * 60, --小时转为秒
			@EMLeadTime = EMLeadTime * 60 * 60,	   --小时转为秒
			@WindowTime = NextWinTime
			from SCM_FlowStrategy with(UPDLOCK) where Flow = @Flow

			if (@WindowTime is null or @WindowTime < @DateTimeNow)
			begin  --没有设置下次窗口时间或者下次窗口开始时间小于当前时间重新查找下次窗口开始时间
				if @WindowTime is null
				begin
					set @Msg = N'窗口时间没有设置，重新计算窗口时间'
					insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Msg) values(@Flow, 1, 10, @Msg)
				end
				else
				begin
					set @Msg = N'窗口时间' + CONVERT(varchar, @WindowTime, 120) + N'小于当前时间，重新计算窗口时间'
					insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Msg) values(@Flow, 1, 11, @Msg)
				end
				
				exec USP_Busi_GetNextWindowTime @Flow, @WindowTime, @WindowTime output
				update SCM_FlowStrategy set NextWinTime = @WindowTime where Flow = @Flow
			end
			
			--计算本次窗口结束时间
			exec USP_Busi_GetNextWindowTime @Flow, @WindowTime, @WindowTime2 output
			
			--计算紧急窗口时间
			exec USP_Busi_AddWorkingDate @DateTimeNow, @EMLeadTime, null, @PartyTo, @EMWindowTime output
			if @EMWindowTime > @WindowTime
			begin
				set @EMWindowTime = @WindowTime
			end
		
			--计算发单时间和紧急发单时间
			exec USP_Busi_SubtractWorkingDate @WindowTime, @LeadTime, null, @PartyTo, @OrderTime output
			
			--计算下次需求开始时间，根据进料提前期计算实际需求开始时间
			exec USP_Busi_AddWorkingDate @WindowTime, @WinTimeDiff, null, @PartyTo, @ReqTimeFrom output
		
			--计算下次需求结束时间，根据进料提前期计算实际需求开始时间
			exec USP_Busi_AddWorkingDate @WindowTime2, @WinTimeDiff, null, @PartyTo, @ReqTimeTo output
			
			--记录日志
			set @Msg = N'路线需求时间为' + CONVERT(varchar, @ReqTimeFrom, 120) + N'~' + CONVERT(varchar, @ReqTimeTo, 120)
				+ '，发单时间为' + CONVERT(varchar, @OrderTime, 120)
				+ '，窗口时间为' + CONVERT(varchar, @WindowTime, 120)
				+ '，紧急窗口时间为' + CONVERT(varchar, @EMWindowTime, 120)
			insert into LOG_RunLeanEngine(Flow, Lvl, Msg) values(@Flow, 0, @Msg)

			--更新路线
			update LE_FlowMstrSnapShot set OrderTime = @OrderTime, ReqTimeFrom = @ReqTimeFrom, ReqTimeTo = @ReqTimeTo, 
			WindowTime = @WindowTime, EMWindowTime = @EMWindowTime
			where Id = @FlowRowId
			
			--获取路线明细
			insert into #tempFlowDet(Flow, FlowDetId, Item, Uom, UC, ManufactureParty,
			LocFrom, LocTo,
			ExtraDmdSource,
			MrpTotal, MrpTotalAdj, MrpWeight, IsRefFlow,
			SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy)
			select @Flow, Id as FlowDetId, Item, Uom, UC, ManufactureParty, 
			ISNULL(LocFrom, @LocFrom) as LocFrom, ISNULL(LocTo, @LocTo) as LocTo,
			ISNULL(ExtraDmdSource, @ExtraDmdSource) as ExtraDmdSource,
			ISNULL(MrpTotal, 0), ISNULL(MrpTotalAdj, 0), ISNULL(MrpWeight, 0) as MrpWeight, 0,
			ISNULL(SafeStock, 0), ISNULL(MaxStock, 0), ISNULL(MinLotSize, 0), RoundUpOpt, @FlowStrategy
			from SCM_FlowDet
			where Flow = @Flow and (StartDate is null or (StartDate >= @DateTimeNow))
			and (EndDate is null or (EndDate <= @DateTimeNow))
			and IsAutoCreate = 1
			
			if @OrderTime <= @DateTimeNow
			begin
				--记录日志
				set @Msg = N'路线发单时间' + CONVERT(varchar, @OrderTime, 120) + '小于当前时间更新路线下次窗口时间为' + CONVERT(varchar, @WindowTime2, 120)
				insert into LOG_RunLeanEngine(Flow, Lvl, Msg) values(@Flow, 0, @Msg)
				
				--更新下次窗口时间
				update SCM_FlowStrategy set NextWinTime = @WindowTime2 where Flow = @Flow
			end
			
			if @trancount = 0 
			begin  
				commit
			end
		end try
		begin catch
			if @trancount = 0
			begin
				rollback
			end 
		
			--记录日志
			set @Msg = N'计算路线需求时间段和发单时间出现异常，异常信息：' + Error_Message()
			insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Msg) values(@Flow, 2, 12, @Msg)
		end catch
		
		--记录日志
		set @Msg = N'计算路线需求时间段和发单时间结束'
		insert into LOG_RunLeanEngine(Flow, Lvl, Msg) values(@Flow, 0, @Msg)
		
		set @FlowRowId = @FlowRowId + 1
	end
	-------------------↑计算每条路线的需求时间段和发单时间-----------------------
	
	
	
	-------------------↓计算引用路线需求时间段和发单时间-----------------------
	--记录日志
	set @Msg = N'计算引用路线需求时间段和发单时间开始'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	
	insert into #tempFlowDet(Flow, FlowDetId, Item, UOM, UC, ManufactureParty,
	LocFrom, LocTo,
	ExtraDmdSource,
	IsRefFlow, MrpTotal, MrpTotalAdj, MrpWeight,
	SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy)
	select mstr.Code as Flow, fdet.FlowDetId, fdet.Item, fdet.UOM, fdet.UC, fdet.ManufactureParty, 
	mstr.LocFrom, mstr.LocTo,
	mstr.ExtraDmdSource,
	1, 0, 0, 0,
	ISNULL(fdet.SafeStock, 0), ISNULL(fdet.MaxStock, 0), ISNULL(fdet.MinLotSize, 0), fdet.RoundUpOpt, stra.Strategy
	from SCM_FlowMstr as mstr 
	inner join SCM_FlowStrategy as stra on mstr.Code = stra.Flow
	inner join LE_FlowMstrSnapShot as fmstr on mstr.Code = fmstr.Flow
	inner join #tempFlowDet as fdet on mstr.RefFlow = fdet.Flow
	where mstr.IsActive = 1 and mstr.IsAutoCreate = 1
	and stra.Strategy in (2, 3)
	
	--记录日志
	set @Msg = N'计算引用路线需求时间段和发单时间结束'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	-------------------↑计算引用路线的需求时间段和发单时间-----------------------
	
	
	
	-------------------↓整车物料的消耗库位和采购入库地点匹配，添加缺失的路线-----------------------
	--记录日志
	set @Msg = N'整车物料消耗库位和采购入库地点匹配，添加缺失的移库路线开始'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	
	--汇总整车物料需求（物料+区域+库位）
	insert into #tempOrderBom(Item, Location, IsMatch)
	select Item, Location, 0 from LE_OrderBomCPTimeSnapshot group by Item, Location
	update bom set Region = loc.Region
	from #tempOrderBom as bom inner join MD_Location as loc on bom.Location = loc.Code
	
	--汇总采购入库地点（物料+区域+库位）
	insert into #tempPurchase(Item, Region, Location)
	select det.Item, mstr.PartyTo as Region, det.LocTo as Location 
	from SCM_FlowDet as det inner join SCM_FlowMstr as mstr 
	on det.Flow = mstr.Code
	where mstr.[Type] in (1, 5, 6, 8) and mstr.IsActive = 1
	
	--汇总移库路线
	insert into #tempTransfer(Item, PartyFrom, PartyTo, LocFrom, LocTo)
	select det.Item, mstr.PartyFrom, mstr.PartyTo, det.LocFrom, det.LocTo 
	from SCM_FlowDet as det inner join SCM_FlowMstr as mstr 
	on det.Flow = mstr.Code
	where mstr.[Type] in (2, 7) and mstr.IsActive = 1
	
	--第一次匹配，消耗库位和采购入库地点相同
	update bom set IsMatch = 1
	from #tempOrderBom as bom
	inner join #tempPurchase as pur on bom.Item = pur.Item and bom.Location = pur.Location
	
	--第二次匹配，消耗库位和采购入库地点通过移库路线关联
	if exists (select top 1 * from #tempOrderBom where IsMatch = 0)
	begin
		update bom set IsMatch = 1
		from #tempOrderBom as bom
		inner join #tempTransfer as tra on bom.Item = tra.Item and bom.Location = tra.LocTo
		inner join #tempPurchase as pur on tra.Item = pur.Item and tra.LocFrom = pur.Location
		where bom.IsMatch = 0
	end
	
	-------------------↓第一次添加零件从采购入库地点到整车物料消耗库位的移库路线,区域相同-----------------------
	if exists (select top 1 * from #tempOrderBom where IsMatch = 0)
	begin
		--记录日志
		insert into LOG_RunLeanEngine(Lvl, ErrorId, Item, LocFrom, LocTo, Msg)
		select 1, 13, bom.Item, pur.Location, bom.Location, N'添加零件' + bom.Item + N'从采购入库地点' + pur.Location + N'到整车物料消耗库位' + bom.Location + N'的移库路线'
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item and bom.Region = pur.Region
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
		
		insert into #tempFlowDet(Flow, FlowDetId, Item, UOM, UC, ManufactureParty,
		LocFrom, LocTo,
		ExtraDmdSource,
		IsRefFlow, MrpTotal, MrpTotalAdj, MrpWeight,
		SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy)
		select mstr.Flow, 0, bom.Item, item.UOM, item.UC, null,  
		pur.Location, bom.Location,
		null,
		0, 0, 0, 0,
		0, 0, 0, 1, 3
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item and bom.Region = pur.Region
		inner join MD_Item as item on bom.Item = item.Code
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
		
		update bom set IsMatch = 1
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item and bom.Region = pur.Region
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
	end
	-------------------↑第一次添加零件从采购入库地点到整车物料消耗库位的移库路线,区域相同-----------------------
	
	-------------------↓第二次添加零件从采购入库地点到整车物料消耗库位的移库路线，区域不相同-----------------------
	if exists (select top 1 * from #tempOrderBom where IsMatch = 0)
	begin
		--记录日志
		insert into LOG_RunLeanEngine(Lvl, ErrorId, Item, LocFrom, LocTo, Msg)
		select 1, 14, bom.Item, pur.Location, bom.Location, N'添加零件' + bom.Item + N'从采购入库地点' + pur.Location + N'到整车物料消耗库位' + bom.Location + N'的移库路线'
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
		
		insert into #tempFlowDet(Flow, FlowDetId, Item, UOM, UC, ManufactureParty,
		LocFrom, LocTo,
		ExtraDmdSource,
		IsRefFlow, MrpTotal, MrpTotalAdj, MrpWeight,
		SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy)
		select mstr.Flow, 0, bom.Item, item.UOM, item.UC, null,  
		pur.Location, bom.Location,
		null,
		0, 0, 0, 0,
		0, 0, 0, 1, 3
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item
		inner join MD_Item as item on bom.Item = item.Code
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
		
		update bom set IsMatch = 1
		from #tempOrderBom as bom
		inner join #tempPurchase as pur on bom.Item = pur.Item
		inner join LE_FlowMstrSnapShot as mstr on mstr.PartyFrom = pur.Region and mstr.PartyTo = bom.Region
		where bom.IsMatch = 0
	end
	-------------------↑第二次添加零件从采购入库地点到整车物料消耗库位的移库路线，区域不相同-----------------------
	
	-------------------↓没有找到采购入库地点-----------------------
	if exists (select top 1 * from #tempOrderBom where IsMatch = 0)
	begin
		--记录日志
		insert into LOG_RunLeanEngine(Lvl, ErrorId, Item, LocTo, Msg)
		select 1, 15, Item, Location, N'零件' + Item + N'整车物料消耗库位' + Location + N'没有找到采购入库地点'
		from #tempOrderBom where IsMatch = 0
	end
	-------------------↑没有找到采购入库地点-----------------------
	
	--记录日志
	set @Msg = N'整车物料消耗库位和采购入库地点匹配，添加缺失的移库路线结束'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	-------------------↑整车物料的消耗库位和采购入库地点匹配，添加缺失的路线-----------------------
	
	
	
	-------------------↓多供应商供货的选取供应商-----------------------
	--记录日志
	set @Msg = N'选取零件和目的库位相同的路线明细开始'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	
	-------------------↓删除零件、目的库位和JIT路线相同的看板路线-----------------------
	--JIT供货的优先级大于看板供货
	--记录日志
	insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Item, LocTo, Msg)
	select det2.Flow, 1, 16, det2.Item, det2.LocTo, N'删除零件' + det2.Item + N'目的库位' + det2.LocTo + N'和JIT路线相同的看板路线' 
	from #tempFlowDet as det2
	inner join LE_FlowMstrSnapShot as mstr2 on det2.Flow = mstr2.Flow
	inner join (select det.Item, det.LocTo 
				from #tempFlowDet as det 
				inner join LE_FlowMstrSnapShot as mstr on det.Flow = mstr.Flow
				where mstr.Strategy = 3 group by det.Item, det.LocTo) as det3
	on det2.Item = det3.Item and det2.LocTo = det3.LocTo
	where mstr2.Strategy = 2
	
	delete det2 
	from #tempFlowDet as det2
	inner join LE_FlowMstrSnapShot as mstr2 on det2.Flow = mstr2.Flow
	inner join (select det.Item, det.LocTo 
				from #tempFlowDet as det 
				inner join LE_FlowMstrSnapShot as mstr on det.Flow = mstr.Flow
				where mstr.Strategy = 3 group by det.Item, det.LocTo) as det3
	on det2.Item = det3.Item and det2.LocTo = det3.LocTo
	where mstr2.Strategy = 2
	-------------------↑删除零件、目的库位和JIT路线相同的看板路线-----------------------
	
	-------------------↓按零件和目的库位分组-----------------------
	truncate table #tempMultiSupplierGroup
	insert into #tempMultiSupplierGroup(Item, LocTo)
	select Item, LocTo from #tempFlowDet
	where LocTo is not null
	group by Item, LocTo having COUNT(*) > 1 
	
	truncate table #tempMultiSupplierItem
	insert into #tempMultiSupplierItem(FlowDetRowId, Flow, Item, LocTo, MSGRowId, MrpTotal, MrpTotalAdj, MrpWeight)
	select det.Id, det.Flow, det.Item, det.LocTo, msg.RowId, det.MrpTotal, det.MrpTotalAdj, det.MrpWeight 
	from #tempFlowDet as det
	inner join #tempMultiSupplierGroup as msg on det.Item = msg.Item and det.LocTo = msg.LocTo
	-------------------↑按零件和目的库位分组-----------------------
	
	-------------------↓零件和目的库位相同的路线都没有设置供货比例，按相同比例平均分配供货-----------------------
	--记录日志
	insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Item, LocTo, Msg)
	select Flow, 1, 17, Item, LocTo, N'零件为' + Item + N'目的库位为' + LocTo + N'的路线都没有设置供货比例，按相同比例平均分配供货' 
	from #tempMultiSupplierItem where MSGRowId in (select MSGRowId from #tempMultiSupplierItem group by MSGRowId having SUM(MrpWeight) = 0)
	
	update #tempMultiSupplierItem set MrpWeight = 50
	where MSGRowId in (select MSGRowId from #tempMultiSupplierItem group by MSGRowId having SUM(MrpWeight) = 0)
	-------------------↑零件和目的库位相同的路线都没有设置供货比例，按相同比例平均分配供货-----------------------
	
	-------------------↓零件和目的库位相同的路线没有设置供货比例，忽略这些路线明细-----------------------
	insert into LOG_RunLeanEngine(Flow, Lvl, ErrorId, Item, LocTo, Msg)
	select Flow, 1, 18, Item, LocTo, N'零件为' + Item + N'目的库位为' + LocTo + N'的路线没有设置供货比例，忽略该条路线明细'
	from #tempMultiSupplierItem where MSGRowId in (select MSGRowId from #tempMultiSupplierItem where MrpWeight = 0)
	
	delete #tempFlowDet where Id in (select FlowDetRowId from #tempMultiSupplierItem where MrpWeight = 0)
	delete #tempMultiSupplierItem where FlowDetRowId in (select FlowDetRowId from #tempMultiSupplierItem where MrpWeight = 0)
	-------------------↑零件和目的库位相同的路线没有设置供货比例，忽略这些路线明细-----------------------
	
	-------------------↓按零件和目的库位汇总供货总量和比例总量-----------------------
	update msi set TotalQty = msg.TotalQty, TotalWeight = msg.TotalWeight
	from #tempMultiSupplierItem as msi inner join 
		(select Item, LocTo, SUM(MrpTotal + MrpTotalAdj) as TotalQty, SUM(MrpWeight) as TotalWeight 
		from #tempMultiSupplierItem group by Item, LocTo) as msg on msg.Item = msi.Item and msg.LocTo = msi.LocTo
	-------------------↑按零件和目的库位汇总供货总量和比例总量-----------------------
	
	-------------------↓所有路线都没有供过货，取比例最大的一条路线明细供货-----------------------
	truncate table #tempSortedMultiSupplierItem
	insert into #tempSortedMultiSupplierItem(GID, FlowDetRowId, Flow)
	select ROW_NUMBER() over(partition by MSGRowId order by MRPWeight) as GID, FlowDetRowId, Flow
	from #tempMultiSupplierItem where TotalQty = 0
	
	--记录日志
	insert into LOG_RunLeanEngine(Flow, Lvl, Msg)
	select Flow, 0, N'所有路线都没有供过货，取比例最大的一条路线明细供货' from #tempSortedMultiSupplierItem where GID = 1
	
	delete #tempFlowDet where Id in (select FlowDetRowId from #tempSortedMultiSupplierItem where GID <> 1)
	delete #tempMultiSupplierItem where FlowDetRowId in (select FlowDetRowId from #tempSortedMultiSupplierItem where GID <> 1)
	-------------------↑所有路线都没有供过货，取比例最大的一条路线明细供货-----------------------
	
	-------------------↓选取供货比率最小的路线明细供货-----------------------
	truncate table #tempSortedMultiSupplierItem
	insert into #tempSortedMultiSupplierItem(GID, FlowDetRowId, Flow)
	select ROW_NUMBER() over(partition by MSGRowId order by (MrpWeight / TotalWeight) / ((MrpTotal + MrpTotalAdj) / TotalQty), MrpWeight) as GID, FlowDetRowId, Flow
	from #tempMultiSupplierItem where TotalQty > 0
	
	--记录日志
	insert into LOG_RunLeanEngine(Flow, Lvl, Msg)
	select Flow, 0, N'选取供货比率最小的路线明细供货' from #tempSortedMultiSupplierItem where GID = 1
	
	delete #tempFlowDet where Id in (select FlowDetRowId from #tempSortedMultiSupplierItem where GID <> 1)
	delete #tempMultiSupplierItem where FlowDetRowId in (select FlowDetRowId from #tempSortedMultiSupplierItem where GID <> 1)
	-------------------↑选取供货比率最小的路线明细供货-----------------------
	
	drop table #tempTransfer
	drop table #tempPurchase
	
	set @Msg = N'选取零件和目的库位相同的路线明细结束'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
	-------------------↑多供应商供货的选取供应商-----------------------
	
	
	
	-------------------↓计算其它需求源-----------------------
	insert into #tempExtraDmdSource(FlowDetId, ExtraDmdSource)
	select FlowDetId, ExtraDmdSource from #tempFlowDet where ExtraDmdSource is not null and ExtraDmdSource <>  ''
	
	declare @SplitSymbol1 char(1) = ','
	declare @SplitSymbol2 char(1) = '|'
	
	declare @FlowDetId int
	declare @FlowDetRowId int
	declare @MaxFlowDetRowId int

	select @FlowDetRowId = MIN(RowId), @MaxFlowDetRowId = MAX(RowId) from #tempExtraDmdSource
	while (@FlowDetRowId <= @MaxFlowDetRowId)
	begin
		select @FlowDetId = FlowDetId, @ExtraDmdSource = ExtraDmdSource from #tempFlowDet where Id = @FlowDetRowId
		
		if ISNULL(@ExtraDmdSource, '') <> ''
		begin
			if (charindex(@SplitSymbol1, @ExtraDmdSource) <> 0)
				begin
				--循环其它需求源插入缓存表中
				while(charindex(@SplitSymbol1, @ExtraDmdSource) <> 0)
				begin
					insert LE_FlowDetExtraDmdSource(FlowDetId, Location) values (@FlowDetId, substring(@ExtraDmdSource, 1, charindex(@SplitSymbol1, @ExtraDmdSource) - 1))
					set @ExtraDmdSource = stuff(@ExtraDmdSource, 1, charindex(@SplitSymbol1, @ExtraDmdSource), ' ')
				end
			end
			else if (charindex(@SplitSymbol2, @ExtraDmdSource) <> 0)
			begin
				--循环其它需求源插入缓存表中
				while(charindex(@SplitSymbol2, @ExtraDmdSource) <> 0)
				begin
					insert LE_FlowDetExtraDmdSource(FlowDetId, Location) values (@FlowDetId, substring(@ExtraDmdSource, 1, charindex(@SplitSymbol2, @ExtraDmdSource) - 1))
					set @ExtraDmdSource = stuff(@ExtraDmdSource, 1, charindex(@SplitSymbol2, @ExtraDmdSource), ' ')
				end
			end
			
			insert LE_FlowDetExtraDmdSource(FlowDetId, Location) values (@FlowDetId, Ltrim(@ExtraDmdSource))
		end
		
		set @FlowDetRowId = @FlowDetRowId + 1
	end
	
	-------------------↑计算其它需求源-----------------------
	
	
	
	truncate table LE_FlowDetSnapShot
	insert into LE_FlowDetSnapShot(Flow, FlowDetId, Item, Uom, UC, ManufactureParty, LocFrom, LocTo, IsRefFlow, SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy)
	select Flow, FlowDetId, Item, Uom, UC, ManufactureParty, LocFrom, LocTo, IsRefFlow, SafeStock, MaxStock, MinLotSize, RoundUpOpt, Strategy from #tempFlowDet
	
	
	
	drop table #tempExtraDmdSource
	drop table #tempOrderBom
	drop table #tempSortedMultiSupplierItem
	drop table #tempMultiSupplierItem
	drop table #tempMultiSupplierGroup
	drop table #tempFlowDet
	
	--记录日志
	set @Msg = N'获取路线明细结束'
	insert into LOG_RunLeanEngine(Lvl, Msg) values(0, @Msg)
END
GO
PRINT N'Creating [dbo].[USP_LE_SnapshotLocationDet4LeanEngine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_SnapshotLocationDet4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_LE_SnapshotOrderBomCPTime4LeanEngine]...';


GO
CREATE PROCEDURE [dbo].[USP_LE_SnapshotOrderBomCPTime4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
PRINT N'Creating [dbo].[USP_LE_SnapshotOrderPlan4LeanEngine]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_LE_SnapshotOrderPlan4LeanEngine]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Report_GetHistoryInv]...';


GO
CREATE PROCEDURE [dbo].[USP_Report_GetHistoryInv]
(
	@Locations varchar(8000),
	@Items varchar(8000),
	@HistoryData datetime,
	@SortDesc varchar(100),
	@PageSize int,
	@Page int,
	@IsSummaryBySAPLoc bit,
	@SummaryLevel int
)
AS
BEGIN
	SET NOCOUNT ON
/*
	exec USP_Report_GetHistoryInv @Locations='HBF010',@Items='_0517LJ2,_5005TNT,_5005TNT930,_5012TNT,_5076TNT,_6000LJ1,_CJ621313HR09MS,_CJ621327HR09MS,_CJ622854HR09MS,_CJ631802HR09MS,_CJ633328HR09MS,_CJ633439HR09MS,_CJ633442HR09MS,_CJ633442HR09MSQ,_CJ633448HR09MS,_CJ633448HR09MSQ,_CJ633449HR09MS,_CJ633449HR09MSQ,_CJ633587HR09MS,_CJ633587HR09MSQ',@HistoryData='2012-07-20 00:00:00',@SortDesc=NULL,@PageSize=20,@Page=1,@IsSummaryBySAPLoc=1,@SummaryLevel=0
*/
	IF EXISTS(SELECT 1 FROM MD_FinanceCalendar a WHERE EndDate>@HistoryData AND IsClose=1)
	BEGIN
		SELECT Id,ABS(DATEDIFF(SECOND,StartDate,@HistoryData)) AS StartGap,ABS(DATEDIFF(SECOND,EndDate,@HistoryData)) AS EndGap
		INTO #TMPGAP FROM MD_FinanceCalendar WHERE IsClose=1
		DECLARE @StartGap bigint,@EndGap bigint,@FinanceCalendarId int,@InvDate datetime,@StartDate datetime
		SELECT @StartGap=MIN(StartGap) FROM #TMPGAP
		SELECT TOP 1 @FinanceCalendarId=Id FROM #TMPGAP WHERE StartGap=@StartGap
		SELECT @StartDate=StartDate FROM dbo.MD_FinanceCalendar WHERE Id=@FinanceCalendarId
		SET @InvDate=DATEADD(DAY,DATEDIFF(SECOND,@StartDate,@HistoryData)/(60*60*24),@StartDate)
	END
	ELSE
	BEGIN
		SELECT TOP 1 @InvDate=DATEADD(DAY,-1,EndDate) FROM MD_FinanceCalendar WHERE IsClose=1 ORDER BY Id DESC
	END	
	--PRINT @InvDate
	--RETURN
	DECLARE @SqlHeader varchar(8000),@SqlTail varchar(8000)
	DECLARE @SqlDetail1 varchar(8000),@SqlDetail2 varchar(8000),@SqlDetail3 varchar(8000),@SqlDetail4 varchar(8000),
	@SqlDetail5 varchar(8000),@SqlDetail6 varchar(8000),@SqlDetail7 varchar(8000),@SqlDetail8 varchar(8000),
	@SqlDetail9 varchar(8000),@SqlDetail10 varchar(8000),@SqlDetail11 varchar(8000)
	DECLARE @i int
	DECLARE @max int
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @ItemWhere varchar(8000)=''
	DECLARE @LocationWhere varchar(8000)=''
	DECLARE @PagePara varchar(8000)=''
	DECLARE @TableSuffix varchar(50)
	SET @TableSuffix=CONVERT(varchar(6),@InvDate,112)
	
	IF(ISNULL(@Locations,'')<>'')
	BEGIN
		SET @LocationWhere=ISNULL(@LocationWhere,'')+' AND Location IN ('''+replace(@Locations,',',''',''')+''') '
	END
	
	IF(ISNULL(@Items,'')<>'')
	BEGIN
		SET @ItemWhere=ISNULL(@ItemWhere,'')+' AND lt.item in ('''+replace(@Items,',',''',''')+''') '
	END

	---排序条件
	IF ISNULL(@SortDesc,'')=''
	BEGIN
		SET @SortDesc=' ORDER BY Location ASC'
	END
		
	---查询出结果时需要的条件
	IF @Page>0
	BEGIN
		SET @PagePara='WHERE rowid BETWEEN '+cast(@PageSize*(@Page-1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50))
	END
	
	CREATE TABLE #tempInvSummary(Item varchar(50), Location varchar(50), ManufactureParty varchar(100),
			LotNo varchar(50), IsCs bit, QualifyQty decimal(18,8), InspectQty decimal(18,8), RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))
	CREATE TABLE #tempTransSummaryNoGroup(Item varchar(50),Location varchar(50), ManufactureParty varchar(100),
			LotNo varchar(50), IsCs bit, QualifyQty decimal(18,8), InspectQty decimal(18,8), RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))
	CREATE TABLE #tempTransSummary(Item varchar(50),Location varchar(50), ManufactureParty varchar(100),
			LotNo varchar(50), IsCs bit, QualifyQty decimal(18,8), InspectQty decimal(18,8), RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))			
	
	CREATE TABLE #TempResult(RowId int,Item varchar(50),Location varchar(50), ManufactureParty varchar(100), LotNo varchar(50), 
			CSQty decimal(18,8), QualifyQty decimal(18,8), InspectQty decimal(18,8), RejectQty decimal(18,8),
			TobeQualifyQty decimal(18,8), TobeInspectQty decimal(18,8), TobeRejectQty decimal(18,8))
		
	--SELECT id=ROW_NUMBER()OVER(ORDER BY name),name into #tempSumTabName FROM sys.objects WHERE type=N'U' AND name like N'INV_LocTrans_%'
	SELECT @SqlHeader='',@SqlTail='',@max=19,@i=0, @SqlDetail1='',@SqlDetail2='',@SqlDetail3='',@SqlDetail4='',
	@SqlDetail5='',@SqlDetail6='',@SqlDetail7='',@SqlDetail8='',
	@SqlDetail9='',@SqlDetail10='',@SqlDetail11=''

	SELECT Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty into #tempStandarInv from INV_DailyInvBalance where 1<>1
	

	
	--查找基准库存
	set @SqlHeader='select Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty, TobeQualifyQty, TobeInspectQty, TobeRejectQty 
		from INV_DailyInvBalance_'+@TableSuffix+' AS lt where InvDate = '''+CONVERT(varchar(19),@InvDate,121)+''' '+@ItemWhere+' '+@LocationWhere+''
	--print @SqlHeader;
	--print @i;
	--EXEC(@SqlHeader)
	INSERT INTO #tempStandarInv
	EXEC(@SqlHeader)	
	--循环结算每张表期末库存
	WHILE @i<@max
	BEGIN
		--PRINT @ItemWhere
		--PRINT @LocationWhere

		SET @SqlHeader='select Item, Location, ManufactureParty, LotNo, IsCs, 
			SUM(CASE WHEN QualityType = 0 then Qty else 0 end) as QualifyQty,
			SUM(CASE WHEN QualityType = 1 then Qty else 0 end) as InspectQty,
			SUM(CASE WHEN QualityType = 2 then Qty else 0 end) as RejectQty,
			SUM(CASE WHEN QualityType = 0 then TobeQty else 0 end) as TobeQualifyQty,
			SUM(CASE WHEN QualityType = 1 then TobeQty else 0 end) as TobeInspectQty,
			SUM(CASE WHEN QualityType = 2 then TobeQty else 0 end) as TobeRejectQty
			from 
			('
		SET @SqlDetail1='SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=0 AND lt.IsCs=0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocTo, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail2='SELECT lt.Item, lt.LocFrom AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=1 AND lt.IsCs=0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocFrom, hu.ManufactureParty , lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail3='SELECT lt.Item, lt.LocTo AS Location, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=0 AND lt.IsCs=1 AND lt.ActBill=0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocTo, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail4='SELECT lt.Item, lt.LocFrom, pb.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=1 AND lt.IsCs=1 AND lt.ActBill=0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocFrom, pb.Party, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL'
				
		SET @SqlDetail4='SELECT lt.Item, lt.LocTo AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=0 AND lt.ActBill<>0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocTo, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail5='SELECT lt.Item, lt.LocFrom AS Location, ab.Party AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.PlanBillQty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IOType=1 AND lt.ActBill<>0
				AND TransType NOT IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, lt.LocFrom, ab.Party, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail6='SELECT lt.Item, CASE WHEN TransType in (201,205,202,206) THEN lt.LocTo ELSE lt.LocFrom END AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
				lt.LotNo, lt.IsCs, lt.QualityType, 
				SUM(lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
				LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND TransType IN (201, 202, 203, 204, 205, 206)
				GROUP BY lt.Item, CASE WHEN TransType in (201,205,202,206) THEN lt.LocTo ELSE lt.LocFrom END,
					CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail7='SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				0 AS QTY,SUM(-lt.Qty) AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 1 and TransType in (301, 305, 304, 308, 311, 315, 314, 318) 
				GROUP BY lt.Item, lt.LocTo,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail8='SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				0 AS QTY,SUM(-lt.Qty) AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IsCs=0 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
				GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType	
				UNION ALL '
				
		SET @SqlDetail9='SELECT lt.Item, lt.LocTo AS Location, CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END AS ManufactureParty, 
				lt.LotNo, 1 AS IsCs, lt.QualityType, 
				SUM(-lt.Qty) AS Qty,0 AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN BIL_PlanBill AS pb ON lt.PlanBill=pb.Id
				LEFT JOIN BIL_ActBill AS ab ON lt.ActBill=ab.Id
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND (lt.IsCs=1 OR (lt.IsCs=0 AND lt.ActBill<>0)) AND IOType = 1 AND lt.TransType IN (301, 305, 304, 308, 311, 315, 314, 318) 
				GROUP BY lt.Item, lt.LocTo,CASE WHEN lt.ActBill<>0 THEN ab.Party ELSE pb.Party END, lt.LotNo, lt.IsCs, lt.QualityType
				UNION ALL '
				
		SET @SqlDetail10='SELECT lt.Item, lt.LocTo AS Location, hu.ManufactureParty AS ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType, 
				0 AS QTY,SUM(-lt.Qty) AS TobeQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				LEFT JOIN INV_Hu AS hu ON lt.Huid=hu.Huid 
				WHERE lt.EffDate > '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate <= '''+Convert(varchar(19), @HistoryData, 121)+''' '+@ItemWhere+'
				AND lt.IsCs=1 AND lt.ActBill=0 AND IOType = 0 and TransType in (302, 306, 303, 307, 312, 316, 313, 317) 
				GROUP BY lt.Item, lt.LocTo ,hu.ManufactureParty, lt.LotNo, lt.IsCs, lt.QualityType'	
										
		SET @SqlTail=') as A WHERE 1=1 '+@LocationWhere+' GROUP BY Item, Location,ManufactureParty, LotNo, IsCs'
	----print '1111111111'	
	----	PRINT  @SqlHeader+@SqlDetail1+@SqlDetail2+@SqlDetail3+@SqlDetail4+@SqlDetail5+@SqlDetail6+@SqlDetail7+@SqlDetail8+@SqlDetail9+@SqlDetail10+@SqlTail

		INSERT INTO	#tempTransSummaryNoGroup
		exec(@SqlHeader+@SqlDetail1+@SqlDetail2+@SqlDetail3+@SqlDetail4+@SqlDetail5+@SqlDetail6+@SqlDetail7+@SqlDetail8+@SqlDetail9+@SqlDetail10+@SqlTail)	
		
						
		--先以之前期末库存为基准生成历史库存


		SET @i=@i+1
	END

	INSERT INTO #tempTransSummary(Item, Location, ManufactureParty, LotNo, IsCs, QualifyQty, InspectQty, RejectQty,
	TobeQualifyQty, TobeInspectQty, TobeRejectQty)
	SELECT Item, Location, ManufactureParty, LotNo, IsCs,
		SUM(QualifyQty),SUM(InspectQty),SUM(RejectQty),SUM(TobeQualifyQty),SUM(TobeInspectQty),SUM(TobeRejectQty)
	FROM #tempTransSummaryNoGroup GROUP BY Item, Location, ManufactureParty, LotNo, IsCs
	TRUNCATE TABLE #tempTransSummaryNoGroup
			
	insert into #tempInvSummary 
	(Item, Location, ManufactureParty, LotNo, IsCs , QualifyQty, InspectQty, RejectQty,
	TobeQualifyQty, TobeInspectQty, TobeRejectQty)
	select std.Item, std.Location, std.ManufactureParty, std.LotNo, std.IsCs,
	std.QualifyQty + isnull(ts.QualifyQty, 0), 
	std.InspectQty + isnull(ts.InspectQty, 0), 
	std.RejectQty + isnull(ts.RejectQty, 0),
	std.TobeQualifyQty + isnull(ts.TobeQualifyQty, 0), 
	std.TobeInspectQty + isnull(ts.TobeInspectQty, 0), 
	std.TobeRejectQty + isnull(ts.TobeRejectQty, 0)
	from #tempStandarInv as std 
	left join #tempTransSummary as ts on std.Item = ts.Item and std.Location = ts.Location
	
	
	--对于之前期末库存不存在的记录，直接记录历史库存
	insert into #tempInvSummary 
	(Item, Location, ManufactureParty, LotNo, IsCs , QualifyQty, InspectQty, RejectQty,
	TobeQualifyQty, TobeInspectQty, TobeRejectQty)
	select ts.Item, ts.Location, ts.ManufactureParty, ts.LotNo, ts.IsCs,
	ts.QualifyQty, ts.InspectQty, ts.RejectQty,
	ts.TobeQualifyQty, ts.TobeInspectQty, ts.TobeRejectQty
	from #tempStandarInv as std 
	right join #tempTransSummary as ts on std.Item = ts.Item and std.Location = ts.Location
	where std.Item is null
	

	---最后的查询结果,包含2个数据集,一个是总数一个是分页数据
	IF @IsSummaryBySAPLoc=1
	BEGIN
		--汇总到SAP库位
		SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM (SELECT ts.Item, l.SAPLocation AS Location, ts.ManufactureParty, ts.LotNo,
			SUM(CASE WHEN ts.IsCS = 1 THEN ts.QualifyQty+ts.InspectQty+ts.RejectQty+ts.TobeQualifyQty+ts.TobeInspectQty+ts.TobeRejectQty ELSE 0 END) AS CSQty,
			SUM(ts.QualifyQty) AS QualifyQty,SUM(ts.InspectQty) AS InspectQty,SUM(ts.RejectQty) AS RejectQty,
			SUM(ts.TobeQualifyQty) AS TobeQualifyQty,SUM(ts.TobeInspectQty) AS TobeInspectQty,SUM(ts.TobeRejectQty) AS TobeRejectQty FROM #tempInvSummary ts
			INNER JOIN MD_Location l ON ts.Location=l.Code GROUP BY ts.Item, l.SAPLocation, ts.ManufactureParty, ts.LotNo) AS T
			WHERE CSQty<>0 OR QualifyQty<>0 OR InspectQty<>0 OR RejectQty<>0 OR TobeQualifyQty<>0
			OR TobeInspectQty<>0 OR TobeRejectQty<>0'
		PRINT @SqlHeader
		INSERT INTO #TempResult 
		EXEC(@SqlHeader)			
		
		SELECT count(1) from #TempResult
		EXEC('SELECT TOP('+@PageSize+') Item, Location, ManufactureParty, LotNo, CSQty,
			QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #TempResult '+@PagePara)
	END
	ELSE
	BEGIN
		IF @SummaryLevel=0
		BEGIN
			--不汇总
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM (SELECT ts.Item, ts.Location , ts.ManufactureParty, ts.LotNo,
			SUM(CASE WHEN ts.IsCS = 1 THEN ts.QualifyQty+ts.InspectQty+ts.RejectQty+ts.TobeQualifyQty+ts.TobeInspectQty+ts.TobeRejectQty ELSE 0 END) AS CSQty,
			SUM(ts.QualifyQty) AS QualifyQty,SUM(ts.InspectQty) AS InspectQty,SUM(ts.RejectQty) AS RejectQty,
			SUM(ts.TobeQualifyQty) AS TobeQualifyQty,SUM(ts.TobeInspectQty) AS TobeInspectQty,SUM(ts.TobeRejectQty) AS TobeRejectQty FROM #tempInvSummary ts
			GROUP BY ts.Item, ts.Location, ts.ManufactureParty, ts.LotNo) AS T
				WHERE CSQty<>0 OR QualifyQty<>0 OR InspectQty<>0 OR RejectQty<>0 OR TobeQualifyQty<>0
				OR TobeInspectQty<>0 OR TobeRejectQty<>0'
			INSERT INTO #TempResult 
			EXEC(@SqlHeader)			
			
			SELECT count(1) from #TempResult
			EXEC('SELECT TOP('+@PageSize+') Item, Location, ManufactureParty, LotNo, CSQty,
				QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #TempResult '+@PagePara)
		END
		ELSE IF @SummaryLevel=1
		BEGIN
			--汇总到区域	
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM (SELECT ts.Item, l.Region AS Location, ts.ManufactureParty, ts.LotNo,
				SUM(CASE WHEN ts.IsCS = 1 THEN ts.QualifyQty+ts.InspectQty+ts.RejectQty+ts.TobeQualifyQty+ts.TobeInspectQty+ts.TobeRejectQty ELSE 0 END) AS CSQty,
				SUM(ts.QualifyQty) AS QualifyQty,SUM(ts.InspectQty) AS InspectQty,SUM(ts.RejectQty) AS RejectQty,
				SUM(ts.TobeQualifyQty) AS TobeQualifyQty,SUM(ts.TobeInspectQty) AS TobeInspectQty,SUM(ts.TobeRejectQty) AS TobeRejectQty FROM #tempInvSummary ts
				INNER JOIN MD_Location l ON ts.Location=l.Code GROUP BY ts.Item, l.Region, ts.ManufactureParty, ts.LotNo) AS T
				WHERE CSQty<>0 OR QualifyQty<>0 OR InspectQty<>0 OR RejectQty<>0 OR TobeQualifyQty<>0
				OR TobeInspectQty<>0 OR TobeRejectQty<>0'
			PRINT @SqlHeader
			INSERT INTO #TempResult 
			EXEC(@SqlHeader)			
			
			SELECT count(1) from #TempResult
			EXEC('SELECT TOP('+@PageSize+') Item, Location, ManufactureParty, LotNo, CSQty,
				QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #TempResult '+@PagePara)
		END
		ELSE IF @SummaryLevel=2
		BEGIN
			--汇总到车间
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM (SELECT ts.Item, r.Workshop AS Location, ts.ManufactureParty, ts.LotNo,
				SUM(CASE WHEN ts.IsCS = 1 THEN ts.QualifyQty+ts.InspectQty+ts.RejectQty+ts.TobeQualifyQty+ts.TobeInspectQty+ts.TobeRejectQty ELSE 0 END) AS CSQty,
				SUM(ts.QualifyQty) AS QualifyQty,SUM(ts.InspectQty) AS InspectQty,SUM(ts.RejectQty) AS RejectQty,
				SUM(ts.TobeQualifyQty) AS TobeQualifyQty,SUM(ts.TobeInspectQty) AS TobeInspectQty,SUM(ts.TobeRejectQty) AS TobeRejectQty FROM #tempInvSummary ts
				INNER JOIN MD_Location l ON ts.Location=l.Code 
				INNER JOIN MD_Region r ON r.Code=l.Region GROUP BY ts.Item, r.Workshop, ts.ManufactureParty, ts.LotNo) AS T
				WHERE CSQty<>0 OR QualifyQty<>0 OR InspectQty<>0 OR RejectQty<>0 OR TobeQualifyQty<>0
				OR TobeInspectQty<>0 OR TobeRejectQty<>0'
			PRINT @SqlHeader
			INSERT INTO #TempResult 
			EXEC(@SqlHeader)			
			
			SELECT count(1) from #TempResult
			EXEC('SELECT TOP('+@PageSize+') Item, Location, ManufactureParty, LotNo, CSQty,
				QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #TempResult '+@PagePara)
		END
		ELSE IF @SummaryLevel=3
		BEGIN
			--汇总到工厂
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM (SELECT ts.Item, r.Plant AS Location, ts.ManufactureParty, ts.LotNo,
				SUM(CASE WHEN ts.IsCS = 1 THEN ts.QualifyQty+ts.InspectQty+ts.RejectQty+ts.TobeQualifyQty+ts.TobeInspectQty+ts.TobeRejectQty ELSE 0 END) AS CSQty,
				SUM(ts.QualifyQty) AS QualifyQty,SUM(ts.InspectQty) AS InspectQty,SUM(ts.RejectQty) AS RejectQty,
				SUM(ts.TobeQualifyQty) AS TobeQualifyQty,SUM(ts.TobeInspectQty) AS TobeInspectQty,SUM(ts.TobeRejectQty) AS TobeRejectQty FROM #tempInvSummary ts
				INNER JOIN MD_Location l ON ts.Location=l.Code 
				INNER JOIN MD_Region r ON r.Code=l.Region GROUP BY ts.Item, r.Plant, ts.ManufactureParty, ts.LotNo) AS T
				WHERE CSQty<>0 OR QualifyQty<>0 OR InspectQty<>0 OR RejectQty<>0 OR TobeQualifyQty<>0
				OR TobeInspectQty<>0 OR TobeRejectQty<>0'
			PRINT @SqlHeader
			INSERT INTO #TempResult 
			EXEC(@SqlHeader)			
			
			SELECT count(1) from #TempResult
			EXEC('SELECT TOP('+@PageSize+') Item, Location, ManufactureParty, LotNo, CSQty,
				QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #TempResult '+@PagePara) 	
		END
	END		
		
			
	--SELECT * FROM #tempStandarInv
	--SELECT COUNT(1) FROM #tempInvSummary
	--SELECT Item, Location, ManufactureParty, LotNo,CASE WHEN IsCS = 1 THEN QualifyQty+InspectQty+RejectQty+TobeQualifyQty+TobeInspectQty+TobeRejectQty ELSE 0 END AS CSQty,
	--QualifyQty,InspectQty,RejectQty,TobeQualifyQty,TobeInspectQty,TobeRejectQty FROM #tempInvSummary
	
	--清除临时表数据
	DROP TABLE #TempResult
	DROP TABLE #tempInvSummary
	DROP TABLE #tempStandarInv
	DROP TABLE #tempTransSummary	
END
GO
PRINT N'Creating [dbo].[USP_Report_InventoryAge]...';


GO
CREATE PROCEDURE [dbo].[USP_Report_InventoryAge]
(
	@Locations varchar(8000),
	@Items varchar(8000),
	@SortDesc varchar(100),
	@PageSize int,
	@Page int,
	@IsSummaryBySAPLoc bit,
	@SummaryLevel int,
	@Range1 int,
	@Range2 int,
	@Range3 int,
	@Range4 int,
	@Range5 int,
	@Range6 int,
	@Range7 int,
	@Range8 int,
	@Range9 int,
	@Range10 int,
	@Range11 int
)
AS
BEGIN
/*
exec USP_Report_InventoryAge @Locations='BJS001,LOC000,LOC100,LOC101,LOC600,LOC601',@Items='',@SortDesc='',@PageSize=20,@Page=1,@IsSummaryBySAPLoc=1,@SummaryLevel=2,@Range1=7,@Range2=14,@Range3=30,@Range4=60,@Range5=90,@Range6=180,@Range7=360,@Range8=720,@Range9=1080,@Range10=1440,@Range11=1800
---默认值 7,14,30,60,90,180,360,720,1080,1440,1800
*/
	DECLARE @CurrDate datetime,@Range1Date datetime,@Range2Date datetime,@Range3Date datetime,
	@Range4Date datetime,@Range5Date datetime,@Range6Date datetime,@Range7Date datetime,@Range8Date datetime,
	@Range9Date datetime,@Range10Date datetime,@Range11Date datetime
	
	SET @CurrDate=GETDATE()
	IF(ISNULL(@Range1,0)<>0)
	BEGIN
		SET @Range1Date=DATEADD(DAY,-@Range1,@CurrDate)
	END
	IF(ISNULL(@Range2,0)<>0)
	BEGIN
		SET @Range2Date=DATEADD(DAY,-@Range2,@CurrDate)
	END
	IF(ISNULL(@Range3,0)<>0)
	BEGIN
		SET @Range3Date=DATEADD(DAY,-@Range3,@CurrDate)
	END
	IF(ISNULL(@Range4,0)<>0)
	BEGIN
		SET @Range4Date=DATEADD(DAY,-@Range4,@CurrDate)
	END		
	IF(ISNULL(@Range5,0)<>0)
	BEGIN
		SET @Range5Date=DATEADD(DAY,-@Range5,@CurrDate)
	END	
	IF(ISNULL(@Range6,0)<>0)
	BEGIN
		SET @Range6Date=DATEADD(DAY,-@Range6,@CurrDate)
	END	
	IF(ISNULL(@Range7,0)<>0)
	BEGIN
		SET @Range7Date=DATEADD(DAY,-@Range7,@CurrDate)
	END	
	IF(ISNULL(@Range8,0)<>0)
	BEGIN
		SET @Range8Date=DATEADD(DAY,-@Range8,@CurrDate)
	END	
	IF(ISNULL(@Range9,0)<>0)
	BEGIN
		SET @Range9Date=DATEADD(DAY,-@Range9,@CurrDate)
	END	
	IF(ISNULL(@Range10,0)<>0)
	BEGIN
		SET @Range10Date=DATEADD(DAY,-@Range10,@CurrDate)
	END	
	IF(ISNULL(@Range11,0)<>0)
	BEGIN
		SET @Range11Date=DATEADD(DAY,-@Range11,@CurrDate)
	END		
	
	DECLARE @Sql varchar(max)
	DECLARE @Where  varchar(8000)
	DECLARE @PartSuffix varchar(5)
	DECLARE @PagePara varchar(8000)
	DECLARE @TmpForLoop int
	SELECT @Sql='',@TmpForLoop=0,@Where=''
	DECLARE @LocationIds table(Id int identity(1,1),PartSuffix varchar(5))
	
	---如果有输入的库位则只查询输入库位的表，否则全部表拼接查询
	IF ISNULL(@Locations,'')='' 
	BEGIN
		INSERT INTO @LocationIds(PartSuffix)
		SELECT DISTINCT(PartSuffix) FROM MD_Location WHERE PartSuffix IS NOT NULL OR PartSuffix<>''
	END
	ELSE
	BEGIN
		SET @Where=' AND det.Location in('''+replace(@Locations,',',''',''')+''')'
	    SET @sql='SELECT DISTINCT PartSuffix FROM MD_Location WHERE Code in ('''+replace(@Locations,',',''',''')+''')'
		INSERT INTO @LocationIds(PartSuffix)
		EXEC(@sql)
	END
	
	---查询出数据时需要的条件
	-----物料
	IF ISNULL(@Items,'')<>'' 
	BEGIN
		IF ISNULL(@Where,'')=''
		BEGIN
			SET @Where=' AND det.Item IN ('''+replace(@Items,',',''',''')+''')'
		END
		ELSE
		BEGIN
			SET @Where=@Where+' AND det.Item IN ('''+replace(@Items,',',''',''')+''')'
		END
	END
	--PRINT @Where
	--select * from @LocationIds
	---排序条件
	IF ISNULL(@SortDesc,'')=''
	BEGIN
		SET @SortDesc=' ORDER BY Location ASC'
	END
		
	----查询出结果时需要的条件
	IF @Page>0
	BEGIN
		SET @PagePara='WHERE rowid BETWEEN '+cast(@PageSize*(@Page-1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50))
	END
	
	CREATE TABLE #TempResult
	(
		rowid int,
		Location varchar(50), 
		Item varchar(50), 
		Range0 decimal(18,8), 
		Range1 decimal(18,8), 
		Range2 decimal(18,8), 
		Range3 decimal(18,8),  
		Range4 decimal(18,8), 
		Range5 decimal(18,8),
		Range6 decimal(18,8),
		Range7 decimal(18,8),
		Range8 decimal(18,8),
		Range9 decimal(18,8),
		Range10 decimal(18,8),
		Range11 decimal(18,8)
	)

	CREATE TABLE #TempInternal
	(
		Location varchar(50), 
		Item varchar(50), 
		Range0 decimal(18,8), 
		Range1 decimal(18,8), 
		Range2 decimal(18,8), 
		Range3 decimal(18,8),  
		Range4 decimal(18,8), 
		Range5 decimal(18,8),
		Range6 decimal(18,8),
		Range7 decimal(18,8),
		Range8 decimal(18,8),
		Range9 decimal(18,8),
		Range10 decimal(18,8),
		Range11 decimal(18,8)
	)
	DECLARE @MaxId int
	SELECT @MaxId = MAX(Id),@Sql='' FROM @LocationIds
	WHILE @TmpForLoop<@MaxId
	BEGIN
		SET @TmpForLoop=@TmpForLoop+1	
		SELECT @PartSuffix=PartSuffix FROM @LocationIds WHERE Id=@TmpForLoop
		PRINT @TmpForLoop	
		SET @Sql='SELECT det.Location, det.Item,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @CurrDate, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range1Date, 121)+''' THEN det.QTY END) AS Range0,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range1Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range2Date, 121)+''' THEN det.QTY END) AS Range1,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range2Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range3Date, 121)+''' THEN det.QTY END) AS Range2,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range3Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range4Date, 121)+''' THEN det.QTY END) AS Range3,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range4Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range5Date, 121)+''' THEN det.QTY END) AS Range4,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range5Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range6Date, 121)+''' THEN det.QTY END) AS Range5,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range6Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range7Date, 121)+''' THEN det.QTY END) AS Range6,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range7Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range8Date, 121)+''' THEN det.QTY END) AS Range7,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range8Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range9Date, 121)+''' THEN det.QTY END) AS Range8,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range9Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range10Date, 121)+''' THEN det.QTY END) AS Range9,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range10Date, 121)+''' AND CreateDate>'''+Convert(varchar(19), @Range11Date, 121)+''' THEN det.QTY END) AS Range10,
				SUM(CASE WHEN CreateDate<='''+Convert(varchar(19), @Range11Date, 121)+''' THEN det.QTY END) AS Range11
				FROM  INV_LocationLotDet_'+@PartSuffix+' AS det WHERE 1=1 '+@Where+' AND det.QTY<>0    
				GROUP BY det.Location, det.IsCS, det.Item'			
		--PRINT @Sql	
		INSERT INTO #TempInternal
		EXEC(@Sql)	
	END
	--PRINT @Sql
	
	IF @IsSummaryBySAPLoc=1
	BEGIN
		SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT l.SAPLocation as Location, t.Item, SUM(t.Range0) AS Range0, SUM(t.Range1) AS Range1, SUM(t.Range2) AS Range2, 
		SUM(t.Range3) AS Range3, SUM(t.Range4) AS Range4, SUM(t.Range5) AS Range5, SUM(t.Range6) AS Range6,SUM(t.Range7) AS Range7, SUM(t.Range8) AS Range8, SUM(t.Range9) AS Range9, SUM(t.Range10) AS Range10, SUM(t.Range11) AS Range11 FROM #TempInternal as t
			INNER JOIN MD_Location l ON t.Location=l.Code
			WHERE Range0<>0 OR Range1<>0 OR Range2<>0 OR Range3<>0 OR Range4<>0 OR Range5<>0 OR Range6<>0 OR Range7<>0 OR Range8<>0
			OR Range9<>0 OR Range10<>0 OR Range11<>0
			GROUP BY l.SAPLocation, t.Item) as LocTranDet'
	
		insert into #TempResult 
		exec(@sql)	
			
		select count(1) from #TempResult
		exec('select top('+@PageSize+')  Location, Item, 
		Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempResult '+@PagePara)
	END
	ELSE
	BEGIN
		IF @SummaryLevel=0
		BEGIN
			--不汇总
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid, Location, Item, 
			Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempInternal as det
			WHERE Range0<>0 OR Range1<>0 OR Range2<>0 OR Range3<>0 OR Range4<>0 OR Range5<>0 OR Range6<>0 OR Range7<>0 OR Range8<>0
			OR Range9<>0 OR Range10<>0 OR Range11<>0'
			
			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+') Location, Item, 
			Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=1
		BEGIN
			--汇总到区域
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Code as Location, t.Item, SUM(t.Range0) AS Range0, SUM(t.Range1) AS Range1, SUM(t.Range2) AS Range2, 
			SUM(t.Range3) AS Range3, SUM(t.Range4) AS Range4, SUM(t.Range5) AS Range5, SUM(t.Range6) AS Range6,SUM(t.Range7) AS Range7, SUM(t.Range8) AS Range8, SUM(t.Range9) AS Range9, SUM(t.Range10) AS Range10, SUM(t.Range11) AS Range11 FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				WHERE Range0<>0 OR Range1<>0 OR Range2<>0 OR Range3<>0 OR Range4<>0 OR Range5<>0 OR Range6<>0 OR Range7<>0 OR Range8<>0
				OR Range9<>0 OR Range10<>0 OR Range11<>0
				GROUP BY r.Code, t.Item) as LocTranDet'
		
			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, 
			Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=2
		BEGIN
			--汇总到车间
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Workshop as Location, t.Item, SUM(t.Range0) AS Range0, SUM(t.Range1) AS Range1, SUM(t.Range2) AS Range2, 
			SUM(t.Range3) AS Range3, SUM(t.Range4) AS Range4, SUM(t.Range5) AS Range5, SUM(t.Range6) AS Range6,SUM(t.Range7) AS Range7, SUM(t.Range8) AS Range8, SUM(t.Range9) AS Range9, SUM(t.Range10) AS Range10, SUM(t.Range11) AS Range11 FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				WHERE Range0<>0 OR Range1<>0 OR Range2<>0 OR Range3<>0 OR Range4<>0 OR Range5<>0 OR Range6<>0 OR Range7<>0 OR Range8<>0
				OR Range9<>0 OR Range10<>0 OR Range11<>0
				GROUP BY r.Workshop, t.Item) as LocTranDet'
			
			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+') Location, Item, 
			Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=3
		BEGIN
			--汇总到工厂
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Plant as Location, t.Item, SUM(t.Range0) AS Range0, SUM(t.Range1) AS Range1, SUM(t.Range2) AS Range2, 
			SUM(t.Range3) AS Range3, SUM(t.Range4) AS Range4, SUM(t.Range5) AS Range5, SUM(t.Range6) AS Range6,SUM(t.Range7) AS Range7, SUM(t.Range8) AS Range8, SUM(t.Range9) AS Range9, SUM(t.Range10) AS Range10, SUM(t.Range11) AS Range11 FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				WHERE Range0<>0 OR Range1<>0 OR Range2<>0 OR Range3<>0 OR Range4<>0 OR Range5<>0 OR Range6<>0 OR Range7<>0 OR Range8<>0
				OR Range9<>0 OR Range10<>0 OR Range11<>0
				GROUP BY r.Plant, t.Item) as LocTranDet'
			
			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+') Location, Item, 
			Range0, Range1, Range2, Range3, Range4, Range5, Range6,Range7, Range8, Range9, Range10, Range11 from #TempResult '+@PagePara) 
		END
	END	
END
GO
PRINT N'Creating [dbo].[USP_Report_RealTimeLocationDet]...';


GO

CREATE PROCEDURE [dbo].[USP_Report_RealTimeLocationDet]
(
	@Locations varchar(8000),
	@Items varchar(8000),
	@SortDesc varchar(100),
	@PageSize int,
	@Page int,
	@IsSummaryBySAPLoc bit,
	@SummaryLevel int,
	@IsGroupByManufactureParty bit,
	@IsGroupByLotNo bit
)
AS
BEGIN
/*
exec USP_Report_RealTimeLocationDet '','500368184','',100,1,0,0,1,1
500368184
*/
	SET NOCOUNT ON
	DECLARE @Sql varchar(max)
	DECLARE @Where  varchar(8000)
	DECLARE @PartSuffix varchar(5)
	DECLARE @PagePara varchar(8000)
	DECLARE @TmpForLoop int
	SELECT @Sql='',@TmpForLoop=0,@Where=''
	DECLARE @LocationIds table(Id int identity(1,1),PartSuffix varchar(5))
	CREATE TABLE #TempResult
	(
		rowid int,
		Location varchar(50), 
		Item varchar(50), 
		LotNo varchar(50),
		ManufactureParty varchar(50),
		IsCS bit, 
		ItemDescription varchar(100), 
		Uom varchar(50),
		Qty decimal(18,8),  
		QualifyQty decimal(18,8), 
		InspectQty decimal(18,8), 
		RejectQty decimal(18,8)
	)
	CREATE TABLE #TempInternal
	(
		Location varchar(50), 
		Item varchar(50), 
		LotNo varchar(50),
		ManufactureParty varchar(50),
		Iscs bit, 
		ItemDescription varchar(100), 
		Uom varchar(50),
		Qty decimal(18,8), 
		QualifyQty decimal(18,8), 
		InspectQty decimal(18,8), 
		RejectQty decimal(18,8)
		
	)	
	--如果有输入的库位则只查询输入库位的表，否则全部表拼接查询
	IF ISNULL(@Locations,'')='' 
	BEGIN
		INSERT INTO @LocationIds(PartSuffix)
		SELECT DISTINCT(PartSuffix) FROM MD_Location WHERE PartSuffix IS NOT NULL OR PartSuffix<>''
	END
	ELSE
	BEGIN
		SET @Where=' WHERE det.Location in('''+replace(@Locations,',',''',''')+''')'
	    SET @sql='SELECT DISTINCT PartSuffix FROM MD_Location WHERE Code in ('''+replace(@Locations,',',''',''')+''')'
		--PRINT @sql
		INSERT INTO @LocationIds(PartSuffix)
		EXEC(@sql)
	END
	
	---查询出数据时需要的条件
	-----物料
	IF ISNULL(@Items,'')<>'' 
	BEGIN
		IF ISNULL(@Where,'')=''
		BEGIN
			SET @Where=' WHERE det.Item IN ('''+replace(@Items,',',''',''')+''')'
		END
		ELSE
		BEGIN
			SET @Where=@Where+' AND det.Item IN ('''+replace(@Items,',',''',''')+''')'
		END
	END
	--PRINT @Where
	--select * from @LocationIds
	---排序条件
	IF ISNULL(@SortDesc,'')=''
	BEGIN
		SET @SortDesc=' ORDER BY Location ASC'
	END
		
	---查询出结果时需要的条件
	IF @Page>0
	BEGIN
		SET @PagePara='WHERE rowid BETWEEN '+cast(@PageSize*(@Page-1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50))
	END

	DECLARE @MaxId int
	SELECT @MaxId = MAX(Id),@Sql='' FROM @LocationIds
	WHILE @TmpForLoop<@MaxId
	BEGIN
		SET @TmpForLoop=@TmpForLoop+1
		SELECT @PartSuffix=PartSuffix FROM @LocationIds WHERE Id=@TmpForLoop
		PRINT @TmpForLoop
		IF @IsGroupByManufactureParty=1 AND @IsGroupByLotNo=0
		BEGIN
			SET @Sql='SELECT det.Location, det.Item,'''' AS LotNo, 
					CASE WHEN bill.Party IS NOT NULL THEN bill.Party ELSE hu.ManufactureParty END AS ManufactureParty,det.IsCS, mdItem.Desc1 as ItemDescription,mdItem.Uom,
					SUM(det.Qty) as Qty,
					SUM(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, 					
                    SUM(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                    SUM(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty
					FROM  inv_locationlotdet_'+@PartSuffix+' AS det 
					left join MD_Item as mdItem on det.Item=mdItem.Code
					LEFT JOIN dbo.INV_Hu AS hu ON det.HuId = hu.HuId  
					LEFT  JOIN BIL_PlanBill AS bill ON det.PlanBill=bill.id AND bill.Type=0 '+@Where+' 
					GROUP BY det.Location, det.Item,CASE WHEN bill.Party IS NOT NULL THEN bill.Party ELSE hu.ManufactureParty END,det.IsCs,mdItem.Desc1,mdItem.Uom '			
		END			
		ELSE IF @IsGroupByManufactureParty=1 AND @IsGroupByLotNo=1	
		BEGIN
			SET @Sql='SELECT det.Location, det.Item,det.LotNo, 
					CASE WHEN bill.Party IS NOT NULL THEN bill.Party ELSE hu.ManufactureParty END AS ManufactureParty,det.IsCS,mdItem.Desc1 as ItemDescription,mdItem.Uom,
		            SUM(det.Qty) as Qty,
					SUM(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, 					
                    SUM(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                    SUM(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty
					FROM  inv_locationlotdet_'+@PartSuffix+' AS det 
					left join MD_Item as mdItem on det.Item=mdItem.Code
					LEFT JOIN dbo.INV_Hu AS hu ON det.HuId = hu.HuId  
					LEFT  JOIN BIL_PlanBill AS bill ON det.PlanBill=bill.id AND bill.Type=0 '+@Where+' 
					GROUP BY det.Location, det.Item,det.LotNo,CASE WHEN bill.Party IS NOT NULL THEN bill.Party ELSE hu.ManufactureParty END,det.IsCS ,mdItem.Desc1,mdItem.Uom '
		END	
		
		--exec(@Sql)	
		
		INSERT INTO #TempInternal
		EXEC(@Sql)		
	END
	--SELECT * FROM #TempInternal
	
	---最后的查询结果,包含2个数据集,一个是总数一个是分页数据
	IF @IsSummaryBySAPLoc=1
	BEGIN
		--汇总到SAP库位
		SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT l.SAPLocation as Location, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom,
			SUM(t.Qty) as QTY,SUM(t.QualifyQty) AS QualifyQty, SUM(t.InspectQty) as InspectQty, SUM(t.RejectQty) as RejectQty FROM #TempInternal as t
			INNER JOIN MD_Location l ON t.Location=l.Code
			GROUP BY l.SAPLocation, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom) as LocTranDet'
		
		insert into #TempResult 
		exec(@sql)	
			
		select count(1) from #TempResult
		exec('select top('+@PageSize+')  Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom,Qty, QualifyQty, InspectQty, RejectQty from #TempResult '+@PagePara) 		
	END
	ELSE
	BEGIN
		IF @SummaryLevel=0
		BEGIN
			--不汇总
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom,
			Qty, QualifyQty, InspectQty, RejectQty from #TempInternal as det'
			
			insert into #TempResult 
			exec(@sql)	
			
			PRINT @sql	
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom, Qty, QualifyQty, InspectQty, RejectQty from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=1
		BEGIN
			--汇总到区域
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Code as Location, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom,
				SUM(t.Qty) as QTY,SUM(t.QualifyQty) AS QualifyQty, SUM(t.InspectQty) as InspectQty, SUM(t.RejectQty) as RejectQty FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				GROUP BY r.Code, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom) as LocTranDet'
			
			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom,  Qty, QualifyQty, InspectQty, RejectQty from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=2
		BEGIN
			--汇总到车间
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Workshop as Location, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom,
				SUM(t.Qty) as QTY,SUM(t.QualifyQty) AS QualifyQty, SUM(t.InspectQty) as InspectQty, SUM(t.RejectQty) as RejectQty FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				GROUP BY r.Workshop, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom) as LocTranDet'

			insert into #TempResult 
			exec(@sql)	
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+') Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom, Qty, QualifyQty, InspectQty, RejectQty from #TempResult '+@PagePara) 
		END
		ELSE IF @SummaryLevel=3
		BEGIN
			--汇总到工厂
			SET @sql = 'select row_number() over('+@SortDesc+') as rowid,* FROM (SELECT r.Plant as Location, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom,
				SUM(t.Qty) as QTY,SUM(t.QualifyQty) AS QualifyQty, SUM(t.InspectQty) as InspectQty, SUM(t.RejectQty) as RejectQty FROM #TempInternal as t
				INNER JOIN MD_Location l ON t.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				GROUP BY r.Plant, t.Item, t.LotNo, t.ManufactureParty,t.IsCS,t.ItemDescription,t.Uom) as LocTranDet'
			
			insert into #TempResult 
			exec(@sql)	
			select count(1) from #TempResult
			exec('select top('+@PageSize+') Location, Item, LotNo, ManufactureParty,IsCS,ItemDescription,Uom,  Qty, QualifyQty, InspectQty, RejectQty from #TempResult '+@PagePara) 
		END
	END	
END
GO
PRINT N'Creating [dbo].[USP_Report_RecSendDeposit]...';


GO
CREATE PROCEDURE [dbo].[USP_Report_RecSendDeposit]
(
	@Locations varchar(8000),
	@Items varchar(8000),
	@BeginDate datetime,
	@EndDate datetime,
	@SortDesc varchar(100),
	@PageSize int,
	@Page int,
	@IsSummaryBySAPLoc bit,
	@SummaryLevel int
)
AS
BEGIN
	SET NOCOUNT ON
/*
	exec USP_Report_RecSendDeposit @Locations='',@Items='',@BeginDate='2012-06-01 10:23:51',@EndDate='2012-07-01 00:00:00',@SortDesc=NULL,@PageSize=20,@Page=1,@IsSummaryBySAPLoc=0,@SummaryLevel=2
*/
	IF EXISTS(SELECT 1 FROM MD_FinanceCalendar a WHERE EndDate>@BeginDate AND IsClose=1)
	BEGIN
		SELECT Id,ABS(DATEDIFF(SECOND,StartDate,@BeginDate)) AS StartGap,ABS(DATEDIFF(SECOND,EndDate,@BeginDate)) AS EndGap
		INTO #TMPGAP FROM MD_FinanceCalendar WHERE IsClose=1
		DECLARE @StartGap bigint,@EndGap bigint,@FinanceCalendarId int,@InvDate datetime,@StartDate datetime
		SELECT @StartGap=MIN(StartGap) FROM #TMPGAP
		SELECT TOP 1 @FinanceCalendarId=Id FROM #TMPGAP WHERE StartGap=@StartGap
		SELECT @StartDate=StartDate FROM dbo.MD_FinanceCalendar WHERE Id=@FinanceCalendarId
		SET @InvDate=DATEADD(DAY,DATEDIFF(SECOND,@StartDate,@BeginDate)/(60*60*24),@StartDate)
	END
	ELSE
	BEGIN
		SELECT TOP 1 @InvDate=DATEADD(DAY,-1,EndDate) FROM MD_FinanceCalendar WHERE IsClose=1 ORDER BY Id DESC
	END	
	--PRINT @InvDate
	--RETURN
	DECLARE @SqlHeader varchar(8000),@SqlTail varchar(8000)
	DECLARE @SqlDetail1 varchar(8000),@SqlDetail2 varchar(8000)

	DECLARE @i int
	DECLARE @max int
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @ItemWhere varchar(8000)=''
	DECLARE @LocationWhere varchar(8000)=''
	DECLARE @PagePara varchar(8000)=''
	DECLARE @TableSuffix varchar(50)
	SET @TableSuffix=CONVERT(varchar(6),@InvDate,112)
	
	IF(ISNULL(@Locations,'')<>'')
	BEGIN
		SET @LocationWhere=ISNULL(@LocationWhere,'')+' AND Location IN ('''+replace(@Locations,',',''',''')+''') '
	END
	
	IF(ISNULL(@Items,'')<>'')
	BEGIN
		SET @ItemWhere=ISNULL(@ItemWhere,'')+' AND lt.item in ('''+replace(@Items,',',''',''')+''') '
	END

	---排序条件
	IF ISNULL(@SortDesc,'')=''
	BEGIN
		SET @SortDesc=' ORDER BY Location ASC'
	END
	
	--PRINT @LocationWhere
	---查询出结果时需要的条件
	IF @Page>0
	BEGIN
		SET @PagePara='WHERE rowid BETWEEN '+cast(@PageSize*(@Page-1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50))
	END
	
	CREATE TABLE #tempStandarInv(Item varchar(50), Location varchar(50), BOPQty decimal(18,8))
	CREATE INDEX IX_tempStandarInv_1 ON #tempStandarInv(Location,Item)	
	
	CREATE TABLE #tempInvSummary(Item varchar(50), Location varchar(50), BOPQty decimal(18,8),
			InputQty decimal(18,8), OutputQty decimal(18,8))
	CREATE INDEX IX_tempInvSummary_1 ON #tempInvSummary(Location,Item)	
	
	CREATE TABLE #tempIOSummary(Item varchar(50), Location varchar(50), InputQty decimal(18,8), OutputQty decimal(18,8))
	CREATE INDEX IX_tempIOSummary_1 ON #tempIOSummary(Location,Item)
	
	CREATE TABLE #tempTransSummary(Item varchar(50),Location varchar(50), InputQty decimal(18,8), OutputQty decimal(18,8))
	CREATE INDEX IX_tempTransSummary_1 ON #tempTransSummary(Location,Item)		
	
	CREATE TABLE #tempResult(rowid int,Item varchar(50),Location varchar(50), BOPQty decimal(18,8),
			InputQty decimal(18,8), OutputQty decimal(18,8), EOPQty decimal(18,8))			
	
	SELECT @SqlHeader='',@SqlTail='',@max=19,@i=0, @SqlDetail1='',@SqlDetail2=''
		
	--查找基准库存
	set @SqlHeader='select Item, Location, SUM(QualifyQty+InspectQty+RejectQty) AS BOPQty
		from INV_DailyInvBalance_'+@TableSuffix+' AS lt where InvDate = '''+CONVERT(varchar(19),@InvDate,121)+''' '+@ItemWhere+' '+@LocationWhere+'
		GROUP BY Item, Location'

	--PRINT @SqlHeader
	INSERT INTO #tempStandarInv
	EXEC(@SqlHeader)
	
	--PRINT @InvDate
	--PRINT @BeginDate
	--PRINT @EndDate
	--循环结算每张表期初库存
	WHILE @i<@max
	BEGIN
		--PRINT @i
		SET @SqlHeader='SELECT * FROM (SELECT lt.Item, CASE WHEN IOType=0 THEN lt.LocTo ELSE lt.LocFrom END AS Location,
				SUM(CASE WHEN IOType = 0 then Qty else 0 end) as InputQty,
				SUM(CASE WHEN IOType = 1 then -Qty else 0 end) as OutputQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				WHERE lt.EffDate >= '''+Convert(varchar(19), @InvDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(19), @BeginDate, 121)+''' '+@ItemWhere+'
				GROUP BY lt.Item, CASE WHEN IOType=0 THEN lt.LocTo ELSE lt.LocFrom END) AS T WHERE 1=1 '+@LocationWhere+''
		
		PRINT @SqlHeader	
		INSERT INTO	#tempTransSummary
		exec(@SqlHeader)			

		SET @SqlHeader='SELECT * FROM (SELECT lt.Item, CASE WHEN IOType=0 THEN lt.LocTo ELSE lt.LocFrom END AS Location,
				SUM(CASE WHEN IOType = 0 then Qty else 0 end) as InputQty,
				SUM(CASE WHEN IOType = 1 then -Qty else 0 end) as OutputQty
				FROM INV_LocTrans_'+Cast(@i AS varchar(10))+' AS lt
				WHERE lt.EffDate >= '''+Convert(varchar(19), @BeginDate, 121)+'''  and lt.EffDate < '''+Convert(varchar(19), @EndDate, 121)+''' '+@ItemWhere+'
				GROUP BY lt.Item, CASE WHEN IOType=0 THEN lt.LocTo ELSE lt.LocFrom END) AS T WHERE 1=1 '+@LocationWhere+''
		
		PRINT @SqlHeader		
		INSERT INTO	#tempIOSummary
		exec(@SqlHeader)					

		SET @i=@i+1
	END

	--select * from #tempStandarInv
	--select * from #tempTransSummary
	---得到期初库存			
	INSERT INTO #tempInvSummary 
	(Item, Location, BOPQty, InputQty, OutputQty)
	SELECT std.Item, std.Location, std.BOPQty, ISNULL(ts.InputQty,0), ISNULL(ts.OutputQty,0)
	FROM #tempStandarInv AS std 
	LEFT JOIN #tempTransSummary AS ts ON std.Item = ts.Item and std.Location = ts.Location
	
	INSERT INTO #tempInvSummary 
	(Item, Location, BOPQty, InputQty, OutputQty)
	SELECT ts.Item, ts.Location, 0 AS BOPQty, ts.InputQty, ts.OutputQty
	FROM #tempStandarInv AS std 
	RIGHT JOIN #tempTransSummary AS ts ON std.Item = ts.Item and std.Location = ts.Location
	WHERE std.Item IS NULL
	
	TRUNCATE TABLE #tempStandarInv
	TRUNCATE TABLE #tempTransSummary
	----利用期初库存加事务汇总算出期末库存	
	--INSERT INTO #tempResult(Item, Location, SAPLocation, BOPQty, InputQty, OutputQty, EOPQty)
	--SELECT ts.Item,ts.Location,l.SAPLocation,ts.BOPQty, 
	--ISNULL(ios.InputQty,0),ISNULL(ios.OutputQty,0),
	--ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0)
	--FROM #tempInvSummary AS ts 
	--LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
	--LEFT JOIN MD_Location l ON ts.Location=l.Code
	
	--INSERT INTO #tempResult(Item, Location, SAPLocation, BOPQty, InputQty, OutputQty, EOPQty)
	--SELECT ios.Item,ios.Location,l.SAPLocation,0 AS BOPQty, 
	--ios.InputQty,ios.OutputQty,ios.InputQty-ios.OutputQty AS EOPQty
	--FROM #tempInvSummary AS ts 
	--RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
	--LEFT JOIN MD_Location l ON ios.Location=l.Code
	--WHERE ts.Item IS NULL
	

	---最后的查询结果,包含2个数据集,一个是总数一个是分页数据
	IF @IsSummaryBySAPLoc=1
	BEGIN
		--汇总到SAP库位
		SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ts.Item,l.SAPLocation AS Location,
			SUM(ts.BOPQty) AS BOPQty, SUM(ISNULL(ios.InputQty,0)) AS InputQty,SUM(ISNULL(ios.OutputQty,0)) AS OutputQty,
			SUM(ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0)) AS EOPQty
			FROM #tempInvSummary AS ts 
			LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
			INNER JOIN MD_Location l ON ts.Location=l.Code GROUP BY ts.Item,l.SAPLocation) AS T
			WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
		insert into #TempResult 
		exec(@SqlHeader)
		
		SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ios.Item,l.SAPLocation AS Location,
			0 AS BOPQty, SUM(ios.InputQty) AS InputQty, SUM(ios.OutputQty) AS OutputQty, SUM(ios.InputQty-ios.OutputQty) AS EOPQty
			FROM #tempInvSummary AS ts 
			RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
			INNER JOIN MD_Location l ON ios.Location=l.Code
			WHERE ts.Item IS NULL GROUP BY ios.Item,l.SAPLocation) AS T
			WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
		insert into #TempResult 
		exec(@SqlHeader)			
			
		select count(1) from #TempResult
		exec('select top('+@PageSize+')  Location, Item, BOPQty, InputQty, OutputQty, EOPQty from #TempResult '+@PagePara) 		
	END
	ELSE
	BEGIN
		IF @SummaryLevel=0
		BEGIN
			--不汇总
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ts.Item,ts.Location,
				ts.BOPQty, ISNULL(ios.InputQty,0) AS InputQty,ISNULL(ios.OutputQty,0) AS OutputQty,
				ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0) AS EOPQty
				FROM #tempInvSummary AS ts 
				LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)
			
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ios.Item, ios.Location,
				0 AS BOPQty, ios.InputQty, ios.OutputQty, ios.InputQty-ios.OutputQty AS EOPQty
				FROM #tempInvSummary AS ts 
				RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				WHERE ts.Item IS NULL) AS T WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			INSERT INTO #TempResult 
			EXEC(@SqlHeader)			

			PRINT @SqlHeader	
			SELECT count(1) from #TempResult
			EXEC('select top('+@PageSize+')  Location, Item, BOPQty, InputQty, OutputQty, EOPQty from #TempResult '+@PagePara)
		END
		ELSE IF @SummaryLevel=1
		BEGIN
			--汇总到区域			
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ts.Item,l.Region AS Location,
				SUM(ts.BOPQty) AS BOPQty, SUM(ISNULL(ios.InputQty,0)) AS InputQty,SUM(ISNULL(ios.OutputQty,0)) AS OutputQty,
				SUM(ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0)) AS EOPQty
				FROM #tempInvSummary AS ts 
				LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ts.Location=l.Code GROUP BY ts.Item,l.Region) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)
			
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ios.Item,l.Region AS Location,
				0 AS BOPQty, SUM(ios.InputQty) AS InputQty, SUM(ios.OutputQty) AS OutputQty, SUM(ios.InputQty-ios.OutputQty) AS EOPQty
				FROM #tempInvSummary AS ts 
				RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ios.Location=l.Code
				WHERE ts.Item IS NULL GROUP BY ios.Item,l.Region) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)			
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, BOPQty, InputQty, OutputQty, EOPQty from #TempResult '+@PagePara) 		
		END
		ELSE IF @SummaryLevel=2
		BEGIN
			--汇总到车间
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ts.Item,r.Workshop AS Location,
				SUM(ts.BOPQty) AS BOPQty, SUM(ISNULL(ios.InputQty,0)) AS InputQty,SUM(ISNULL(ios.OutputQty,0)) AS OutputQty,
				SUM(ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0)) AS EOPQty
				FROM #tempInvSummary AS ts 
				LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ts.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region GROUP BY ts.Item,r.Workshop) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)
			
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ios.Item,r.Workshop AS Location,
				0 AS BOPQty, SUM(ios.InputQty) AS InputQty, SUM(ios.OutputQty) AS OutputQty, SUM(ios.InputQty-ios.OutputQty) AS EOPQty
				FROM #tempInvSummary AS ts 
				RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ios.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				WHERE ts.Item IS NULL  GROUP BY ios.Item,r.Workshop) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)			
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, BOPQty, InputQty, OutputQty, EOPQty from #TempResult '+@PagePara) 	
		END
		ELSE IF @SummaryLevel=3
		BEGIN
			--汇总到工厂

			--汇总到车间
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ts.Item,r.Plant AS Location,
				SUM(ts.BOPQty) AS BOPQty, SUM(ISNULL(ios.InputQty,0)) AS InputQty,SUM(ISNULL(ios.OutputQty,0)) AS OutputQty,
				SUM(ts.BOPQty+ISNULL(ios.InputQty,0)-ISNULL(ios.OutputQty,0)) AS EOPQty
				FROM #tempInvSummary AS ts 
				LEFT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ts.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region GROUP BY ts.Item,r.Plant) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)
			
			SET @SqlHeader = 'SELECT  row_number() over('+@SortDesc+'), * FROM( SELECT ios.Item,r.Plant AS Location,
				0 AS BOPQty, SUM(ios.InputQty) AS InputQty, SUM(ios.OutputQty) AS OutputQty, SUM(ios.InputQty-ios.OutputQty) AS EOPQty
				FROM #tempInvSummary AS ts 
				RIGHT JOIN #tempIOSummary AS ios ON ts.Item=ios.Item AND ts.Location=ios.Location
				INNER JOIN MD_Location l ON ios.Location=l.Code
				INNER JOIN MD_Region r ON r.Code=l.Region
				WHERE ts.Item IS NULL  GROUP BY ios.Item,r.Plant) AS T
				WHERE BOPQty<>0 OR InputQty<>0 OR OutputQty<>0 OR EOPQty<>0'
			insert into #TempResult 
			exec(@SqlHeader)			
				
			select count(1) from #TempResult
			exec('select top('+@PageSize+')  Location, Item, BOPQty, InputQty, OutputQty, EOPQty from #TempResult '+@PagePara) 	
		END
	END		
	DROP TABLE #tempIOSummary
	DROP TABLE #tempInvSummary
	DROP TABLE #tempStandarInv
	DROP TABLE #tempTransSummary	
END
GO
PRINT N'Creating [dbo].[USP_Split_IpDet_INSERT]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_IpDet_INSERT]
(
	@Version int,
	@Type tinyint,
	@IpNo varchar(50),
	@Seq int,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@ExtNo varchar(50),
	@ExtSeq varchar(50),
	@Flow varchar(50),
	@Item varchar(50),
	@ItemDesc varchar(100),
	@RefItemCode varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@UC decimal(18,8),
	@UCDesc varchar(50),
	@StartTime datetime,
	@WindowTime datetime,
	@QualityType tinyint,
	@ManufactureParty varchar(50),
	@Qty decimal(18,8),
	@RecQty decimal(18,8),
	@UnitQty decimal(18,8),
	@LocFrom varchar(50),
	@LocFromNm varchar(100),
	@LocTo varchar(50),
	@LocToNm varchar(100),
	@IsInspect bit,
	@BillAddr varchar(50),
	@PriceList varchar(50),
	@UnitPrice decimal(18,8),
	@Currency varchar(50),
	@IsProvEst bit,
	@Tax varchar(50),
	@IsIncludeTax bit,
	@BillTerm tinyint,
	@IsClose bit,
	@GapRecNo varchar(50),
	@GapIpDetId int,
	@BinTo varchar(50),
	@IsScanHu bit,
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Container varchar(50),
	@ContainerDesc varchar(50),
	@IsChangeUC bit,
	@BWART varchar(50),
	@PSTYP varchar(50)
)
AS
BEGIN
	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='ORD_IpDet')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='ORD_IpDet'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='ORD_IpDet'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('ORD_IpDet',1)
			SET @Id=1
		END
	COMMIT TRAN

	IF @OrderType=1
	BEGIN
		INSERT INTO ORD_IpDet_1(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=2
	BEGIN
		INSERT INTO ORD_IpDet_2(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=3
	BEGIN
		INSERT INTO ORD_IpDet_3(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=4
	BEGIN
		INSERT INTO ORD_IpDet_4(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=5
	BEGIN
		INSERT INTO ORD_IpDet_5(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=6
	BEGIN
		INSERT INTO ORD_IpDet_6(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END	
	ELSE IF @OrderType=7
	BEGIN
		INSERT INTO ORD_IpDet_7(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END
	ELSE IF @OrderType=8
	BEGIN
		INSERT INTO ORD_IpDet_8(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END				
	ELSE
	BEGIN
		INSERT INTO ORD_IpDet_0(Id,Version,Type,IpNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,StartTime,WindowTime,QualityType,ManufactureParty,Qty,RecQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,IsClose,GapRecNo,GapIpDetId,BinTo,IsScanHu,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,IsChangeUC,BWART,PSTYP)
		VALUES(@Id,@Version,@Type,@IpNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@UCDesc,@StartTime,@WindowTime,@QualityType,@ManufactureParty,@Qty,@RecQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@IsClose,@GapRecNo,@GapIpDetId,@BinTo,@IsScanHu,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@Container,@ContainerDesc,@IsChangeUC,@BWART,@PSTYP)
	END		
	
	SELECT @Id							
END
GO
PRINT N'Creating [dbo].[USP_Split_IpDet_UPDATE]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_IpDet_UPDATE]
(
	@Version int,
	@Type tinyint,
	@IpNo varchar(50),
	@Seq int,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@ExtNo varchar(50),
	@ExtSeq varchar(50),
	@Flow varchar(50),
	@Item varchar(50),
	@ItemDesc varchar(100),
	@RefItemCode varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@UC decimal(18,8),
	@UCDesc varchar(50),
	@StartTime datetime,
	@WindowTime datetime,
	@QualityType tinyint,
	@ManufactureParty varchar(50),
	@Qty decimal(18,8),
	@RecQty decimal(18,8),
	@UnitQty decimal(18,8),
	@LocFrom varchar(50),
	@LocFromNm varchar(100),
	@LocTo varchar(50),
	@LocToNm varchar(100),
	@IsInspect bit,
	@BillAddr varchar(50),
	@PriceList varchar(50),
	@UnitPrice decimal(18,8),
	@Currency varchar(50),
	@IsProvEst bit,
	@Tax varchar(50),
	@IsIncludeTax bit,
	@BillTerm tinyint,
	@IsClose bit,
	@GapRecNo varchar(50),
	@GapIpDetId int,
	@BinTo varchar(50),
	@IsScanHu bit,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Container varchar(50),
	@ContainerDesc varchar(50),
	@IsChangeUC bit,
	@BWART varchar(50),
	@PSTYP varchar(50),
	@Id int,
	@VersionBerfore int
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		UPDATE ORD_IpDet_1 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=2
	BEGIN
		UPDATE ORD_IpDet_2 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=3
	BEGIN
		UPDATE ORD_IpDet_3 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=4
	BEGIN
		UPDATE ORD_IpDet_4 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=5
	BEGIN
		UPDATE ORD_IpDet_5 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=6
	BEGIN
		UPDATE ORD_IpDet_6 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=7
	BEGIN
		UPDATE ORD_IpDet_7 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=8
	BEGIN
		UPDATE ORD_IpDet_8 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE
	BEGIN
		UPDATE ORD_IpDet_0 SET Version=@Version,Type=@Type,IpNo=@IpNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,UCDesc=@UCDesc,StartTime=@StartTime,WindowTime=@WindowTime,QualityType=@QualityType,ManufactureParty=@ManufactureParty,Qty=@Qty,RecQty=@RecQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,IsClose=@IsClose,GapRecNo=@GapRecNo,GapIpDetId=@GapIpDetId,BinTo=@BinTo,IsScanHu=@IsScanHu,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,Container=@Container,ContainerDesc=@ContainerDesc,IsChangeUC=@IsChangeUC,BWART=@BWART,PSTYP=@PSTYP
		WHERE Id=@Id AND Version=@VersionBerfore
	END						
END
GO
PRINT N'Creating [dbo].[USP_Split_IpLocationDet_INSERT]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_IpLocationDet_INSERT]
(
	@Version int,
	@IpNo varchar(50),
	@IpDetId int,
	@OrderType tinyint,
	@OrderDetId int,
	@Item varchar(50),
	@HuId varchar(50),
	@LotNo varchar(50),
	@IsCreatePlanBill bit,
	@IsCS bit,
	@PlanBill int,
	@ActBill int,
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@Qty decimal(18,8),
	@RecQty decimal(18,8),
	@IsClose bit,
	@WMSSeq varchar(50),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime
)
AS
BEGIN

	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='ORD_IpLocationDet')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='ORD_IpLocationDet'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='ORD_IpLocationDet'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('ORD_IpLocationDet',1)
			SET @Id=1
		END
	COMMIT TRAN
	
	IF @OrderType=1
	BEGIN
		INSERT INTO ORD_IpLocationDet_1(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=2
	BEGIN
		INSERT INTO ORD_IpLocationDet_2(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=3
	BEGIN
		INSERT INTO ORD_IpLocationDet_3(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=4
	BEGIN
		INSERT INTO ORD_IpLocationDet_4(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=5
	BEGIN
		INSERT INTO ORD_IpLocationDet_5(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=6
	BEGIN
		INSERT INTO ORD_IpLocationDet_6(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=7
	BEGIN
		INSERT INTO ORD_IpLocationDet_7(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE IF @OrderType=8
	BEGIN
		INSERT INTO ORD_IpLocationDet_8(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	ELSE 
	BEGIN
		INSERT INTO ORD_IpLocationDet_0(Id,Version,IpNo,IpDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,RecQty,IsClose,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@VERSION,@IpNo,@IpDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@RecQty,@IsClose,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[USP_Split_IpLocationDet_UPDATE]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_IpLocationDet_UPDATE]
(
	@Version int,
	@IpNo varchar(50),
	@IpDetId int,
	@OrderType tinyint,
	@OrderDetId int,
	@Item varchar(50),
	@HuId varchar(50),
	@LotNo varchar(50),
	@IsCreatePlanBill bit,
	@IsCS bit,
	@PlanBill int,
	@ActBill int,
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@Qty decimal(18,8),
	@RecQty decimal(18,8),
	@IsClose bit,
	@WMSSeq varchar(50),
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Id int,
	@VersionBerfore int
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		UPDATE ORD_IpLocationDet_1 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=2
	BEGIN
		UPDATE ORD_IpLocationDet_2 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=3
	BEGIN
		UPDATE ORD_IpLocationDet_3 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=4
	BEGIN
		UPDATE ORD_IpLocationDet_4 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=5
	BEGIN
		UPDATE ORD_IpLocationDet_5 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=6
	BEGIN
		UPDATE ORD_IpLocationDet_6 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=7
	BEGIN
		UPDATE ORD_IpLocationDet_7 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=8
	BEGIN
		UPDATE ORD_IpLocationDet_8 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
	ELSE 
	BEGIN
		UPDATE ORD_IpLocationDet_0 SET Version=@Version,IpNo=@IpNo,IpDetId=@IpDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,RecQty=@RecQty,IsClose=@IsClose,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id AND Version=@VersionBerfore
	END
END
GO
PRINT N'Creating [dbo].[USP_Split_IpMstr_Insert]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_IpMstr_Insert]
(
	@Version int,
	@ExtIpNo varchar(50),
	@GapIpNo varchar(50),
	@SeqNo varchar(50),
	@Flow varchar(50),
	@Type tinyint,
	@OrderType tinyint,
	@OrderSubType tinyint,
	@QualityType tinyint,
	@Status tinyint,
	@DepartTime datetime,
	@ArriveTime datetime,
	@PartyFrom varchar(50),
	@PartyFromNm varchar(100),
	@PartyTo varchar(50),
	@PartyToNm varchar(100),
	@ShipFrom varchar(50),
	@ShipFromAddr varchar(256),
	@ShipFromTel varchar(50),
	@ShipFromCell varchar(50),
	@ShipFromFax varchar(50),
	@ShipFromContact varchar(50),
	@ShipTo varchar(50),
	@ShipToAddr varchar(256),
	@ShipToTel varchar(50),
	@ShipToCell varchar(50),
	@ShipToFax varchar(50),
	@ShipToContact varchar(50),
	@Dock varchar(100),
	@IsAutoReceive bit,
	@IsShipScanHu bit,
	@CreateHuOpt tinyint,
	@IsPrintAsn bit,
	@IsAsnPrinted bit,
	@IsPrintRec bit,
	@IsRecExceed bit,
	@IsRecFulfillUC bit,
	@IsRecFifo bit,
	@IsAsnUniqueRec bit,
	@IsRecScanHu bit,
	@RecGapTo tinyint,
	@AsnTemplate varchar(100),
	@RecTemplate varchar(100),
	@HuTemplate varchar(100),
	@EffDate datetime,
	@WMSNo varchar(50),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@CloseDate datetime,
	@CloseUser int,
	@CloseUserNm varchar(100),
	@CloseReason varchar(256),
	@IsCheckPartyFromAuth bit,
	@IsCheckPartyToAuth bit,
	@ShipNo varchar(50),
	@Vehicle varchar(50),
	@IpNo varchar(4000)
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		INSERT INTO ORD_IpMstr_1(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=2
	BEGIN
		INSERT INTO ORD_IpMstr_2(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=3
	BEGIN
		INSERT INTO ORD_IpMstr_3(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=4
	BEGIN
		INSERT INTO ORD_IpMstr_4(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=5
	BEGIN
		INSERT INTO ORD_IpMstr_5(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=6
	BEGIN
		INSERT INTO ORD_IpMstr_6(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=7
	BEGIN
		INSERT INTO ORD_IpMstr_7(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END	
	ELSE IF @OrderType=8
	BEGIN
		INSERT INTO ORD_IpMstr_8(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,@OrderType,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END			
	ELSE
	BEGIN
		INSERT INTO ORD_IpMstr_0(Version,ExtIpNo,GapIpNo,SeqNo,Flow,Type,OrderType,OrderSubType,QualityType,Status,DepartTime,ArriveTime,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,IsAutoReceive,IsShipScanHu,CreateHuOpt,IsPrintAsn,IsAsnPrinted,IsPrintRec,IsRecExceed,IsRecFulfillUC,IsRecFifo,IsAsnUniqueRec,IsRecScanHu,RecGapTo,AsnTemplate,RecTemplate,HuTemplate,EffDate,WMSNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,CloseDate,CloseUser,CloseUserNm,CloseReason,IsCheckPartyFromAuth,IsCheckPartyToAuth,ShipNo,Vehicle,IpNo)
		VALUES(@Version,@ExtIpNo,@GapIpNo,@SeqNo,@Flow,@Type,0,@OrderSubType,@QualityType,@Status,@DepartTime,@ArriveTime,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@IsAutoReceive,@IsShipScanHu,@CreateHuOpt,@IsPrintAsn,@IsAsnPrinted,@IsPrintRec,@IsRecExceed,@IsRecFulfillUC,@IsRecFifo,@IsAsnUniqueRec,@IsRecScanHu,@RecGapTo,@AsnTemplate,@RecTemplate,@HuTemplate,@EffDate,@WMSNo,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@CloseDate,@CloseUser,@CloseUserNm,@CloseReason,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@ShipNo,@Vehicle,@IpNo)
		SELECT SCOPE_IDENTITY()
	END							
END
GO
PRINT N'Creating [dbo].[USP_Split_IpMstr_UPDATE]...';


GO

CREATE PROCEDURE [dbo].[USP_Split_IpMstr_UPDATE]
(
 @Version int,
 @ExtIpNo varchar(50),
 @GapIpNo varchar(50),
 @SeqNo varchar(50),
 @Flow varchar(50),
 @Type tinyint,
 @OrderType tinyint,
 @OrderSubType tinyint,
 @QualityType tinyint,
 @Status tinyint,
 @DepartTime datetime,
 @ArriveTime datetime,
 @PartyFrom varchar(50),
 @PartyFromNm varchar(100),
 @PartyTo varchar(50),
 @PartyToNm varchar(100),
 @ShipFrom varchar(50),
 @ShipFromAddr varchar(256),
 @ShipFromTel varchar(50),
 @ShipFromCell varchar(50),
 @ShipFromFax varchar(50),
 @ShipFromContact varchar(50),
 @ShipTo varchar(50),
 @ShipToAddr varchar(256),
 @ShipToTel varchar(50),
 @ShipToCell varchar(50),
 @ShipToFax varchar(50),
 @ShipToContact varchar(50),
 @Dock varchar(100),
 @IsAutoReceive bit,
 @IsShipScanHu bit,
 @CreateHuOpt tinyint,
 @IsPrintAsn bit,
 @IsAsnPrinted bit,
 @IsPrintRec bit,
 @IsRecExceed bit,
 @IsRecFulfillUC bit,
 @IsRecFifo bit,
 @IsAsnUniqueRec bit,
 @IsRecScanHu bit,
 @RecGapTo tinyint,
 @AsnTemplate varchar(100),
 @RecTemplate varchar(100),
 @HuTemplate varchar(100),
 @EffDate datetime,
 @WMSNo varchar(50),
 @LastModifyUser int,
 @LastModifyUserNm varchar(100),
 @LastModifyDate datetime,
 @CloseDate datetime,
 @CloseUser int,
 @CloseUserNm varchar(100),
 @CloseReason varchar(256),
 @IsCheckPartyFromAuth bit,
 @IsCheckPartyToAuth bit,
 @ShipNo varchar(50),
 @Vehicle varchar(50),
 @IpNo varchar(4000),
 @VersionBerfore int
)
AS
BEGIN
 IF @OrderType=1
 BEGIN
  UPDATE ORD_IpMstr_1 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=2
 BEGIN
  UPDATE ORD_IpMstr_2 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=3
 BEGIN
  UPDATE ORD_IpMstr_3 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=4
 BEGIN
  UPDATE ORD_IpMstr_4 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=5
 BEGIN
  UPDATE ORD_IpMstr_5 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=6
 BEGIN
  UPDATE ORD_IpMstr_6 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=7
 BEGIN
  UPDATE ORD_IpMstr_7 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=8
 BEGIN
  UPDATE ORD_IpMstr_8 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
 ELSE 
 BEGIN
  UPDATE ORD_IpMstr_0 SET Version=@Version,ExtIpNo=@ExtIpNo,GapIpNo=@GapIpNo,SeqNo=@SeqNo,Flow=@Flow,Type=@Type,OrderType=0,OrderSubType=@OrderSubType,QualityType=@QualityType,Status=@Status,DepartTime=@DepartTime,ArriveTime=@ArriveTime,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,IsAutoReceive=@IsAutoReceive,IsShipScanHu=@IsShipScanHu,CreateHuOpt=@CreateHuOpt,IsPrintAsn=@IsPrintAsn,IsAsnPrinted=@IsAsnPrinted,IsPrintRec=@IsPrintRec,IsRecExceed=@IsRecExceed,IsRecFulfillUC=@IsRecFulfillUC,IsRecFifo=@IsRecFifo,IsAsnUniqueRec=@IsAsnUniqueRec,IsRecScanHu=@IsRecScanHu,RecGapTo=@RecGapTo,AsnTemplate=@AsnTemplate,RecTemplate=@RecTemplate,HuTemplate=@HuTemplate,EffDate=@EffDate,WMSNo=@WMSNo,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,CloseDate=@CloseDate,CloseUser=@CloseUser,CloseUserNm=@CloseUserNm,CloseReason=@CloseReason,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,ShipNo=@ShipNo,Vehicle=@Vehicle,IpNo=@IpNo
  WHERE IpNo=@IpNo AND Version=@VersionBerfore
 END
       
END
GO
PRINT N'Creating [dbo].[USP_Split_LocationLotDet_INSERT]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocationLotDet_INSERT]
(
	@Version int,
	@Location varchar(50),
	@Bin varchar(50),
	@Item varchar(50),
	@LotNo varchar(50),
	@HuId varchar(50),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@CSSupplier varchar(50),
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime
)
AS
BEGIN
	SET NOCOUNT ON
	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='INV_LocationLotDet')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='INV_LocationLotDet'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='INV_LocationLotDet'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('INV_LocationLotDet',1)
			SET @Id=1
		END
	COMMIT TRAN
	
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @PartSuffix varchar(50)
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
		--RAISERROR ('Can''t get any data from table' , 16, 1) WITH NOWAIT
	END 
	
	SET @Statement=N'INSERT INTO INV_LocationLotDet_'+@PartSuffix+'(Id,Version,Location,Bin,Item,LotNo,HuId,Qty,IsCS,PlanBill,CSSupplier,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate) VALUES (@Id_1,@Version_1,@Location_1,@Bin_1,@Item_1,@LotNo_1,@HuId_1,@Qty_1,@IsCS_1,@PlanBill_1,@CSSupplier_1,@QualityType_1,@IsFreeze_1,@IsATP_1,@OccupyType_1,@OccupyRefNo_1,@CreateUser_1,@CreateUserNm_1,@CreateDate_1,@LastModifyUser_1,@LastModifyUserNm_1,@LastModifyDate_1)'
	SET @Parameter=N'@Id_1 int,@Version_1 int,@Location_1 varchar(50),@Bin_1 varchar(50),@Item_1 varchar(50),@LotNo_1 varchar(50),@HuId_1 varchar(50),@Qty_1 decimal(18,8),@IsCS_1 bit,@PlanBill_1 int,@CSSupplier_1 varchar(50),@QualityType_1 tinyint,@IsFreeze_1 bit,@IsATP_1 bit,@OccupyType_1 tinyint,@OccupyRefNo_1 varchar(50),@CreateUser_1 int,@CreateUserNm_1 varchar(100),@CreateDate_1 datetime,@LastModifyUser_1 int,@LastModifyUserNm_1 varchar(100),@LastModifyDate_1 datetime'
	
	exec sp_executesql @Statement,@Parameter,
		@Id_1=@Id,@Version_1=@Version,@Location_1=@Location,@Bin_1=@Bin,@Item_1=@Item,@LotNo_1=@LotNo,@HuId_1=@HuId,
		@Qty_1=@Qty,@IsCS_1=@IsCS,@PlanBill_1=@PlanBill,@CSSupplier_1=@CSSupplier,@QualityType_1=@QualityType,@IsFreeze_1=@IsFreeze,@IsATP_1=@IsATP,
		@OccupyType_1=@OccupyType,@OccupyRefNo_1=@OccupyRefNo,@CreateUser_1=@CreateUser,@CreateUserNm_1=@CreateUserNm,
		@CreateDate_1=@CreateDate,@LastModifyUser_1=@LastModifyUser,@LastModifyUserNm_1=@LastModifyUserNm,@LastModifyDate_1=@LastModifyDate	
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[USP_Split_LocationLotDet_UPDATE]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocationLotDet_UPDATE]
(
	@Version int,
	@Location varchar(50),
	@Bin varchar(50),
	@Item varchar(50),
	@LotNo varchar(50),
	@HuId varchar(50),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@CSSupplier varchar(50),
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Id int,
	@VersionBerfore int
)
AS
BEGIN
	--SET NOCOUNT ON;
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @PartSuffix varchar(50)
	SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @Location
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
	END 
	
	SET @Statement='UPDATE INV_LocationLotDet_'+@PartSuffix+' SET Version=@Version_1,Location=@Location_1,Bin=@Bin_1,Item=@Item_1,LotNo=@LotNo_1,HuId=@HuId_1,Qty=@Qty_1,IsCS=@IsCS_1,PlanBill=@PlanBill_1,CSSupplier=@CSSupplier_1,QualityType=@QualityType_1,IsFreeze=@IsFreeze_1,IsATP=@IsATP_1,OccupyType=@OccupyType_1,OccupyRefNo=@OccupyRefNo_1,LastModifyUser=@LastModifyUser_1,LastModifyUserNm=@LastModifyUserNm_1,LastModifyDate=@LastModifyDate_1 WHERE Id=@Id_1 AND Version=@VersionBerfore_1'
	SET @Parameter=N'@Version_1 int,@Location_1 varchar(50),@Bin_1 varchar(50),@Item_1 varchar(50),@LotNo_1 varchar(50),@HuId_1 varchar(50),@Qty_1 decimal(18,8),@IsCS_1 bit,@PlanBill_1 int,@CSSupplier_1 varchar(50),@QualityType_1 tinyint,@IsFreeze_1 bit,@IsATP_1 bit,@OccupyType_1 tinyint,@OccupyRefNo_1 varchar(50),@LastModifyUser_1 int,@LastModifyUserNm_1 varchar(100),@LastModifyDate_1 datetime,@Id_1 int,@VersionBerfore_1 int'
	PRINT @Statement

	exec sp_executesql @Statement,@Parameter,
		@Version_1=@Version,@Location_1=@Location,@Bin_1=@Bin,@Item_1=@Item,@LotNo_1=@LotNo,@HuId_1=@HuId,@Qty_1=@Qty,
		@IsCS_1=@IsCS,@PlanBill_1=@PlanBill,@CSSupplier_1=@CSSupplier,@QualityType_1=@QualityType,@IsFreeze_1=@IsFreeze,@IsATP_1=@IsATP,@OccupyType_1=@OccupyType,
		@OccupyRefNo_1=@OccupyRefNo,@LastModifyUser_1=@LastModifyUser,@LastModifyUserNm_1=@LastModifyUserNm,
		@LastModifyDate_1=@LastModifyDate,@Id_1=@Id,@VersionBerfore_1=@VersionBerfore
END
GO
PRINT N'Creating [dbo].[USP_Split_LocTrans_INSERT]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocTrans_INSERT]
(
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@OrderBomDetId int,
	@OrderBomDetSeq int,
	@IpNo varchar(50),
	@IpDetId int,
	@IpDetSeq int,
	@RecNo varchar(50),
	@RecDetId int,
	@RecDetSeq int,
	@SeqNo varchar(50),
	@TraceCode varchar(50),
	@Item varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@PlanBillQty decimal(18,8),
	@ActBill int,
	@ActBillQty decimal(18,8),
	@UnitQty decimal(18,8),
	@QualityType tinyint,
	@HuId varchar(50),
	@LotNo varchar(50),
	@TransType int,
	@IOType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocFrom varchar(50),
	@LocTo varchar(50),
	@LocIOReason varchar(50),
	@EffDate datetime,
	@CreateUser int,
	@CreateDate datetime
)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='INV_LocTrans')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='INV_LocTrans'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='INV_LocTrans'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('INV_LocTrans',1)
			SET @Id=1
		END
	COMMIT TRAN

	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @PartSuffix varchar(50)
	IF @IOType=0
	BEGIN
		SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @LocTo
	END
	ELSE
	BEGIN
		SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @LocFrom
	END
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
	END 	
	
	SET @Statement=N'INSERT INTO INV_LocTrans_'+@PartSuffix+'(Id,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,OrderBomDetId,OrderBomDetSeq,IpNo,IpDetId,IpDetSeq,RecNo,RecDetId,RecDetSeq,SeqNo,TraceCode,Item,Uom,BaseUom,Qty,IsCS,PlanBill,PlanBillQty,ActBill,ActBillQty,UnitQty,QualityType,HuId,LotNo,TransType,IOType,PartyFrom,PartyTo,LocFrom,LocTo,LocIOReason,EffDate,CreateUser,CreateDate) 
	VALUES (@Id_1,@OrderNo_1,@OrderType_1,@OrderSubType_1,@OrderDetSeq_1,@OrderDetId_1,@OrderBomDetId_1,@OrderBomDetSeq_1,@IpNo_1,@IpDetId_1,@IpDetSeq_1,@RecNo_1,@RecDetId_1,@RecDetSeq_1,@SeqNo_1,@TraceCode_1,@Item_1,@Uom_1,@BaseUom_1,@Qty_1,@IsCS_1,@PlanBill_1,@PlanBillQty_1,@ActBill_1,@ActBillQty_1,@UnitQty_1,@QualityType_1,@HuId_1,@LotNo_1,@TransType_1,@IOType_1,@PartyFrom_1,@PartyTo_1,@LocFrom_1,@LocTo_1,@LocIOReason_1,@EffDate_1,@CreateUser_1,@CreateDate_1)'
	SET @Parameter=N'@Id_1 int,@OrderNo_1 varchar(50),@OrderType_1 tinyint,@OrderSubType_1 tinyint,@OrderDetSeq_1 int,@OrderDetId_1 int,@OrderBomDetId_1 int,@OrderBomDetSeq_1 int,@IpNo_1 varchar(50),@IpDetId_1 int,@IpDetSeq_1 int,@RecNo_1 varchar(50),@RecDetId_1 int,@RecDetSeq_1 int,@SeqNo_1 varchar(50),@TraceCode_1 varchar(50),@Item_1 varchar(50),@Uom_1 varchar(5),@BaseUom_1 varchar(5),@Qty_1 decimal(18,8),@IsCS_1 bit,@PlanBill_1 int,@PlanBillQty_1 decimal(18,8),@ActBill_1 int,@ActBillQty_1 decimal(18,8),@UnitQty_1 decimal(18,8),@QualityType_1 tinyint,@HuId_1 varchar(50),@LotNo_1 varchar(50),@TransType_1 int,@IOType_1 tinyint,@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@LocFrom_1 varchar(50),@LocTo_1 varchar(50),@LocIOReason_1 varchar(50),@EffDate_1 datetime,@CreateUser_1 int,@CreateDate_1 datetime'
	
	exec sp_executesql @Statement,@Parameter,
		@Id_1=@Id,@OrderNo_1=@OrderNo,@OrderType_1=@OrderType,@OrderSubType_1=@OrderSubType,@OrderDetSeq_1=@OrderDetSeq,
		@OrderDetId_1=@OrderDetId,@OrderBomDetId_1=@OrderBomDetId,@OrderBomDetSeq_1=@OrderBomDetSeq,@IpNo_1=@IpNo,
		@IpDetId_1=@IpDetId,@IpDetSeq_1=@IpDetSeq,@RecNo_1=@RecNo,@RecDetId_1=@RecDetId,@RecDetSeq_1=@RecDetSeq,
		@SeqNo_1=@SeqNo,@TraceCode_1=@TraceCode,@Item_1=@Item,@Uom_1=@Uom,@BaseUom_1=@BaseUom,@Qty_1=@Qty,
		@IsCS_1=@IsCS,@PlanBill_1=@PlanBill,@PlanBillQty_1=@PlanBillQty,@ActBill_1=@ActBill,@ActBillQty_1=@ActBillQty,
		@UnitQty_1=@UnitQty,@QualityType_1=@QualityType,@HuId_1=@HuId,@LotNo_1=@LotNo,@TransType_1=@TransType,
		@IOType_1=@IOType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@LocFrom_1=@LocFrom,@LocTo_1=@LocTo,
		@LocIOReason_1=@LocIOReason,@EffDate_1=@EffDate,@CreateUser_1=@CreateUser,@CreateDate_1=@CreateDate
	--IF @TransType=301
	--BEGIN
	--	INSERT INTO INV_LocTrans_1(Id,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,OrderBomDetId,OrderBomDetSeq,IpNo,IpDetId,IpDetSeq,RecNo,RecDetId,RecDetSeq,SeqNo,TraceCode,Item,Uom,BaseUom,Qty,IsCS,PlanBill,PlanBillQty,ActBill,ActBillQty,UnitQty,QualityType,HuId,LotNo,TransType,IOType,PartyFrom,PartyTo,LocFrom,LocTo,LocIOReason,EffDate,CreateUser,CreateDate)
	--	VALUES(@Id,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@OrderBomDetId,@OrderBomDetSeq,@IpNo,@IpDetId,@IpDetSeq,@RecNo,@RecDetId,@RecDetSeq,@SeqNo,@TraceCode,@Item,@Uom,@BaseUom,@Qty,@IsCS,@PlanBill,@PlanBillQty,@ActBill,@ActBillQty,@UnitQty,@QualityType,@HuId,@LotNo,@TransType,@IOType,@PartyFrom,@PartyTo,@LocFrom,@LocTo,@LocIOReason,@EffDate,@CreateUser,@CreateDate)
	--END
	--ELSE
	--BEGIN
	--	INSERT INTO INV_LocTrans_0(Id,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,OrderBomDetId,OrderBomDetSeq,IpNo,IpDetId,IpDetSeq,RecNo,RecDetId,RecDetSeq,SeqNo,TraceCode,Item,Uom,BaseUom,Qty,IsCS,PlanBill,PlanBillQty,ActBill,ActBillQty,UnitQty,QualityType,HuId,LotNo,TransType,IOType,PartyFrom,PartyTo,LocFrom,LocTo,LocIOReason,EffDate,CreateUser,CreateDate)
	--	VALUES(@Id,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@OrderBomDetId,@OrderBomDetSeq,@IpNo,@IpDetId,@IpDetSeq,@RecNo,@RecDetId,@RecDetSeq,@SeqNo,@TraceCode,@Item,@Uom,@BaseUom,@Qty,@IsCS,@PlanBill,@PlanBillQty,@ActBill,@ActBillQty,@UnitQty,@QualityType,@HuId,@LotNo,@TransType,@IOType,@PartyFrom,@PartyTo,@LocFrom,@LocTo,@LocIOReason,@EffDate,@CreateUser,@CreateDate)
	--END
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[USP_Split_LocTrans_UPDATE]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocTrans_UPDATE]
(
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@OrderBomDetId int,
	@OrderBomDetSeq int,
	@IpNo varchar(50),
	@IpDetId int,
	@IpDetSeq int,
	@RecNo varchar(50),
	@RecDetId int,
	@RecDetSeq int,
	@SeqNo varchar(50),
	@TraceCode varchar(50),
	@Item varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@PlanBillQty decimal(18,8),
	@ActBill int,
	@ActBillQty decimal(18,8),
	@UnitQty decimal(18,8),
	@QualityType tinyint,
	@HuId varchar(50),
	@LotNo varchar(50),
	@TransType int,
	@IOType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocFrom varchar(50),
	@LocTo varchar(50),
	@LocIOReason varchar(50),
	@EffDate datetime,
	@Id int
)
AS
BEGIN
	--SET NOCOUNT ON;
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameter nvarchar(4000)
	DECLARE @PartSuffix varchar(50)
	IF @IOType=0
	BEGIN
		SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @LocTo
	END
	ELSE
	BEGIN
		SELECT @PartSuffix = PartSuffix FROM MD_Location WHERE Code = @LocFrom
	END
	
	IF ISNULL(@PartSuffix,'')=''
	BEGIN
		SET @PartSuffix='0'
	END 
	
	SET @Statement='UPDATE INV_LocTrans_'+@PartSuffix+' SET OrderNo=@OrderNo_1,OrderType=@OrderType_1,OrderSubType=@OrderSubType_1,OrderDetSeq=@OrderDetSeq_1,OrderDetId=@OrderDetId_1,OrderBomDetId=@OrderBomDetId_1,OrderBomDetSeq=@OrderBomDetSeq_1,IpNo=@IpNo_1,IpDetId=@IpDetId_1,IpDetSeq=@IpDetSeq_1,RecNo=@RecNo_1,RecDetId=@RecDetId_1,RecDetSeq=@RecDetSeq_1,SeqNo=@SeqNo_1,TraceCode=@TraceCode_1,Item=@Item_1,Uom=@Uom_1,BaseUom=@BaseUom_1,Qty=@Qty_1,IsCS=@IsCS_1,PlanBill=@PlanBill_1,PlanBillQty=@PlanBillQty_1,ActBill=@ActBill_1,ActBillQty=@ActBillQty_1,UnitQty=@UnitQty_1,QualityType=@QualityType_1,HuId=@HuId_1,LotNo=@LotNo_1,TransType=@TransType_1,IOType=@IOType_1,PartyFrom=@PartyFrom_1,PartyTo=@PartyTo_1,LocFrom=@LocFrom_1,LocTo=@LocTo_1,LocIOReason=@LocIOReason_1,EffDate=@EffDate_1 WHERE Id=@Id'
	SET @Parameter=N'@OrderNo_1 varchar(50),@OrderType_1 tinyint,@OrderSubType_1 tinyint,@OrderDetSeq_1 int,@OrderDetId_1 int,@OrderBomDetId_1 int,@OrderBomDetSeq_1 int,@IpNo_1 varchar(50),@IpDetId_1 int,@IpDetSeq_1 int,@RecNo_1 varchar(50),@RecDetId_1 int,@RecDetSeq_1 int,@SeqNo_1 varchar(50),@TraceCode_1 varchar(50),@Item_1 varchar(50),@Uom_1 varchar(5),@BaseUom_1 varchar(5),@Qty_1 decimal(18,8),@IsCS_1 bit,@PlanBill_1 int,@PlanBillQty_1 decimal(18,8),@ActBill_1 int,@ActBillQty_1 decimal(18,8),@UnitQty_1 decimal(18,8),@QualityType_1 tinyint,@HuId_1 varchar(50),@LotNo_1 varchar(50),@TransType_1 int,@IOType_1 tinyint,@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@LocFrom_1 varchar(50),@LocTo_1 varchar(50),@LocIOReason_1 varchar(50),@EffDate_1 datetime,@Id_1 int'
	
	exec sp_executesql @Statement,@Parameter,
		@OrderNo_1=@OrderNo,@OrderType_1=@OrderType,@OrderSubType_1=@OrderSubType,@OrderDetSeq_1=@OrderDetSeq,
		@OrderDetId_1=@OrderDetId,@OrderBomDetId_1=@OrderBomDetId,@OrderBomDetSeq_1=@OrderBomDetSeq,@IpNo_1=@IpNo,
		@IpDetId_1=@IpDetId,@IpDetSeq_1=@IpDetSeq,@RecNo_1=@RecNo,@RecDetId_1=@RecDetId,@RecDetSeq_1=@RecDetSeq,
		@SeqNo_1=@SeqNo,@TraceCode_1=@TraceCode,@Item_1=@Item,@Uom_1=@Uom,@BaseUom_1=@BaseUom,@Qty_1=@Qty,
		@IsCS_1=@IsCS,@PlanBill_1=@PlanBill,@PlanBillQty_1=@PlanBillQty,@ActBill_1=@ActBill,@ActBillQty_1=@ActBillQty,
		@UnitQty_1=@UnitQty,@QualityType_1=@QualityType,@HuId_1=@HuId,@LotNo_1=@LotNo,@TransType_1=@TransType,
		@IOType_1=@IOType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@LocFrom_1=@LocFrom,@LocTo_1=@LocTo,
		@LocIOReason_1=@LocIOReason,@EffDate_1=@EffDate,@Id_1=@Id
END
GO
PRINT N'Creating [dbo].[USP_Split_LocTransDet_INSERT]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocTransDet_INSERT]
(
	@LocTransId bigint,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@OrderBomDetId int,
	@OrderBomDetSeq int,
	@IpNo varchar(50),
	@IpDetId int,
	@IpDetSeq int,
	@RecNo varchar(50),
	@RecDetId int,
	@RecDetSeq int,
	@SeqNo varchar(50),
	@BillTransId int,
	@LocLotDetId int,
	@TraceCode varchar(50),
	@Item varchar(50),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@PlanBillQty decimal(18,8),
	@ActBill int,
	@ActBillQty decimal(18,8),
	@QualityType tinyint,
	@HuId varchar(50),
	@LotNo varchar(50),
	@TransType int,
	@IOType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocFrom varchar(50),
	@LocTo varchar(50),
	@Bin varchar(50),
	@PlanBackflushId int,
	@LocIOReason varchar(50),
	@EffDate datetime,
	@CreateUser int,
	@CreateDate datetime
)
AS
BEGIN
	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='INV_LocTransDet')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='INV_LocTransDet'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='INV_LocTransDet'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('INV_LocTransDet',1)
			SET @Id=1
		END
	COMMIT TRAN
	
	IF @TransType='301'
	BEGIN
		INSERT INTO INV_LocTransDet_1(Id,LocTransId,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,OrderBomDetId,OrderBomDetSeq,IpNo,IpDetId,IpDetSeq,RecNo,RecDetId,RecDetSeq,SeqNo,BillTransId,LocLotDetId,TraceCode,Item,Qty,IsCS,PlanBill,PlanBillQty,ActBill,ActBillQty,QualityType,HuId,LotNo,TransType,IOType,PartyFrom,PartyTo,LocFrom,LocTo,Bin,PlanBackflushId,LocIOReason,EffDate,CreateUser,CreateDate)
		VALUES(@Id,@LocTransId,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@OrderBomDetId,@OrderBomDetSeq,@IpNo,@IpDetId,@IpDetSeq,@RecNo,@RecDetId,@RecDetSeq,@SeqNo,@BillTransId,@LocLotDetId,@TraceCode,@Item,@Qty,@IsCS,@PlanBill,@PlanBillQty,@ActBill,@ActBillQty,@QualityType,@HuId,@LotNo,@TransType,@IOType,@PartyFrom,@PartyTo,@LocFrom,@LocTo,@Bin,@PlanBackflushId,@LocIOReason,@EffDate,@CreateUser,@CreateDate)
	END
	ELSE
	BEGIN
		INSERT INTO INV_LocTransDet_0(Id,LocTransId,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,OrderBomDetId,OrderBomDetSeq,IpNo,IpDetId,IpDetSeq,RecNo,RecDetId,RecDetSeq,SeqNo,BillTransId,LocLotDetId,TraceCode,Item,Qty,IsCS,PlanBill,PlanBillQty,ActBill,ActBillQty,QualityType,HuId,LotNo,TransType,IOType,PartyFrom,PartyTo,LocFrom,LocTo,Bin,PlanBackflushId,LocIOReason,EffDate,CreateUser,CreateDate)
		VALUES(@Id,@LocTransId,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@OrderBomDetId,@OrderBomDetSeq,@IpNo,@IpDetId,@IpDetSeq,@RecNo,@RecDetId,@RecDetSeq,@SeqNo,@BillTransId,@LocLotDetId,@TraceCode,@Item,@Qty,@IsCS,@PlanBill,@PlanBillQty,@ActBill,@ActBillQty,@QualityType,@HuId,@LotNo,@TransType,@IOType,@PartyFrom,@PartyTo,@LocFrom,@LocTo,@Bin,@PlanBackflushId,@LocIOReason,@EffDate,@CreateUser,@CreateDate)
	END
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[USP_Split_LocTransDet_UPDATE]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_LocTransDet_UPDATE]
(
	@LocTransId bigint,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@OrderDetSeq int,
	@OrderDetId int,
	@OrderBomDetId int,
	@OrderBomDetSeq int,
	@IpNo varchar(50),
	@IpDetId int,
	@IpDetSeq int,
	@RecNo varchar(50),
	@RecDetId int,
	@RecDetSeq int,
	@SeqNo varchar(50),
	@BillTransId int,
	@LocLotDetId int,
	@TraceCode varchar(50),
	@Item varchar(50),
	@Qty decimal(18,8),
	@IsCS bit,
	@PlanBill int,
	@PlanBillQty decimal(18,8),
	@ActBill int,
	@ActBillQty decimal(18,8),
	@QualityType tinyint,
	@HuId varchar(50),
	@LotNo varchar(50),
	@TransType int,
	@IOType tinyint,
	@PartyFrom varchar(50),
	@PartyTo varchar(50),
	@LocFrom varchar(50),
	@LocTo varchar(50),
	@Bin varchar(50),
	@PlanBackflushId int,
	@LocIOReason varchar(50),
	@EffDate datetime,
	@Id int
)
AS
BEGIN
	IF @TransType=301
	BEGIN
		UPDATE INV_LocTransDet_1 SET LocTransId=@LocTransId,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,OrderBomDetId=@OrderBomDetId,OrderBomDetSeq=@OrderBomDetSeq,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,RecNo=@RecNo,RecDetId=@RecDetId,RecDetSeq=@RecDetSeq,SeqNo=@SeqNo,BillTransId=@BillTransId,LocLotDetId=@LocLotDetId,TraceCode=@TraceCode,Item=@Item,Qty=@Qty,IsCS=@IsCS,PlanBill=@PlanBill,PlanBillQty=@PlanBillQty,ActBill=@ActBill,ActBillQty=@ActBillQty,QualityType=@QualityType,HuId=@HuId,LotNo=@LotNo,TransType=@TransType,IOType=@IOType,PartyFrom=@PartyFrom,PartyTo=@PartyTo,LocFrom=@LocFrom,LocTo=@LocTo,Bin=@Bin,PlanBackflushId=@PlanBackflushId,LocIOReason=@LocIOReason,EffDate=@EffDate
		WHERE Id=@Id
	END
	ELSE
	BEGIN
		UPDATE INV_LocTransDet_0 SET LocTransId=@LocTransId,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,OrderBomDetId=@OrderBomDetId,OrderBomDetSeq=@OrderBomDetSeq,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,RecNo=@RecNo,RecDetId=@RecDetId,RecDetSeq=@RecDetSeq,SeqNo=@SeqNo,BillTransId=@BillTransId,LocLotDetId=@LocLotDetId,TraceCode=@TraceCode,Item=@Item,Qty=@Qty,IsCS=@IsCS,PlanBill=@PlanBill,PlanBillQty=@PlanBillQty,ActBill=@ActBill,ActBillQty=@ActBillQty,QualityType=@QualityType,HuId=@HuId,LotNo=@LotNo,TransType=@TransType,IOType=@IOType,PartyFrom=@PartyFrom,PartyTo=@PartyTo,LocFrom=@LocFrom,LocTo=@LocTo,Bin=@Bin,PlanBackflushId=@PlanBackflushId,LocIOReason=@LocIOReason,EffDate=@EffDate
		WHERE Id=@Id
	END
END
GO
PRINT N'Creating [dbo].[USP_Split_OrderDet_UPDATE]...';


GO
-----CREATE UPDATE SP
CREATE PROCEDURE USP_Split_OrderDet_UPDATE
(
	@Version int,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@Seq int,
	@ExtNo varchar(50),
	@ExtSeq varchar(50),
	@StartDate datetime,
	@EndDate datetime,
	@ScheduleType tinyint,
	@Item varchar(50),
	@ItemDesc varchar(100),
	@RefItemCode varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@UC decimal(18,8),
	@UCDesc varchar(50),
	@MinUC decimal(18,8),
	@QualityType tinyint,
	@ManufactureParty varchar(50),
	@ReqQty decimal(18,8),
	@OrderQty decimal(18,8),
	@ShipQty decimal(18,8),
	@RecQty decimal(18,8),
	@RejQty decimal(18,8),
	@ScrapQty decimal(18,8),
	@PickQty decimal(18,8),
	@UnitQty decimal(18,8),
	@RecLotSize decimal(18,8),
	@LocFrom varchar(50),
	@LocFromNm varchar(100),
	@LocTo varchar(50),
	@LocToNm varchar(100),
	@IsInspect bit,
	@BillAddr varchar(50),
	@BillAddrDesc varchar(256),
	@PriceList varchar(50),
	@UnitPrice decimal(18,8),
	@IsProvEst bit,
	@Tax varchar(50),
	@IsIncludeTax bit,
	@Currency varchar(50),
	@Bom varchar(50),
	@Routing varchar(50),
	@BillTerm tinyint,
	@IsScanHu bit,
	@ReserveNo varchar(50),
	@ReserveLine varchar(50),
	@ZOPWZ varchar(50),
	@ZOPID varchar(50),
	@ZOPDS varchar(50),
	@BinTo varchar(50),
	@WMSSeq varchar(50),
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Container varchar(50),
	@ContainerDesc varchar(50),
	@PickStrategy varchar(50),
	@ExtraDmdSource varchar(256),
	@IsChangeUC bit,
	@AUFNR varchar(50),
	@ICHARG varchar(50),
	@BWART varchar(50),
	@IsCreatePickList bit,
	@Id int,
	@VersionBerfore int
)
AS
BEGIN
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameters nvarchar(4000)
	SET @Statement='UPDATE ORD_OrderDet_' + CONVERT(varchar(1), @OrderType) + ' SET Version=@Version_1,OrderNo=@OrderNo_1,OrderType=@OrderType_1,OrderSubType=@OrderSubType_1,Seq=@Seq_1,ExtNo=@ExtNo_1,ExtSeq=@ExtSeq_1,StartDate=@StartDate_1,EndDate=@EndDate_1,ScheduleType=@ScheduleType_1,Item=@Item_1,ItemDesc=@ItemDesc_1,RefItemCode=@RefItemCode_1,Uom=@Uom_1,BaseUom=@BaseUom_1,UC=@UC_1,UCDesc=@UCDesc_1,MinUC=@MinUC_1,QualityType=@QualityType_1,ManufactureParty=@ManufactureParty_1,ReqQty=@ReqQty_1,OrderQty=@OrderQty_1,ShipQty=@ShipQty_1,RecQty=@RecQty_1,RejQty=@RejQty_1,ScrapQty=@ScrapQty_1,PickQty=@PickQty_1,UnitQty=@UnitQty_1,RecLotSize=@RecLotSize_1,LocFrom=@LocFrom_1,LocFromNm=@LocFromNm_1,LocTo=@LocTo_1,LocToNm=@LocToNm_1,IsInspect=@IsInspect_1,BillAddr=@BillAddr_1,BillAddrDesc=@BillAddrDesc_1,PriceList=@PriceList_1,UnitPrice=@UnitPrice_1,IsProvEst=@IsProvEst_1,Tax=@Tax_1,IsIncludeTax=@IsIncludeTax_1,Currency=@Currency_1,Bom=@Bom_1,Routing=@Routing_1,BillTerm=@BillTerm_1,IsScanHu=@IsScanHu_1,ReserveNo=@ReserveNo_1,ReserveLine=@ReserveLine_1,ZOPWZ=@ZOPWZ_1,ZOPID=@ZOPID_1,ZOPDS=@ZOPDS_1,BinTo=@BinTo_1,WMSSeq=@WMSSeq_1,LastModifyUser=@LastModifyUser_1,LastModifyUserNm=@LastModifyUserNm_1,LastModifyDate=@LastModifyDate_1,Container=@Container_1,ContainerDesc=@ContainerDesc_1,PickStrategy=@PickStrategy_1,ExtraDmdSource=@ExtraDmdSource_1,IsChangeUC=@IsChangeUC_1,AUFNR=@AUFNR_1,ICHARG=@ICHARG_1,BWART=@BWART_1,IsCreatePickList=@IsCreatePickList_1 WHERE Id=@Id_1 AND Version=@VersionBerfore_1'
	SET @Parameters='@Version_1 int, @OrderNo_1 varchar(50), @OrderType_1 tinyint, @OrderSubType_1 tinyint, @Seq_1 int, @ExtNo_1 varchar(50), @ExtSeq_1 varchar(50), @StartDate_1 datetime, @EndDate_1 datetime, @ScheduleType_1 tinyint, @Item_1 varchar(50), @ItemDesc_1 varchar(100), @RefItemCode_1 varchar(50), @Uom_1 varchar(5), @BaseUom_1 varchar(5), @UC_1 decimal(18,8), @UCDesc_1 varchar(50), @MinUC_1 decimal(18,8), @QualityType_1 tinyint, @ManufactureParty_1 varchar(50), @ReqQty_1 decimal(18,8), @OrderQty_1 decimal(18,8), @ShipQty_1 decimal(18,8), @RecQty_1 decimal(18,8), @RejQty_1 decimal(18,8), @ScrapQty_1 decimal(18,8), @PickQty_1 decimal(18,8), @UnitQty_1 decimal(18,8), @RecLotSize_1 decimal(18,8), @LocFrom_1 varchar(50), @LocFromNm_1 varchar(100), @LocTo_1 varchar(50), @LocToNm_1 varchar(100), @IsInspect_1 bit, @BillAddr_1 varchar(50), @BillAddrDesc_1 varchar(256), @PriceList_1 varchar(50), @UnitPrice_1 decimal(18,8), @IsProvEst_1 bit, @Tax_1 varchar(50), @IsIncludeTax_1 bit, @Currency_1 varchar(50), @Bom_1 varchar(50), @Routing_1 varchar(50), @BillTerm_1 tinyint, @IsScanHu_1 bit, @ReserveNo_1 varchar(50), @ReserveLine_1 varchar(50), @ZOPWZ_1 varchar(50), @ZOPID_1 varchar(50), @ZOPDS_1 varchar(50), @BinTo_1 varchar(50), @WMSSeq_1 varchar(50), @LastModifyUser_1 int, @LastModifyUserNm_1 varchar(100), @LastModifyDate_1 datetime, @Container_1 varchar(50), @ContainerDesc_1 varchar(50), @PickStrategy_1 varchar(50), @ExtraDmdSource_1 varchar(256), @IsChangeUC_1 bit, @AUFNR_1 varchar(50), @ICHARG_1 varchar(50), @BWART_1 varchar(50), @IsCreatePickList_1 bit, @Id_1 int, @VersionBerfore_1 int'
	EXEC SP_EXECUTESQL @Statement,@Parameters,@Version_1=@Version,@OrderNo_1=@OrderNo,@OrderType_1=@OrderType,@OrderSubType_1=@OrderSubType,@Seq_1=@Seq,@ExtNo_1=@ExtNo,@ExtSeq_1=@ExtSeq,@StartDate_1=@StartDate,@EndDate_1=@EndDate,@ScheduleType_1=@ScheduleType,@Item_1=@Item,@ItemDesc_1=@ItemDesc,@RefItemCode_1=@RefItemCode,@Uom_1=@Uom,@BaseUom_1=@BaseUom,@UC_1=@UC,@UCDesc_1=@UCDesc,@MinUC_1=@MinUC,@QualityType_1=@QualityType,@ManufactureParty_1=@ManufactureParty,@ReqQty_1=@ReqQty,@OrderQty_1=@OrderQty,@ShipQty_1=@ShipQty,@RecQty_1=@RecQty,@RejQty_1=@RejQty,@ScrapQty_1=@ScrapQty,@PickQty_1=@PickQty,@UnitQty_1=@UnitQty,@RecLotSize_1=@RecLotSize,@LocFrom_1=@LocFrom,@LocFromNm_1=@LocFromNm,@LocTo_1=@LocTo,@LocToNm_1=@LocToNm,@IsInspect_1=@IsInspect,@BillAddr_1=@BillAddr,@BillAddrDesc_1=@BillAddrDesc,@PriceList_1=@PriceList,@UnitPrice_1=@UnitPrice,@IsProvEst_1=@IsProvEst,@Tax_1=@Tax,@IsIncludeTax_1=@IsIncludeTax,@Currency_1=@Currency,@Bom_1=@Bom,@Routing_1=@Routing,@BillTerm_1=@BillTerm,@IsScanHu_1=@IsScanHu,@ReserveNo_1=@ReserveNo,@ReserveLine_1=@ReserveLine,@ZOPWZ_1=@ZOPWZ,@ZOPID_1=@ZOPID,@ZOPDS_1=@ZOPDS,@BinTo_1=@BinTo,@WMSSeq_1=@WMSSeq,@LastModifyUser_1=@LastModifyUser,@LastModifyUserNm_1=@LastModifyUserNm,@LastModifyDate_1=@LastModifyDate,@Container_1=@Container,@ContainerDesc_1=@ContainerDesc,@PickStrategy_1=@PickStrategy,@ExtraDmdSource_1=@ExtraDmdSource,@IsChangeUC_1=@IsChangeUC,@AUFNR_1=@AUFNR,@ICHARG_1=@ICHARG,@BWART_1=@BWART,@IsCreatePickList_1=@IsCreatePickList,@Id_1=@Id,@VersionBerfore_1=@VersionBerfore
END
GO
PRINT N'Creating [dbo].[USP_Split_OrderMstr_Delete]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Split_OrderMstr_Delete]
@OrderNo VARCHAR (4000), @Version INT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Split_OrderMstr_INSERT]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Split_OrderMstr_INSERT]
@Version INT, @Flow VARCHAR (50), @FlowDesc VARCHAR (50), @TraceCode VARCHAR (50), @RefOrderNo VARCHAR (50), @ExtOrderNo VARCHAR (50), @Type TINYINT, @SubType TINYINT, @QualityType TINYINT, @StartTime DATETIME, @WindowTime DATETIME, @PauseStatus TINYINT, @PauseSeq INT, @PauseTime DATETIME, @EffDate DATETIME, @Priority TINYINT, @Status TINYINT, @PartyFrom VARCHAR (50), @PartyFromNm VARCHAR (100), @PartyTo VARCHAR (50), @PartyToNm VARCHAR (100), @ShipFrom VARCHAR (50), @ShipFromAddr VARCHAR (256), @ShipFromTel VARCHAR (50), @ShipFromCell VARCHAR (50), @ShipFromFax VARCHAR (50), @ShipFromContact VARCHAR (50), @ShipToAddr VARCHAR (256), @ShipTo VARCHAR (50), @ShipToTel VARCHAR (50), @ShipToCell VARCHAR (50), @ShipToFax VARCHAR (50), @ShipToContact VARCHAR (50), @Shift VARCHAR (50), @LocFrom VARCHAR (50), @LocFromNm VARCHAR (100), @LocTo VARCHAR (50), @LocToNm VARCHAR (100), @IsInspect BIT, @BillAddr VARCHAR (50), @BillAddrDesc VARCHAR (256), @PriceList VARCHAR (50), @Currency VARCHAR (50), @Dock VARCHAR (100), @Routing VARCHAR (50), @CurtOp INT, @IsAutoRelease BIT, @IsAutoStart BIT, @IsAutoShip BIT, @IsAutoReceive BIT, @IsAutoBill BIT, @IsManualCreateDet BIT, @IsListPrice BIT, @IsPrintOrder BIT, @IsOrderPrinted BIT, @IsPrintAsn BIT, @IsPrintRec BIT, @IsShipExceed BIT, @IsRecExceed BIT, @IsOrderFulfillUC BIT, @IsShipFulfillUC BIT, @IsRecFulfillUC BIT, @IsShipScanHu BIT, @IsRecScanHu BIT, @IsCreatePL BIT, @IsPLCreate BIT, @IsShipFifo BIT, @IsRecFifo BIT, @IsShipByOrder BIT, @IsOpenOrder BIT, @IsAsnUniqueRec BIT, @RecGapTo TINYINT, @RecTemplate VARCHAR (100), @OrderTemplate VARCHAR (100), @AsnTemplate VARCHAR (100), @HuTemplate VARCHAR (100), @BillTerm TINYINT, @CreateHuOpt TINYINT, @ReCalculatePriceOpt TINYINT, @WMSNo VARCHAR (50), @CreateUser INT, @CreateUserNm VARCHAR (100), @CreateDate DATETIME, @LastModifyUser INT, @LastModifyUserNm VARCHAR (100), @LastModifyDate DATETIME, @ReleaseDate DATETIME, @ReleaseUser INT, @ReleaseUserNm VARCHAR (100), @StartDate DATETIME, @StartUser INT, @StartUserNm VARCHAR (100), @CompleteDate DATETIME, @CompleteUser INT, @CompleteUserNm VARCHAR (100), @CloseDate DATETIME, @CloseUser INT, @CloseUserNm VARCHAR (100), @CancelDate DATETIME, @CancelUser INT, @CancelUserNm VARCHAR (100), @CancelReason VARCHAR (256), @OrderStrategy TINYINT, @ProdLineFact VARCHAR (50), @IsQuick BIT, @PickStrategy VARCHAR (50), @ExtraDmdSource VARCHAR (256), @ProdLineType TINYINT, @SeqGroup VARCHAR (50), @OrderNo VARCHAR (4000)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Split_OrderMstr_UPDATE]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Split_OrderMstr_UPDATE]
@Version INT, @Flow VARCHAR (50), @FlowDesc VARCHAR (50), @TraceCode VARCHAR (50), @RefOrderNo VARCHAR (50), @ExtOrderNo VARCHAR (50), @Type TINYINT, @SubType TINYINT, @QualityType TINYINT, @StartTime DATETIME, @WindowTime DATETIME, @PauseStatus TINYINT, @PauseSeq INT, @PauseTime DATETIME, @EffDate DATETIME, @Priority TINYINT, @Status TINYINT, @PartyFrom VARCHAR (50), @PartyFromNm VARCHAR (100), @PartyTo VARCHAR (50), @PartyToNm VARCHAR (100), @ShipFrom VARCHAR (50), @ShipFromAddr VARCHAR (256), @ShipFromTel VARCHAR (50), @ShipFromCell VARCHAR (50), @ShipFromFax VARCHAR (50), @ShipFromContact VARCHAR (50), @ShipToAddr VARCHAR (256), @ShipTo VARCHAR (50), @ShipToTel VARCHAR (50), @ShipToCell VARCHAR (50), @ShipToFax VARCHAR (50), @ShipToContact VARCHAR (50), @Shift VARCHAR (50), @LocFrom VARCHAR (50), @LocFromNm VARCHAR (100), @LocTo VARCHAR (50), @LocToNm VARCHAR (100), @IsInspect BIT, @BillAddr VARCHAR (50), @BillAddrDesc VARCHAR (256), @PriceList VARCHAR (50), @Currency VARCHAR (50), @Dock VARCHAR (100), @Routing VARCHAR (50), @CurtOp INT, @IsAutoRelease BIT, @IsAutoStart BIT, @IsAutoShip BIT, @IsAutoReceive BIT, @IsAutoBill BIT, @IsManualCreateDet BIT, @IsListPrice BIT, @IsPrintOrder BIT, @IsOrderPrinted BIT, @IsPrintAsn BIT, @IsPrintRec BIT, @IsShipExceed BIT, @IsRecExceed BIT, @IsOrderFulfillUC BIT, @IsShipFulfillUC BIT, @IsRecFulfillUC BIT, @IsShipScanHu BIT, @IsRecScanHu BIT, @IsCreatePL BIT, @IsPLCreate BIT, @IsShipFifo BIT, @IsRecFifo BIT, @IsShipByOrder BIT, @IsOpenOrder BIT, @IsAsnUniqueRec BIT, @RecGapTo TINYINT, @RecTemplate VARCHAR (100), @OrderTemplate VARCHAR (100), @AsnTemplate VARCHAR (100), @HuTemplate VARCHAR (100), @BillTerm TINYINT, @CreateHuOpt TINYINT, @ReCalculatePriceOpt TINYINT, @WMSNo VARCHAR (50), @LastModifyUser INT, @LastModifyUserNm VARCHAR (100), @LastModifyDate DATETIME, @ReleaseDate DATETIME, @ReleaseUser INT, @ReleaseUserNm VARCHAR (100), @StartDate DATETIME, @StartUser INT, @StartUserNm VARCHAR (100), @CompleteDate DATETIME, @CompleteUser INT, @CompleteUserNm VARCHAR (100), @CloseDate DATETIME, @CloseUser INT, @CloseUserNm VARCHAR (100), @CancelDate DATETIME, @CancelUser INT, @CancelUserNm VARCHAR (100), @CancelReason VARCHAR (256), @OrderStrategy TINYINT, @ProdLineFact VARCHAR (50), @IsQuick BIT, @PickStrategy VARCHAR (50), @ExtraDmdSource VARCHAR (256), @ProdLineType TINYINT, @SeqGroup VARCHAR (50), @OrderNo VARCHAR (4000), @VersionBerfore INT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Split_RecDet_INSERT]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_RecDet_INSERT]
(
 @Version int,
 @RecNo varchar(50),
 @Seq int,
 @OrderNo varchar(50),
 @OrderType tinyint,
 @OrderSubType tinyint,
 @OrderDetSeq int,
 @OrderDetId int,
 @IpNo varchar(50),
 @IpDetId int,
 @IpDetSeq int,
 @IpDetType tinyint,
 @IpGapAdjOpt tinyint,
 @ExtNo varchar(50),
 @ExtSeq varchar(50),
 @Flow varchar(50),
 @Item varchar(50),
 @ItemDesc varchar(100),
 @RefItemCode varchar(50),
 @Uom varchar(5),
 @BaseUom varchar(5),
 @UC decimal(18,8),
 @QualityType tinyint,
 @ManufactureParty varchar(50),
 @RecQty decimal(18,8),
 @ScrapQty decimal(18,8),
 @UnitQty decimal(18,8),
 @LocFrom varchar(50),
 @LocFromNm varchar(100),
 @LocTo varchar(50),
 @LocToNm varchar(100),
 @IsInspect bit,
 @BillAddr varchar(50),
 @PriceList varchar(50),
 @UnitPrice decimal(18,8),
 @Currency varchar(50),
 @IsProvEst bit,
 @Tax varchar(50),
 @IsIncludeTax bit,
 @BillTerm tinyint,
 @CreateUser int,
 @CreateUserNm varchar(100),
 @CreateDate datetime,
 @LastModifyUser int,
 @LastModifyUserNm varchar(100),
 @LastModifyDate datetime
)
AS
BEGIN
 DECLARE @Id bigint
 BEGIN TRAN
  IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='ORD_OrderDet')
  BEGIN
   SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='ORD_OrderDet'
   UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='ORD_OrderDet'
  END
  ELSE
  BEGIN
   INSERT INTO SYS_TabIdSeq(TabNm,Id)
   VALUES('ORD_OrderDet',1)
   SET @Id=1
  END
 COMMIT TRAN
 
 IF @OrderType=1
 BEGIN
  INSERT INTO ORD_RecDet_1(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=2
 BEGIN
  INSERT INTO ORD_RecDet_2(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=3
 BEGIN
  INSERT INTO ORD_RecDet_3(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=4
 BEGIN
  INSERT INTO ORD_RecDet_4(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=5
 BEGIN
  INSERT INTO ORD_RecDet_5(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=6
 BEGIN
  INSERT INTO ORD_RecDet_6(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=7
 BEGIN
  INSERT INTO ORD_RecDet_7(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE IF @OrderType=8
 BEGIN
  INSERT INTO ORD_RecDet_8(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,@OrderType,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END
 ELSE 
 BEGIN
  INSERT INTO ORD_RecDet_0(Id,Version,RecNo,Seq,OrderNo,OrderType,OrderSubType,OrderDetSeq,OrderDetId,IpNo,IpDetId,IpDetSeq,IpDetType,IpGapAdjOpt,ExtNo,ExtSeq,Flow,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,QualityType,ManufactureParty,RecQty,ScrapQty,UnitQty,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,PriceList,UnitPrice,Currency,IsProvEst,Tax,IsIncludeTax,BillTerm,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
  VALUES(@Id,@Version,@RecNo,@Seq,@OrderNo,0,@OrderSubType,@OrderDetSeq,@OrderDetId,@IpNo,@IpDetId,@IpDetSeq,@IpDetType,@IpGapAdjOpt,@ExtNo,@ExtSeq,@Flow,@Item,@ItemDesc,@RefItemCode,@Uom,@BaseUom,@UC,@QualityType,@ManufactureParty,@RecQty,@ScrapQty,@UnitQty,@LocFrom,@LocFromNm,@LocTo,@LocToNm,@IsInspect,@BillAddr,@PriceList,@UnitPrice,@Currency,@IsProvEst,@Tax,@IsIncludeTax,@BillTerm,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
 END      
 SELECT @Id  
 
END
GO
PRINT N'Creating [dbo].[USP_Split_RecDet_UPDATE]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_RecDet_UPDATE]
(
 @Version int,
 @RecNo varchar(50),
 @Seq int,
 @OrderNo varchar(50),
 @OrderType tinyint,
 @OrderSubType tinyint,
 @OrderDetSeq int,
 @OrderDetId int,
 @IpNo varchar(50),
 @IpDetId int,
 @IpDetSeq int,
 @IpDetType tinyint,
 @IpGapAdjOpt tinyint,
 @ExtNo varchar(50),
 @ExtSeq varchar(50),
 @Flow varchar(50),
 @Item varchar(50),
 @ItemDesc varchar(100),
 @RefItemCode varchar(50),
 @Uom varchar(5),
 @BaseUom varchar(5),
 @UC decimal(18,8),
 @QualityType tinyint,
 @ManufactureParty varchar(50),
 @RecQty decimal(18,8),
 @ScrapQty decimal(18,8),
 @UnitQty decimal(18,8),
 @LocFrom varchar(50),
 @LocFromNm varchar(100),
 @LocTo varchar(50),
 @LocToNm varchar(100),
 @IsInspect bit,
 @BillAddr varchar(50),
 @PriceList varchar(50),
 @UnitPrice decimal(18,8),
 @Currency varchar(50),
 @IsProvEst bit,
 @Tax varchar(50),
 @IsIncludeTax bit,
 @BillTerm tinyint,
 @LastModifyUser int,
 @LastModifyUserNm varchar(100),
 @LastModifyDate datetime,
 @Id int,
 @VersionBerfore int
)
AS
BEGIN
 IF @OrderType=1
 BEGIN
  UPDATE ORD_RecDet_1 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END
 ELSE IF @OrderType=2
 BEGIN
  UPDATE ORD_RecDet_2 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=3
 BEGIN
  UPDATE ORD_RecDet_3 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=4
 BEGIN
  UPDATE ORD_RecDet_4 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=5
 BEGIN
  UPDATE ORD_RecDet_5 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=6
 BEGIN
  UPDATE ORD_RecDet_6 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=7
 BEGIN
  UPDATE ORD_RecDet_7 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE IF @OrderType=8
 BEGIN
  UPDATE ORD_RecDet_8 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=@OrderType,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
 ELSE
 BEGIN
  UPDATE ORD_RecDet_0 SET Version=@Version,RecNo=@RecNo,Seq=@Seq,OrderNo=@OrderNo,OrderType=0,OrderSubType=@OrderSubType,OrderDetSeq=@OrderDetSeq,OrderDetId=@OrderDetId,IpNo=@IpNo,IpDetId=@IpDetId,IpDetSeq=@IpDetSeq,IpDetType=@IpDetType,IpGapAdjOpt=@IpGapAdjOpt,ExtNo=@ExtNo,ExtSeq=@ExtSeq,Flow=@Flow,Item=@Item,ItemDesc=@ItemDesc,RefItemCode=@RefItemCode,Uom=@Uom,BaseUom=@BaseUom,UC=@UC,QualityType=@QualityType,ManufactureParty=@ManufactureParty,RecQty=@RecQty,ScrapQty=@ScrapQty,UnitQty=@UnitQty,LocFrom=@LocFrom,LocFromNm=@LocFromNm,LocTo=@LocTo,LocToNm=@LocToNm,IsInspect=@IsInspect,BillAddr=@BillAddr,PriceList=@PriceList,UnitPrice=@UnitPrice,Currency=@Currency,IsProvEst=@IsProvEst,Tax=@Tax,IsIncludeTax=@IsIncludeTax,BillTerm=@BillTerm,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
  WHERE Id=@Id AND Version=@VersionBerfore
 END 
END
GO
PRINT N'Creating [dbo].[USP_Split_RecLocationDet_INSERT]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_RecLocationDet_INSERT]
(
	@RecNo varchar(50),
	@RecDetId int,
	@OrderType tinyint,
	@OrderDetId int,
	@Item varchar(50),
	@HuId varchar(50),
	@LotNo varchar(50),
	@IsCreatePlanBill bit,
	@IsCS bit,
	@PlanBill int,
	@ActBill int,
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@Qty decimal(18,8),
	@WMSSeq varchar(50),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime
)
AS
BEGIN
	DECLARE @Id bigint
	BEGIN TRAN
		IF EXISTS (SELECT * FROM SYS_TabIdSeq WITH (UPDLOCK,SERIALIZABLE) WHERE TabNm='ORD_RecLocationDet')
		BEGIN
			SELECT @Id=Id+1 FROM SYS_TabIdSeq WHERE TabNm='ORD_RecLocationDet'
			UPDATE SYS_TabIdSeq SET Id=Id+1 WHERE TabNm='ORD_RecLocationDet'
		END
		ELSE
		BEGIN
			INSERT INTO SYS_TabIdSeq(TabNm,Id)
			VALUES('ORD_RecLocationDet',1)
			SET @Id=1
		END
	COMMIT TRAN
	
	IF @OrderType=1
	BEGIN
		INSERT INTO ORD_RecLocationDet_1(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=2
	BEGIN
		INSERT INTO ORD_RecLocationDet_2(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END		
	ELSE IF @OrderType=3
	BEGIN
		INSERT INTO ORD_RecLocationDet_3(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=4
	BEGIN
		INSERT INTO ORD_RecLocationDet_4(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=5
	BEGIN
		INSERT INTO ORD_RecLocationDet_5(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=6
	BEGIN
		INSERT INTO ORD_RecLocationDet_6(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=7
	BEGIN
		INSERT INTO ORD_RecLocationDet_7(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE IF @OrderType=8
	BEGIN
		INSERT INTO ORD_RecLocationDet_8(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	ELSE
	BEGIN
		INSERT INTO ORD_RecLocationDet_0(Id,RecNo,RecDetId,OrderType,OrderDetId,Item,HuId,LotNo,IsCreatePlanBill,IsCS,PlanBill,ActBill,QualityType,IsFreeze,IsATP,OccupyType,OccupyRefNo,Qty,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate)
		VALUES(@Id,@RecNo,@RecDetId,@OrderType,@OrderDetId,@Item,@HuId,@LotNo,@IsCreatePlanBill,@IsCS,@PlanBill,@ActBill,@QualityType,@IsFreeze,@IsATP,@OccupyType,@OccupyRefNo,@Qty,@WMSSeq,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate)
	END	
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[USP_Split_RecLocationDet_UPDATE]...';


GO
CREATE PROCEDURE [dbo].[USP_Split_RecLocationDet_UPDATE]
(
	@RecNo varchar(50),
	@RecDetId int,
	@OrderType tinyint,
	@OrderDetId int,
	@Item varchar(50),
	@HuId varchar(50),
	@LotNo varchar(50),
	@IsCreatePlanBill bit,
	@IsCS bit,
	@PlanBill int,
	@ActBill int,
	@QualityType tinyint,
	@IsFreeze bit,
	@IsATP bit,
	@OccupyType tinyint,
	@OccupyRefNo varchar(50),
	@Qty decimal(18,8),
	@WMSSeq varchar(50),
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Id int
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		UPDATE ORD_RecLocationDet_1 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=2
	BEGIN
		UPDATE ORD_RecLocationDet_2 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=3
	BEGIN
		UPDATE ORD_RecLocationDet_3 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=4
	BEGIN
		UPDATE ORD_RecLocationDet_4 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=5
	BEGIN
		UPDATE ORD_RecLocationDet_5 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=6
	BEGIN
		UPDATE ORD_RecLocationDet_6 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END
	ELSE IF @OrderType=7
	BEGIN
		UPDATE ORD_RecLocationDet_7 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END	
	ELSE IF @OrderType=8
	BEGIN
		UPDATE ORD_RecLocationDet_8 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=@OrderType,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END	
	ELSE
	BEGIN
		UPDATE ORD_RecLocationDet_0 SET RecNo=@RecNo,RecDetId=@RecDetId,OrderType=0,OrderDetId=@OrderDetId,Item=@Item,HuId=@HuId,LotNo=@LotNo,IsCreatePlanBill=@IsCreatePlanBill,IsCS=@IsCS,PlanBill=@PlanBill,ActBill=@ActBill,QualityType=@QualityType,IsFreeze=@IsFreeze,IsATP=@IsATP,OccupyType=@OccupyType,OccupyRefNo=@OccupyRefNo,Qty=@Qty,WMSSeq=@WMSSeq,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate
		WHERE Id=@Id
	END							
END
GO
PRINT N'Creating [dbo].[USP_Split_RecMstr_INSERT]...';


GO

CREATE PROCEDURE [dbo].[USP_Split_RecMstr_INSERT]
(
	@Version int,
	@ExtRecNo varchar(50),
	@IpNo varchar(50),
	@SeqNo varchar(50),
	@Flow varchar(50),
	@Status tinyint,
	@Type tinyint,
	@OrderType tinyint,
	@OrderSubType tinyint,
	@QualityType tinyint,
	@PartyFrom varchar(50),
	@PartyFromNm varchar(100),
	@PartyTo varchar(50),
	@PartyToNm varchar(100),
	@ShipFrom varchar(50),
	@ShipFromAddr varchar(256),
	@ShipFromTel varchar(50),
	@ShipFromCell varchar(50),
	@ShipFromFax varchar(50),
	@ShipFromContact varchar(50),
	@ShipTo varchar(50),
	@ShipToAddr varchar(256),
	@ShipToTel varchar(50),
	@ShipToCell varchar(50),
	@ShipToFax varchar(50),
	@ShipToContact varchar(50),
	@Dock varchar(100),
	@EffDate datetime,
	@IsPrintRec bit,
	@IsRecPrinted bit,
	@CreateHuOpt bit,
	@IsRecScanHu bit,
	@RecTemplate varchar(100),
	@WMSNo varchar(50),
	@CancelReason varchar(256),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@IsCheckPartyFromAuth bit,
	@IsCheckPartyToAuth bit,
	@RecNo varchar(4000)
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		INSERT INTO ORD_RecMstr_1(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=2
	BEGIN
		INSERT INTO ORD_RecMstr_2(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=3
	BEGIN
		INSERT INTO ORD_RecMstr_3(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=4
	BEGIN
		INSERT INTO ORD_RecMstr_4(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=5
	BEGIN
		INSERT INTO ORD_RecMstr_5(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=6
	BEGIN
		INSERT INTO ORD_RecMstr_6(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=7
	BEGIN
		INSERT INTO ORD_RecMstr_7(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE IF @OrderType=8
	BEGIN
		INSERT INTO ORD_RecMstr_8(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END	
	ELSE
	BEGIN
		INSERT INTO ORD_RecMstr_0(Version,ExtRecNo,IpNo,SeqNo,Flow,Status,Type,OrderType,OrderSubType,QualityType,PartyFrom,PartyFromNm,PartyTo,PartyToNm,ShipFrom,ShipFromAddr,ShipFromTel,ShipFromCell,ShipFromFax,ShipFromContact,ShipTo,ShipToAddr,ShipToTel,ShipToCell,ShipToFax,ShipToContact,Dock,EffDate,IsPrintRec,IsRecPrinted,CreateHuOpt,IsRecScanHu,RecTemplate,WMSNo,CancelReason,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,IsCheckPartyFromAuth,IsCheckPartyToAuth,RecNo)
		VALUES(@Version,@ExtRecNo,@IpNo,@SeqNo,@Flow,@Status,@Type,@OrderType,@OrderSubType,@QualityType,@PartyFrom,@PartyFromNm,@PartyTo,@PartyToNm,@ShipFrom,@ShipFromAddr,@ShipFromTel,@ShipFromCell,@ShipFromFax,@ShipFromContact,@ShipTo,@ShipToAddr,@ShipToTel,@ShipToCell,@ShipToFax,@ShipToContact,@Dock,@EffDate,@IsPrintRec,@IsRecPrinted,@CreateHuOpt,@IsRecScanHu,@RecTemplate,@WMSNo,@CancelReason,@CreateUser,@CreateUserNm,@CreateDate,@LastModifyUser,@LastModifyUserNm,@LastModifyDate,@IsCheckPartyFromAuth,@IsCheckPartyToAuth,@RecNo)
	END		
END
GO
PRINT N'Creating [dbo].[USP_Split_RecMstr_UPDATE]...';


GO


CREATE PROCEDURE [dbo].[USP_Split_RecMstr_UPDATE]
(
	@Version int,
	@ExtRecNo varchar(50),
	@IpNo varchar(50),
	@SeqNo varchar(50),
	@Flow varchar(50),
	@Status tinyint,
	@Type tinyint,
	@OrderType tinyint,
	@OrderSubType tinyint,
	@QualityType tinyint,
	@PartyFrom varchar(50),
	@PartyFromNm varchar(100),
	@PartyTo varchar(50),
	@PartyToNm varchar(100),
	@ShipFrom varchar(50),
	@ShipFromAddr varchar(256),
	@ShipFromTel varchar(50),
	@ShipFromCell varchar(50),
	@ShipFromFax varchar(50),
	@ShipFromContact varchar(50),
	@ShipTo varchar(50),
	@ShipToAddr varchar(256),
	@ShipToTel varchar(50),
	@ShipToCell varchar(50),
	@ShipToFax varchar(50),
	@ShipToContact varchar(50),
	@Dock varchar(100),
	@EffDate datetime,
	@IsPrintRec bit,
	@IsRecPrinted bit,
	@CreateHuOpt bit,
	@IsRecScanHu bit,
	@RecTemplate varchar(100),
	@WMSNo varchar(50),
	@CancelReason varchar(256),
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@IsCheckPartyFromAuth bit,
	@IsCheckPartyToAuth bit,
	@RecNo varchar(4000),
	@VersionBerfore int
)
AS
BEGIN
	IF @OrderType=1
	BEGIN
		UPDATE ORD_RecMstr_1 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=2
	BEGIN
		UPDATE ORD_RecMstr_2 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END	
	ELSE IF @OrderType=3
	BEGIN
		UPDATE ORD_RecMstr_3 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=4
	BEGIN
		UPDATE ORD_RecMstr_4 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=5
	BEGIN
		UPDATE ORD_RecMstr_5 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=6
	BEGIN
		UPDATE ORD_RecMstr_6 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=7
	BEGIN
		UPDATE ORD_RecMstr_7 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE IF @OrderType=8
	BEGIN
		UPDATE ORD_RecMstr_8 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END
	ELSE
	BEGIN
		UPDATE ORD_RecMstr_0 SET Version=@Version,ExtRecNo=@ExtRecNo,IpNo=@IpNo,SeqNo=@SeqNo,Flow=@Flow,Status=@Status,Type=@Type,OrderType=@OrderType,OrderSubType=@OrderSubType,QualityType=@QualityType,PartyFrom=@PartyFrom,PartyFromNm=@PartyFromNm,PartyTo=@PartyTo,PartyToNm=@PartyToNm,ShipFrom=@ShipFrom,ShipFromAddr=@ShipFromAddr,ShipFromTel=@ShipFromTel,ShipFromCell=@ShipFromCell,ShipFromFax=@ShipFromFax,ShipFromContact=@ShipFromContact,ShipTo=@ShipTo,ShipToAddr=@ShipToAddr,ShipToTel=@ShipToTel,ShipToCell=@ShipToCell,ShipToFax=@ShipToFax,ShipToContact=@ShipToContact,Dock=@Dock,EffDate=@EffDate,IsPrintRec=@IsPrintRec,IsRecPrinted=@IsRecPrinted,CreateHuOpt=@CreateHuOpt,IsRecScanHu=@IsRecScanHu,RecTemplate=@RecTemplate,WMSNo=@WMSNo,CancelReason = @CancelReason,LastModifyUser=@LastModifyUser,LastModifyUserNm=@LastModifyUserNm,LastModifyDate=@LastModifyDate,IsCheckPartyFromAuth=@IsCheckPartyFromAuth,IsCheckPartyToAuth=@IsCheckPartyToAuth,RecNo=@RecNo
		WHERE RecNo=@RecNo AND Version=@VersionBerfore
	END	
END
GO
PRINT N'Creating [dbo].[USP_Split_RestartProductLine]...';


GO
Create PROCEDURE [dbo].[USP_Split_RestartProductLine]
(
	@ProductLineCode varchar(50),
	@UserId int,
	@UserNm varchar(100)
)
AS
BEGIN
	declare @DateTimeNow as datetime;
	set @DateTimeNow = GETDATE();
	
	--查询该生产线上所有未关闭生产单的Van号
	select TraceCode into #temp1 from ORD_OrderMstr_4 where Flow = @ProductLineCode and Status in (0, 1, 2);
	
	begin tran	
		--生产线恢复
		update SCM_FlowMstr set IsPause = 0, PauseTime = null, LastModifyDate = @DateTimeNow, LastModifyUser = @UserId, LastModifyUserNm = @UserNm where Code = @ProductLineCode;
		
		--根据Van号恢复采购单（Kit单/排序单）
		update ORD_OrderMstr_1 set IsPLPause = 0, PauseTime = null, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_1 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号恢复移库单（Kit单/排序单）
		update ORD_OrderMstr_2 set IsPLPause = 0, PauseTime = null, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_2 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号恢复生产单（驾驶室/底盘）
		update ORD_OrderMstr_4 set IsPLPause = 0, PauseTime = null, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_4 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
		
		--根据Van号恢复计划协议单（Kit单/排序单）
		update ORD_OrderMstr_8 set IsPLPause = 0, PauseTime = null, Version = Version + 1, LastModifyDate = GETDATE(), LastModifyUser = @UserId, LastModifyUserNm = @UserNm
		from ORD_OrderMstr_8 as m1 inner join #temp1 as t on m1.TraceCode = t.TraceCode
	commit

END
GO
PRINT N'Creating [dbo].[USP_SYS_BatchGetNextId]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_SYS_BatchGetNextId]
@TablePrefix VARCHAR (50), @BatchSize INT, @NextId BIGINT OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_SYS_GetNextId]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_SYS_GetNextId]
@TablePrefix VARCHAR (50), @NextId BIGINT OUTPUT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_SYS_GetNextSeq]...';


GO
CREATE PROCEDURE [dbo].[USP_SYS_GetNextSeq]
	@CodePrefix varchar(50),
	@NextSequence int OUTPUT
AS
Begin Tran
	Declare @invValue int;
	select  @invValue = IntValue FROM SYS_NumCtrl WITH (UPDLOCK, ROWLOCK) where Code = @CodePrefix;
	if @invValue is null
	begin
		if @NextSequence is not null
		begin 
			insert into SYS_NumCtrl(Code, IntValue) values (@CodePrefix, @NextSequence + 1);
		end	
		else
		begin
			set @NextSequence = 1;
			insert into SYS_NumCtrl(Code, IntValue) values (@CodePrefix, 2);
		end
	end 
	else
	begin
		if @NextSequence is not null
		begin 
			if @invValue <= @NextSequence
			begin
				update SYS_NumCtrl set IntValue = @NextSequence + 1 where Code = @CodePrefix;
			end
		end
		else
		begin
			set @NextSequence = @invValue;
			update SYS_NumCtrl set IntValue = @NextSequence + 1 where Code = @CodePrefix;
		end
	end	
Commit tran
GO
PRINT N'Creating [dbo].[USP_Tools_GenerateSP4SplitTable]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Tools_GenerateSP4SplitTable]
@FileName VARCHAR (1000)
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Tools_GenerateVW4SplitTable]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Tools_GenerateVW4SplitTable]
@tablename VARCHAR (50), @alisaname VARCHAR (10), @splitcount INT
WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Tools_WhoLock]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Tools_WhoLock]

WITH ENCRYPTION
AS
BEGIN
--The script body was encrypted and cannot be reproduced here.
    RETURN
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_AdjWorkingCalendar]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE PROCEDURE [dbo].[USP_Busi_AdjWorkingCalendar]
	@WorkingCalendarId int,
	@Shift varchar(50),
	@Type tinyint,
	@CreateUserId int,
	@CreateUserNm varchar(100)
AS
BEGIN
	declare @DateTimeNow datetime = GetDate()
	declare @ErrorMsg nvarchar(Max)
	
	begin try
		begin tran
		
		declare @Region varchar(50)
		declare @OldShift varchar(50)
		declare @OldType tinyint
		
		--获取区域、原班次和原类型
		select @Region = Region, @OldShift = Shift, @OldType = [Type] from PRD_WorkingCalendar where Id = @WorkingCalendarId
		
		--更新班次和类型
		update PRD_WorkingCalendar set Shift = @Shift, [Type] = @Type, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow where Id = @WorkingCalendarId
		
		if @OldShift <> @Shift or @OldType <> @Type
		begin  --班次或类型发生改变
			---------------------------↓更新JIT路线下次开始时间-----------------------------	
			Declare @JITFlowCycleId int
			Declare @MaxJITFlowId int
			Declare @JITFlow varchar(50)
			Declare @JITPreOrderTime datetime
			Declare @JITPreWinTime datetime
			Declare @JITPreWinTime2 datetime
			Declare @JITNextOrderTime datetime
			Declare @JITNextWinTime datetime
			Declare @JITNextWinTime2 datetime
			Declare @JITLeadTime int
			Declare @JITRegion varchar(50)
			
			select identity(int, 1, 1) as RowId, Flow, PreOrderTime, PreWinTime, PreWinTime2, LeadTime into #tempJITFlow 
			from SCM_FlowStrategy WITH (UPDLOCK, SERIALIZABLE) 
			where Flow in 
			(
				select Flow from SCM_FlowStrategy as stra
				inner join SCM_FlowMstr as mstr on stra.Flow = mstr.Code
				where stra.Strategy = 2 and stra.NextOrderTime is not null and stra.NextWinTime is not null
				and mstr.PartyTo = @Region
			)
			
			if exists(select top 1 Flow from #tempJITFlow)
			begin
				select @JITFlowCycleId = MIN(RowId), @MaxJITFlowId = MAX(RowId) from #tempJITFlow
				while @MaxJITFlowId >= @JITFlowCycleId
				begin
					select @JITFlow = Flow, @JITPreOrderTime = PreOrderTime, @JITPreWinTime = PreWinTime, @JITPreWinTime2 = PreWinTime2, @JITLeadTime = LeadTime 
					from #tempJITFlow where RowId = @JITFlowCycleId
					
					--计算下趟JIT普通订单的发单时间
					exec USP_Busi_GetNextWindowTime @JITFlow, @JITPreOrderTime, @JITNextOrderTime output, @JITNextWinTime output
					
					--计算下趟交货时段
					declare @dCount int = 1
					while @dCount <= @JITLeadTime
					begin  --根据交货间隔循环找交货时段
						exec USP_Busi_GetNextWindowTime @JITFlow, @JITNextWinTime, @JITNextWinTime output, @JITNextWinTime2 output
						set @dCount = @dCount + 1
					end
					
					update SCM_FlowStrategy set NextOrderTime = @JITNextOrderTime, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow where Flow = @JITFlow
					
					set @JITFlowCycleId = @JITFlowCycleId + 1
				end
			end
			
			drop table #tempJITFlow
			-----------------------------↑更新JIT路线下次开始时间-----------------------------
			
			
			
			
			
			-----------------------------↓更新序列路线下次开始时间-----------------------------
			Declare @ProdLineCycleId int
			Declare @MaxProdLineId int
			Declare @ProdLine varchar(50)
			
			select identity(int, 1, 1) as RowId, Code as ProdLine into #tempProdLine from SCM_FlowMstr where PartyFrom = @Region and [Type] = 4
			
			if exists(select top 1 ProdLine from #tempProdLine)
			begin
				select @ProdLineCycleId = MIN(RowId), @MaxProdLineId = MAX(RowId) from #tempProdLine
				while @MaxProdLineId >= @ProdLineCycleId
				begin
					select @ProdLine = ProdLine from #tempProdLine where RowId = @ProdLineCycleId
					exec USP_Busi_AdjSeqGroupNextWinTime @ProdLine, @CreateUserId, @CreateUserNm
					set @ProdLineCycleId = @ProdLineCycleId + 1
				end
			end
			
			drop table #tempProdLine
			-----------------------------↑更新序列路线下次开始时间-----------------------------
		end
		
		commit tran
	end try
	begin catch
		if xact_state()=-1
		begin
			rollback tran
		end
		set @ErrorMsg = Error_Message()
		RAISERROR(@ErrorMsg, 16, 1)
	end catch 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_CreateVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_CreateVanProdOrder] 
	@BatchNo int,
	@VanProdLine varchar(50),
	@VanProdLineNm varchar(100),
	@CreateUserId int,
	@CreateUserNm varchar(50),
	@OrderNo varchar(50) output
AS 
BEGIN 
	declare @DateTimeNow datetime = GetDate()
	declare @ErrorMsg nvarchar(MAX)
		
	begin try
		-----------------------------↓获取SAP生产单-----------------------------
		declare @SapProdLine varchar(50)  --SAP生产线代码A/B
		declare @SapOrderNo varchar(50)   --SAP整车生产单（总装的生产单号，不是底盘的生产单号）
		declare @SapVAN varchar(50)       --VAN号
		declare @SapSeq bigint			  --SAP顺序号
		declare @SapStartTime datetime    --SAP排产日期
		declare @SapProdItem varchar(50)  --SAP整车物料号  
		declare @SapProdItemDesc varchar(50)  --SAP整车物料描述
		declare @SapProdItemUom varchar(5)	--SAP整车物料单位
		
		select @SapProdLine = ZLINE, @SapOrderNo = AUFNR, @SapVAN = CHARG, @SapStartTime = GSTRS, 
		@SapProdItem = MATNR, @SapProdItemDesc = MAKTX, @SapProdItemUom = GMEIN, @SapSeq = Convert(bigint, CY_SEQNR)
		from SAP_ProdOrder where BatchNo = @BatchNo
		-----------------------------↑获取SAP生产单-----------------------------
		
		
		
		-----------------------------↓数据校验-----------------------------
		declare @IsProdLineActive bit  --生产线是否有效
		declare @Routing varchar(50)  --生产线工艺流程
		declare @VanProdLineRegion varchar(50)  --生产线区域
		declare @LocTo varchar(50)     --生产线原材料
		declare @LocFrom varchar(50)   --生产线成品
		declare @ProdLineType tinyint   --生产线类型
		declare @VirtualOpRef varchar(50)   --虚拟工位
		declare @TaktTime int           --节拍时间（秒）
		
		if ISNULL(@VanProdLine, '') = ''
		begin
			set @ErrorMsg = N'没有维护整车生产线' + @SapProdLine + N'映射关系的' + @VanProdLineNm + N'。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if not exists(select top 1 * from SCM_FlowMstr where Code = @VanProdLine)
		begin
			set @ErrorMsg = N'没有找到' + @VanProdLineNm + @VanProdLine + N'。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		--获取生产线信息
		select @VanProdLineRegion = PartyFrom, @LocTo = LocTo, @LocTo = LocTo, @Routing = Routing, 
		@IsProdLineActive = IsActive, @ProdLineType = ProdLineType, @TaktTime = TaktTime, @VirtualOpRef = VirtualOpRef
		from SCM_FlowMstr where Code = @VanProdLine
		
		if @IsProdLineActive = 0
		begin
			set @ErrorMsg = @VanProdLineNm + @VanProdLine + N'没有生效。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if @TaktTime is null
		begin
			set @ErrorMsg = @VanProdLineNm + @VanProdLine + N'没有设置节拍时间。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		else if @TaktTime <= 0
		begin
			set @ErrorMsg = @VanProdLineNm + @VanProdLine + N'的节拍时间不能小于等于0。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if ISNULL(@Routing, '') = ''
		begin
			set @ErrorMsg = N'没有设置' + @VanProdLineNm + @VanProdLine + N'的工艺流程。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if ISNULL(@VirtualOpRef, '') = ''
		begin
			set @ErrorMsg = N'没有设置' + @VanProdLineNm + @VanProdLine + N'的虚拟工位。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
	
		--if exists(select top 1 Op from PRD_RoutingDet where Routing = @Routing and WorkCenter is not null group by Op having COUNT(distinct WorkCenter) > 1)
		--begin
		--	declare @ErrorOp int
		--	select top 1 @ErrorOp = Op from PRD_RoutingDet where Routing = @Routing and WorkCenter is not null group by Op having COUNT(distinct WorkCenter) > 1
		--	set @ErrorMsg = N'工艺流程' + @Routing + N'工序' + convert(varchar, @ErrorOp) + N'的工作中心设置不一致。'
		--	RAISERROR(@ErrorMsg, 16, 1)
		--end
		
		if not exists(select * from PRD_ProdLineWorkCenter where Flow = @VanProdLine)
		begin
			set @ErrorMsg = N'没有找到' + @VanProdLineNm + @VanProdLine + N'的工作中心。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		-----------------------------↑数据校验-----------------------------
		
		
		
		
		-----------------------------↓生成工序临时表-----------------------------
		Create table #tempRoutingDet
		(
			LoopCount int,
			AssProdLine varchar(50),
			Routing varchar(50),
			Op int,
			OpRef varchar(50),
			Location varchar(50),
			WorkCenter varchar(50)
		)
		
		--插入主线工序
		declare @LoopCount int = 1
		insert into #tempRoutingDet(LoopCount, AssProdLine, Routing, Op, OpRef, Location, WorkCenter)
		select @LoopCount, @VanProdLine, Routing, Op, OpRef, Location, WorkCenter 
		from PRD_RoutingDet where Routing = @Routing
		
		--插入分装线工序
		while exists(select top 1 subPL.Code from #tempRoutingDet as tDet
					inner join SCM_FlowBinding as bind on tDet.AssProdLine = bind.MstrFlow
					inner join SCM_FlowMstr as subPL on bind.BindFlow = subPL.Code
					where tDet.LoopCount = @LoopCount)
		begin
			set @LoopCount = @LoopCount + 1
			
			insert into #tempRoutingDet(LoopCount, AssProdLine, Routing, Op, OpRef, Location, WorkCenter)
			select @LoopCount, subPL.Code, subPL.Routing, rDet.Op, rDet.OpRef, rDet.Location, rDet.WorkCenter 
			from #tempRoutingDet as tDet
			inner join SCM_FlowBinding as bind on tDet.AssProdLine = bind.MstrFlow
			inner join SCM_FlowMstr as subPL on bind.BindFlow = subPL.Code
			inner join PRD_RoutingDet as rDet on rDet.Routing = subPL.Routing
			where tDet.LoopCount = @LoopCount - 1
			group by subPL.Code, subPL.Routing, rDet.Op, rDet.OpRef, rDet.Location, rDet.WorkCenter
		end
		-----------------------------↑生成工序临时表-----------------------------
		
		
		
		
		-----------------------------↓生成生产单Bom临时表-----------------------------
		Create table #tempOrderBom
		(
			Item varchar(50),
			ItemDesc varchar(100),
			RefItemCode varchar(50),
			UOM varchar(5),
			ManufactureParty varchar(50),
			AssProdLine varchar(50),
			Op int,
			OpRef varchar(50),
			OrderQty decimal(18, 8),
			Location varchar(50),
			ReserveNo varchar(50),
			ReserveLine varchar(50),
			ZOPWZ varchar(50),
			ZOPID varchar(50),
			ZOPDS varchar(50),
			AUFNR varchar(50),
			ICHARG varchar(50),
			BWART varchar(50),
			IsScanHu bit,
			WorkCenter varchar(50),
			DISPO varchar(50)
		)
		
		insert into #tempOrderBom(Item, ItemDesc, RefItemCode, UOM, ManufactureParty,
		AssProdLine, Op, OpRef, OrderQty, Location,
		ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, AUFNR, ICHARG, BWART,
		IsScanHu, WorkCenter, DISPO)
		select bom.MATERIAL as Item, bom.MAKTX as ItemDesc, bom.BISMT as RefItemCode, bom.MEINS as UOM, case when bom.LIFNR <> '' then bom.LIFNR else null end as ManufactureParty,
		null as ProdLine, null as Op, case when ISNULL(GW, '') = '' then @VirtualOpRef when Len(GW) > 5 then SUBSTRING(GW, 1, 5) else GW end as OpRef, bom.MDMNG as OrderQty, null as Location,
		bom.RSNUM as ReserveNo, bom.RSPOS as ReserveLine, null as ZOPWZ, bom.ZOPID, bom.ZOPDS, bom.AUFNR, bom.ICHARG, bom.BWART,
		CASE WHEN trace.Item is not null THEN 1 ELSE 0 END as IsScanHu, pwc.WorkCenter, bom.DISPO
		from SAP_ProdBomDet as bom
		inner join SAP_ProdRoutingDet as routing on bom.BatchNo = routing.BatchNo 
		and bom.AUFPL = routing.AUFPL and bom.PLNFL = routing.PLNFL and bom.VORNR = routing.VORNR  --用工艺路线编号、顺序和操作活动关联
		inner join PRD_ProdLineWorkCenter as pwc on routing.ARBPL = pwc.WorkCenter
		left join CUST_ItemTrace as trace on bom.MATERIAL = trace.Item
		where bom.BatchNo = @BatchNo and pwc.Flow = @VanProdLine
		
		if not exists(select top 1 * from #tempOrderBom)
		begin
			return
		end
		
		--更新工序
		declare @MinOp int  --最小工序，从主线上取
		select @MinOp = MIN(Op) from PRD_RoutingDet where Routing = @Routing
		
		--更新安装生产线、工序、工位和物料消耗库位
		update bom set AssProdLine = IsNULL(det.AssProdLine, @SapProdLine),--工艺流程没有匹配的工位取整车生产线
		Op = IsNULL(det.Op, @MinOp),									--工艺流程没有匹配的工位取整车生产线的最小工序
		OpRef = ISNULL(det.OpRef, @VirtualOpRef),						--工艺流程没有匹配的工位取整车生产线的虚拟工位
		Location = det.Location
		from #tempOrderBom as bom
		left join #tempRoutingDet as det on bom.OpRef = det.OpRef
		
		--更新物料消耗库位，再从工作中心上找
		update bom set Location = wc.Location
		from #tempOrderBom as bom
		inner join MD_WorkCenter as wc on bom.WorkCenter = wc.Code 
		where bom.Location is null
		
		--更新物料消耗库位，最后取生产线上的原材料库位
		update #tempOrderBom set Location = @LocFrom where Location is null
		-----------------------------↑生成生产单Bom临时表-----------------------------
		
		
		
		
		-----------------------------↓新增生产单头-----------------------------
		exec USP_GetDocNo_ORD @VanProdLine, 0, 4, 0, 0, 0, @VanProdLineRegion, @VanProdLineRegion, @LocTo, @LocFrom, null, 0, @OrderNo output
		
		insert into ORD_OrderMstr_4 (
		OrderNo,              --生产单号
		Flow,                 --生产线
		TraceCode,            --追溯码，VAN号
		OrderStrategy,        --策略，0
		ExtOrderNo,           --外部订单号，SAP生产单号
		[Type],               --类型，4生产单
		SubType,              --子类型，0正常
		QualityType,          --质量状态，0良品
		StartTime,            --开始时间
		WindowTime,           --窗口时间
		PauseSeq,             --暂停工序，0
		IsQuick,              --是否快速，0
		[Priority],           --优先级，0
		[Status],             --状态，1释放
		PartyFrom,            --区域代码
		PartyTo,              --区域代码
		LocFrom,              --原材料库位
		LocTo,                --成品库位
		IsInspect,            --下线检验，0
		IsAutoRelease,        --自动释放，0
		IsAutoStart,          --自动上线，0
		IsAutoShip,           --自动发货，0
		IsAutoReceive,        --自动收货，0
		IsAutoBill,           --自动账单，0
		IsManualCreateDet,    --手工创建明细，0
		IsListPrice,          --显示价格单，0
		IsPrintOrder,         --打印生产单，0
		IsOrderPrinted,       --生产单已打印，0
		IsPrintAsn,           --打印ASN，0
		IsPrintRec,           --打印收货单，0
		IsShipExceed,         --允许超发，0
		IsRecExceed,          --允许超收，0
		IsOrderFulfillUC,     --整包装下单，0
		IsShipFulfillUC,      --整包装发货，0
		IsRecFulfillUC,       --整包装收货，0
		IsShipScanHu,         --发货扫描条码，0
		IsRecScanHu,          --收货扫描条码，0
		IsCreatePL,           --创建拣货单，0
		IsPLCreate,           --拣货单已创建，0
		IsShipFifo,           --发货先进先出，0
		IsRecFifo,            --收货先进先出，0
		IsShipByOrder,        --允许按订单发货，0
		IsOpenOrder,          --开口订单，0
		IsAsnUniqueRec,       --ASN一次性收货，0
		RecGapTo,             --收货差异处理，0
		BillTerm,             --结算方式，0
		CreateHuOpt,          --创建条码选项，0
		ReCalculatePriceOpt,  --重新计算价格单选项，0
		CreateUser,           --创建用户
		CreateUserNm,         --创建用户名称
		CreateDate,           --创建日期
		LastModifyUser,       --最后修改用户
		LastModifyUserNm,     --最后修改用户名称
		LastModifyDate,       --最后修改日期
		ReleaseUser,          --释放用户
		ReleaseUserNm,        --释放用户名称
		ReleaseDate,          --释放日期
		[Version],            --版本，1
		ProdLineType,         --生产线类型
		PauseStatus           --暂停状态，0
		)
		select 
		@OrderNo,                    --生产单号
		@VanProdLine,                --生产线
		@SapVAN,                     --追溯码，VAN号
		0,                           --策略，0
		@SapOrderNo,                 --外部订单号，SAP生产单号
		4,                           --类型，4生产单
		0,                           --子类型，0正常
		0,                           --质量状态，0良品
		@SapStartTime,               --开始时间
		@SapStartTime,               --窗口时间
		0,                           --暂停工序，0
		0,                           --是否快速，0
		0,                           --优先级，0
		1,                           --状态，0创建、1释放
		@VanProdLineRegion,          --区域代码
		@VanProdLineRegion,          --区域代码
		@LocFrom,                    --原材料库位
		@LocTo,                      --成品库位
		0,							 --下线检验，0
		0,							 --自动释放，0
		0,							 --自动上线，0
		0,							 --自动发货，0
		0,							 --自动收货，0
		0,							 --自动账单，0
		0,							 --手工创建明细，0
		0,						     --显示价格单，0
		0,							 --打印生产单，0
		0,							 --生产单已打印，0
		0,							 --打印ASN，0
		0,							 --打印收货单，0
		0,							 --允许超发，0
		0,							 --允许超收，0
		0,							 --整包装下单，0
		0,							 --整包装发货，0
		0,							 --整包装收货，0
		0,							 --发货扫描条码，0
		0,							 --收货扫描条码，0
		0,							 --创建拣货单，0
		0,							 --拣货单已创建，0
		0,							 --发货先进先出，0
		0,							 --收货先进先出，0
		0,							 --允许按订单发货，0
		0,							 --开口订单，0
		0,							 --ASN一次性收货，0
		0,							 --收货差异处理，0
		0,							 --结算方式，0
		0,							 --创建条码选项，0
		0,							 --重新计算价格单选项，0
		@CreateUserId,               --创建用户
		@CreateUserNm,               --创建用户名称
		@DateTimeNow,                --创建日期
		@CreateUserId,               --最后修改用户
		@CreateUserNm,               --最后修改用户名称
		@DateTimeNow,                --最后修改日期
		@CreateUserId,               --释放用户
		@CreateUserNm,               --释放用户名称
		@DateTimeNow,                --释放日期
		1,                           --版本，1
		@ProdLineType,               --生产线类型
		0                            --暂停状态，0
		-----------------------------↑新增生产单头-----------------------------
		
		
		
		
		-----------------------------↓新增生产单顺序-----------------------------
		--新增车序表
		insert into ORD_OrderSeq (
		ProdLine,
		OrderNo,
		TraceCode,
		Seq,
		SubSeq,
		SapSeq,
		CreateUser,
		CreateUserNm,
		CreateDate,
		LastModifyUser,
		LastModifyUserNm,
		LastModifyDate,
		[Version]
		)
		values( 
		@VanProdLine,
		@OrderNo,
		@SapVAN,
		@SapSeq,
		1,
		@SapSeq,
		@CreateUserId,
		@CreateUserNm,
		@DateTimeNow,
		@CreateUserId,
		@CreateUserNm,
		@DateTimeNow,
		1
		)
		-----------------------------↑新增生产单顺序-----------------------------
		
		
		
		-----------------------------↓新增生产单明细-----------------------------
		declare @OrderDetId int
		exec USP_SYS_GetNextId 'ORD_OrderDet', @OrderDetId output
		
		insert into ORD_OrderDet_4 (
		Id,                         --生产单明细标识
		OrderNo,                    --生产单号
		OrderType,                  --类型，4生产单
		OrderSubType,               --子类型，0正常
		Seq,						--行号，1
		ScheduleType,               --计划协议类型，0
		Item,                       --整车物料号
		ItemDesc,                   --整车物料描述
		Uom,                        --单位
		BaseUom,                    --基本单位
		UC,                         --包装，1
		MinUC,                      --最小包装，1
		QualityType,                --质量状态，0
		ReqQty,                     --需求数量，1
		OrderQty,                   --订单数量，1
		ShipQty,                    --发货数量，0
		RecQty,                     --收货数量，0
		RejQty,                     --次品数量，0
		ScrapQty,                   --废品数量，0
		PickQty,                    --拣货数量，0
		UnitQty,                    --单位用量，1
		IsInspect,                  --是否检验，0
		IsProvEst,                  --是否暂估价，0
		IsIncludeTax,               --是否含税价，0
		IsScanHu,                   --是否扫描条码，0
		CreateUser,                 --创建用户
		CreateUserNm,               --创建用户名称
		CreateDate,                 --创建日期
		LastModifyUser,             --最后修改用户
		LastModifyUserNm,           --最后修改用户名称
		LastModifyDate,             --最后修改日期
		[Version],					--版本，1
		IsChangeUC					--是否修改单包装，0
		)
		select 
		@OrderDetId,                --生产单明细标识
		@OrderNo,                   --生产单号
		4,                          --类型，4生产单
		0,                          --子类型，0正常
		1,							--行号，1
		0,                          --计划协议类型，0
		@SapProdItem,               --整车物料号
		@SapProdItemDesc,           --整车物料描述
		@SapProdItemUom,            --单位
		@SapProdItemUom,            --基本单位
		1,                          --包装，1
		1,                          --最小包装，1
		0,                          --质量状态，0
		1,                          --需求数量，1
		1,                          --订单数量，1
		0,                          --发货数量，0
		0,                          --收货数量，0
		0,                          --次品数量，0
		0,                          --废品数量，0
		0,                          --拣货数量，0
		1,                          --单位用量，1
		0,                          --是否检验，0
		0,                          --是否暂估价，0
		0,                          --是否含税价，0
		0,                          --是否扫描条码，0
		@CreateUserId,              --创建用户
		@CreateUserNm,              --创建用户名称
		@DateTimeNow,               --创建日期
		@CreateUserId,              --最后修改用户
		@CreateUserNm,              --最后修改用户名称
		@DateTimeNow,               --最后修改日期
		1,							--版本，1
		0							--是否修改单包装，0
		-----------------------------↑新增生产单明细-----------------------------
		
		
		
		-----------------------------↓新增生产单Bom-----------------------------
		INSERT INTO ORD_OrderBomDet (
		OrderNo,					--生产单号
		OrderType,					--类型，4生产单
		OrderSubType,				--子类型，0正常
		OrderDetId,					--生产单明细标识
		OrderDetSeq,				--生产单明细顺序号
		Seq,						--顺序号
		Item,						--Bom零件号
		ItemDesc,					--Bom零件描述
		RefItemCode,				--旧物料号
		Uom,						--单位
		BaseUom,					--基本单位
		ManufactureParty,			--指定供应商
		Op,							--工序
		OpRef,						--工位
		OrderQty,					--Bom用量
		BFQty,						--反冲合格数量
		BFRejQty,					--反冲不合格数量
		BFScrapQty,					--反冲废品数量
		UnitQty,					--单位用量
		BomUnitQty,					--单个成品用量
		Location,					--反冲库位
		IsPrint,					--是否打印
		BackFlushMethod,            --回冲方式
		FeedMethod,                 --投料方式
		IsAutoFeed,                 --是否自动投料
		IsScanHu,                   --是否关键件
		EstConsumeTime,             --预计消耗时间
		ReserveNo,                  --预留号
		ReserveLine,                --预留行号
		ZOPWZ,						--工艺顺序号
		ZOPID,						--工位ID
		ZOPDS,						--工序描述
		AUFNR,						--生产单号
		CreateUser,					--创建用户
		CreateUserNm,				--创建用户名称
		CreateDate,					--创建日期
		LastModifyUser,				--最后修改用户
		LastModifyUserNm,			--最后修改用户名称
		LastModifyDate,				--最后修改日期
		[Version],					--版本，1
		ICHARG,						--批号
		BWART,						--移动类型
		AssProdLine,				--零件安装的生产线/可能是分装线，没有工位或者工位不存在的去虚拟工位
		IsCreateOrder,				--是否已经创建拉料单
		DISPO						--MRP控制者
        )
		select
        @OrderNo,					--生产单号
		4,							--类型，4生产单
		0,							--子类型，0正常
		@OrderDetId,				--生产单明细标识
		1,							--生产单明细顺序号
		ROW_NUMBER() over (order by Op, OpRef),--顺序号
		Item,						--Bom零件号
		ItemDesc,					--Bom零件描述
		RefItemCode,				--旧物料号
		Uom,						--单位
		Uom,						--基本单位
		ManufactureParty,			--指定供应商
		Op,							--工序
		OpRef,						--工位
		OrderQty,					--Bom用量
		0,							--反冲合格数量
		0,							--反冲不合格数量
		0,							--反冲废品数量
		OrderQty,					--单位用量
		OrderQty,					--单个成品用量
		Location,					--反冲库位
		0,							--是否打印
		0,							--回冲方式
		0,							--投料方式
		0,							--是否自动投料
		IsScanHu,                   --是否关键件
		@DateTimeNow,				--预计消耗时间
		ReserveNo,                  --预留号
		ReserveLine,                --预留行号
		ZOPWZ,						--工艺顺序号
		ZOPID,						--工位ID
		ZOPDS,						--工序描述
		AUFNR,						--生产单号
		@CreateUserId,              --创建用户
		@CreateUserNm,              --创建用户名称
		@DateTimeNow,               --创建日期
		@CreateUserId,              --最后修改用户
		@CreateUserNm,              --最后修改用户名称
		@DateTimeNow,               --最后修改日期
		1,							--版本，1
		ICHARG,						--批号
		BWART,						--移动类型
		AssProdLine,				--零件安装的生产线/可能是分装线
		0,							--是否已经创建拉料单
		DISPO						--MRP控制者
		from #tempOrderBom
		-----------------------------↑新增生产单Bom-----------------------------
		
		
		
		-----------------------------↓新增生产单Op-----------------------------
		INSERT INTO ORD_OrderOp (
		OrderNo,					--生产单号
		OrderDetId,					--生产单明细标识
		Op,							--工序
		OpRef,                      --工位, 生成订单工序时不考虑工位
		LeadTime,					--前置期
		TimeUnit,					--前置期单位
		IsBackflush,				--是否回冲物料
		CreateUser,					--创建用户
		CreateUserNm,				--创建用户名称
		CreateDate,					--创建日期
		LastModifyUser,				--最后修改用户
		LastModifyUserNm,			--最后修改用户名称
		LastModifyDate,				--最后修改日期
		[Version],					--版本，1
		WorkCenter,					--工作中心
		IsReport,					--是否报工
		IsAutoReport				--是否自动报工
		)
		select
		@OrderNo,					--生产单号
		@OrderDetId,				--生产单明细标识
		Op,							--工序
		'',							--工位, 生成订单工序时不考虑工位
		0,							--前置期
		1,							--前置期单位
		0,							--是否回冲物料
		@CreateUserId,              --创建用户
		@CreateUserNm,              --创建用户名称
		@DateTimeNow,               --创建日期
		@CreateUserId,              --最后修改用户
		@CreateUserNm,              --最后修改用户名称
		@DateTimeNow,               --最后修改日期
		1,							--版本，1
		Max(WorkCenter),			--工作中心
		0,							--是否报工
		CASE WHEN SUM(CASE WHEN IsReport = 0 then 0 else 1 End) = 0 then 0 else 1 end				--是否自动报工
		from PRD_RoutingDet
		where Routing = @Routing
		group by Op
		-----------------------------↑新增生产单Op-----------------------------
		
		
		
		
		-----------------------------↓新增关键件扫描-----------------------------
		INSERT INTO ORD_OrderItemTrace(
		OrderNo,
		OrderBomId,
		Item,
		ItemDesc,
		RefItemCode,
		Op,
		OpRef,
		Qty,
		ScanQty,
		CreateUser,
		CreateUserNm,
		CreateDate,
		LastModifyUser,
		LastModifyUserNm,
		LastModifyDate,
		Version)
		select
		OrderNo,
		Id,
		Item,
		ItemDesc,
		RefItemCode,
		Op,
		OpRef,
		OrderQty,
		0,
		@CreateUserId,
		@CreateUserNm,
		@DateTimeNow,
		@CreateUserId,
		@CreateUserNm,
		@DateTimeNow,
		1
		from ORD_OrderBomDet where OrderNo = @OrderNo and IsScanHu = 1
		-----------------------------↑新增生产单Op-----------------------------
		
		
		
		drop table #tempOrderBom
	end try 
	begin catch
		set @ErrorMsg = Error_Message() 
		RAISERROR(@ErrorMsg, 16, 1) 
	end catch 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_PauseVanProdOrder]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [dbo].[USP_Busi_PauseVanProdOrder] 
(
	@OrderNo varchar(50),
	@PauseSeq int,
	@CreateUserId int,
	@CreateUserNm varchar(50)
) --WITH ENCRYPTION
AS 
BEGIN 
	set nocount on
	declare @DateTimeNow datetime = GetDate()
	declare @ErrorMsg nvarchar(MAX)
	declare @trancount int = @@trancount
	
	begin try
		if @trancount = 0
		begin
            begin tran
        end
		
		declare @Status tinyint
		declare @PauseStatus tinyint
		declare @Version int
		declare @ProdLine varchar(50)
		declare @ProdLineType tinyint
		declare @IsPLPause bit
		declare @CurrentOp int
		
		
		select @Status = [Status], @PauseStatus = PauseStatus, @Version = [Version], @ProdLine = Flow, @ProdLineType = ProdLineType, @CurrentOp = CurtOp
		from ORD_OrderMstr_4 where OrderNo = @OrderNo
		
		select @IsPLPause = IsPause from SCM_FlowMstr where Code = @ProdLine
	
		if @ProdLineType <> 1 and @ProdLineType <> 2 and @ProdLineType <> 3 and @ProdLineType <> 4
		begin
			set @ErrorMsg = N'生产单' + @OrderNo + N'的不是整车生产单。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if @Status = 3 or @Status = 4
		begin
			set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经下线不能暂停。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if @PauseStatus <> 0
		begin
			set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经暂停。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if @IsPLPause = 1
		begin
			set @ErrorMsg = N'整车生产线' + @ProdLine + N'已经暂停，不能暂停整车生产单。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if @Status = 1
		begin  --整车生产单未上线，直接暂停
			update ORD_OrderMstr_4 set PauseStatus = 2, PauseSeq = 0, LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, [Version] = [Version] + 1
			where OrderNo = @OrderNo and [Version] = @Version
			
			if @@ROWCOUNT <> 1
			begin
				set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经更新，请重新暂停。'
				RAISERROR(@ErrorMsg, 16, 1)
			end
			
			--删除工序过点时间
			delete from ORD_OrderOpCPTime where OrderNo = @OrderNo
			
			--删除物料消耗时间
			delete from ORD_OrderBomCPTime where OrderNo = @OrderNo
		end
		else
		begin  --整车生产单已上线，到暂停工序暂停
			if @PauseSeq is null
			begin
				set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经上线，请输入暂停工序。'
				RAISERROR(@ErrorMsg, 16, 1)
			end
			
			if @PauseSeq < @CurrentOp
			begin  --暂停工序小于当前工序，报错
				set @ErrorMsg =  N'整车生产单' + @OrderNo + N'的暂停工序小于当前所在工序。'
				RAISERROR(@ErrorMsg, 16, 1)
			end
			else if @PauseSeq = @CurrentOp
			begin  --暂停工序等于当前工序，直接暂停
				update ORD_OrderMstr_4 set PauseStatus = 2, LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, [Version] = [Version] + 1
				where OrderNo = @OrderNo and [Version] = @Version
				
				if @@ROWCOUNT <> 1
				begin
					set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经更新，请重新暂停。'
					RAISERROR(@ErrorMsg, 16, 1)
				end
				
				--删除工序过点时间
				delete from ORD_OrderOpCPTime where OrderNo = @OrderNo
				
				--删除物料消耗时间
				delete from ORD_OrderBomCPTime where OrderNo = @OrderNo
			end
			else  --暂停工序大于当前工序
			begin
				if not exists(select top 1 1 from ORD_OrderOp where OrderNo = @OrderNo and Op = @PauseSeq)
				begin
					set @ErrorMsg = N'输入的暂停工序不存在。'
					RAISERROR(@ErrorMsg, 16, 1)
				end
				
				update ORD_OrderMstr_4 set PauseStatus = 1, PauseSeq = @PauseSeq, LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, [Version] = [Version] + 1
				where OrderNo = @OrderNo and [Version] = @Version
				
				if @@ROWCOUNT <> 1
				begin
					set @ErrorMsg = N'整车生产单' + @OrderNo + N'已经更新，请重新暂停。'
					RAISERROR(@ErrorMsg, 16, 1)
				end
				
				--重新计算物料消耗时间
				exec USP_Busi_UpdateOrderBomConsumeTime @ProdLine, @CreateUserId, @CreateUserNm
			end
		end
	
		if @trancount = 0 
		begin  
            commit
        end
	end try
	begin catch
        if @trancount = 0
        begin
            rollback
        end 
		
		set @ErrorMsg = Error_Message() 
		RAISERROR(@ErrorMsg, 16, 1) 
	end catch 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Busi_ScanJITControlPoint]...';


GO

CREATE PROCEDURE [dbo].[USP_Busi_ScanJITControlPoint]
	@MESScanControlPointList varchar(4000),
	@CreateUserId int,
	@CreateUserNm varchar(100)
AS
BEGIN
	set nocount on
	begin try
		begin tran ScanJITControlPoint
		save tran ScanJITControlPoint_Point
		
		declare @DateTimeNow datetime = GetDate()
		declare @ErrorMsg nvarchar(MAX)
		
		
		
		
		-----------------------------↓查找过点扫描信息-----------------------------
		declare @SplitSymbol char(1) = '|'
		create table #tempScanControlPoint
		(
			RowId int identity(1,1),
			ScanControlPointId int,
			ProdLine varchar(50),
			StartDate date,
			ScanDateTime datetime,
			TraceCode varchar(50),
			ProdItem varchar(50),
			OrderNo varchar(50),
			Vanseries varchar(50),
			JITSeq int,
			IsEmpty bit,
			ProdCode varchar(50)
		)
		
		--循环拆分过点扫描Id插入缓存表中
		if ISNULL(@MESScanControlPointList, '') <> ''
		begin
			while(charindex(@SplitSymbol, @MESScanControlPointList) <> 0)
			begin
				insert #tempScanControlPoint(ScanControlPointId) values (substring(@MESScanControlPointList, 1, charindex(@SplitSymbol, @MESScanControlPointList) - 1))
				set @MESScanControlPointList = stuff(@MESScanControlPointList, 1, charindex(@SplitSymbol,@MESScanControlPointList), ' ')
			end
			insert #tempScanControlPoint(ScanControlPointId) values (Ltrim(@MESScanControlPointList))
		end
		
		--更新生产线
		update tscp set ProdLine = plc.ProdLine, StartDate = convert(datetime, scp.ScanDate), JITSeq = scp.JITSeq,
		ScanDateTime = convert(datetime, SUBSTRING(scp.ScanDate, 1, 4) + '-' + SUBSTRING(scp.ScanDate, 5, 2) + '-' + SUBSTRING(scp.ScanDate, 7, 2) + ' ' + SUBSTRING(scp.ScanTime, 1, 2) + ':' + SUBSTRING(scp.ScanTime, 3, 2) + ':' + SUBSTRING(scp.ScanTime, 5, 2)),
		TraceCode = i.VanSeries + scp.ProdSeq, ProdItem = scp.ProdItem, OrderNo = i.VanSeries + '1' + scp.ProdSeq,Vanseries = scp.Vanseries, 
		IsEmpty = 0, ProdCode = scp.ProdCode
		from #tempScanControlPoint as tscp
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		inner join PRD_ProdLineControl as plc on scp.VanSeries = plc.VanSeries and scp.ControlPoint = plc.ControlPoint
		inner join MD_Item as i on scp.ProdItem = i.Code
		
		--更新空车的生产线
		update tscp set ProdLine = mstr.Code, StartDate = convert(datetime, scp.ScanDate), JITSeq = scp.JITSeq,
		ScanDateTime = convert(datetime, SUBSTRING(scp.ScanDate, 1, 4) + '-' + SUBSTRING(scp.ScanDate, 5, 2) + '-' + SUBSTRING(scp.ScanDate, 7, 2) + ' ' + SUBSTRING(scp.ScanTime, 1, 2) + ':' + SUBSTRING(scp.ScanTime, 3, 2) + ':' + SUBSTRING(scp.ScanTime, 5, 2)),
		Vanseries = scp.Vanseries, 
		IsEmpty = 1, ProdCode = scp.ProdCode
		from #tempScanControlPoint as tscp
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		inner join SCM_FlowMstr as mstr on scp.ProdCode = mstr.BlankSeqProdCode
		where mstr.[Type] = 4 and mstr.ProdLineType = 1
		-----------------------------↑查找过点扫描信息-----------------------------	
		
		
		
		
		-----------------------------↓检查是否能够找到总装生产单-----------------------------
		declare @NoOrderPordCode varchar(50)
		declare @NoOrderPordSeq varchar(50)
		
		select top 1 @NoOrderPordCode = scp.ProdCode, @NoOrderPordSeq = scp.ProdSeq 
		from #tempScanControlPoint as tscp
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		left join ORD_OrderMstr_4 as mstr on mstr.OrderNo = tscp.OrderNo --and tscp.ProdLine = mstr.Flow
		where mstr.OrderNo is null and tscp.IsEmpty = 0
		
		if @NoOrderPordCode is not null
		begin
			set @ErrorMsg = N'生产代码' + @NoOrderPordCode + N'车身号' + @NoOrderPordSeq + N'没有找到总装生产单。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		-----------------------------↑检查是否能够找到总装生产单-----------------------------	
		
		
		
		
		
		-----------------------------↓检查是否过了JIT点-----------------------------
		--已经过了JIT点
		declare @SeqErrProdCode varchar(50)
		declare @SeqErrProdSeq varchar(50)
		
		select @SeqErrProdCode= scp.ProdCode, @SeqErrProdSeq = scp.ProdSeq
		from #tempScanControlPoint as tscp
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		inner join ORD_OrderMstr_4 as mstr on tscp.OrderNo = mstr.OrderNo and tscp.ProdLine = mstr.Flow
		inner join ORD_OrderSeq_4 as seq on seq.TraceCode = mstr.TraceCode and seq.ProdLine = mstr.Flow
		where seq.Seq < 59999999999999
		
		if @SeqErrProdCode is not null
		begin
			set @ErrorMsg = N'生产代码' + @SeqErrProdCode + N'车身号' + @SeqErrProdSeq + N'已经过了JIT点。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		-----------------------------↑检查是否过了JIT点-----------------------------	
		
		
		
		
		
		-----------------------------↓生产线变更-----------------------------
		--查找换生产线的生产单
		select Identity(int, 1, 1) RowId, mstr.OrderNo, det.Id as OrderDetId, det.Item, i.VanSeries, rm.Code as Routing, convert(date, mstr.StartTime) as StartDate, 
				mstr.Flow as OldProdLine, tscp.ProdLine as NewProdLine
		into #tempProdLineChange
		from #tempScanControlPoint as tscp
		inner join ORD_OrderMstr_4 as mstr on tscp.OrderNo = mstr.OrderNo
		inner join ORD_OrderDet_4 as det on mstr.OrderNo = det.OrderNo
		inner join MD_Item as i on det.Item = i.Code
		left join PRD_RoutingMstr as rm on rm.ProdLine = tscp.ProdLine and rm.VanSeries = tscp.VanSeries
		where tscp.ProdLine <> mstr.Flow
		
		if exists(select top 1 OrderNo from #tempProdLineChange where Routing is null)
		begin
			declare @ErrorOrderNo1 varchar(50)
			select top 1 @ErrorOrderNo1 = OrderNo from #tempProdLineChange where Routing is null
			
			set @ErrorMsg = N'没有找到生产单'+@ErrorOrderNo1+N'变更生产线后的工艺流程。'
			RAISERROR(@ErrorMsg, 16, 1)
		end
		
		if exists(select top 1 OrderNo from #tempProdLineChange)
		begin

			CREATE TABLE #tempOrderBomDet  --订单BOM缓存表
			(
				RowId int identity(1, 1),
				ProdLine varchar(50),
				ProdLineType tinyint,	
				ProdItem varchar(50),
				ProdCode varchar(50),
				ProdSeq varchar(50),
				Seq int,
				Item varchar(50),
				ItemDesc varchar(100),
				RefItemCode varchar(50),
				Uom varchar(5),
				Op int,
				OpRef varchar(5),
				OrderQty decimal(18,8),
				OrgOrderQty decimal(18,8),
				Location varchar(50),
				PONo varchar(50),
				POLineNo varchar(50),
				UPGCode varchar(50),
				VanPO varchar(50),
				FlowStrategy tinyint,
				VanDiffId int,
				EOSwitchId int,
				EONo varchar(50),
				POChangeId int,
				MultiSupplyGroup varchar(50),       --LES多轨组号
				SubstituteGroup varchar(50),        --SAP替代组号
				ManufactureParty varchar(50),		--制造商，双轨使用
				VDMinusUpdateFlag bit default(0),    --订单车减料差异档更新标记
				OrderNo varchar(50),
				BomId varchar(50),
				Shelf varchar(50),
				ErrorId int,
				ErrorMsg varchar(100),
				EOCountingDown int,
				POCountingDown int
			)
			
			--生产线原材料库位缓存表，即拉料入库库位表
			CREATE TABLE #tempLocTo
			(
				LocTo varchar(50)
			)
			
			CREATE TABLE #tempMSGroupTargetOrder  --整车、替代组汇总临时表
			(
				MSGroupTargetOrderRowId int identity(1, 1),
				OrderNo varchar(50),
				MultiSupplyGroup varchar(50)
			)
			
			CREATE TABLE #tempMSOrderBomDetId  --一个双轨组下的整车+工位+替代物料表
			(
				MSOrderBomDetCycleId int identity(1, 1),
				RowId int,
				Item varchar(50),
				MultiSupplyGroup varchar(50),
				OrderQty decimal,
				ErrorId int,
				ErrorMsg varchar(100)
			)
			
			CREATE TABLE #tempMultiSupplyGroup
			(
				RowId int IDENTITY(1, 1),
				MultiSupplyGroup varchar(50)
			)
			
			declare @PLChangeRowId int
			declare @MaxPLChangeRowId int
			
			select @PLChangeRowId = MIN(RowId), @MaxPLChangeRowId = MAX(RowId) from #tempProdLineChange
			
			while (@PLChangeRowId <= @MaxPLChangeRowId)
			begin  --循环变更生产线
				Declare @OrderNo varchar(50)
				Declare @OrderDetId int
				Declare @ProdItem varchar(50)
				Declare @ProdLine varchar(50)
				Declare @EffDate datetime
				Declare @Routing  varchar(50)
				Declare @Region varchar(50)
				Declare @LocFrom varchar(50)
				Declare @LocTo varchar(50)
				Declare @ExtraDmdSource varchar(50)
				Declare @StartDate datetime
				Declare @ProdLineType tinyint

				--查找一张生产单
				select @OrderNo = OrderNo, @OrderDetId = OrderDetId, @ProdItem = Item, @ProdLine = NewProdLine, @EffDate = StartDate, @Routing = Routing
				from #tempProdLineChange where RowId = @PLChangeRowId
				
				--查找新线生产线区域、默认原材料消耗库位和成品入库库位和其它需求源，其它需求源作为其它需要考虑的原材料消耗库位
				select @Region = PartyFrom, @LocFrom = LocFrom, @LocTo = LocTo, @ExtraDmdSource = ExtraDmdSource, @ProdLineType = ProdLineType from SCM_FlowMstr where Code = @ProdLine			
				



				-----------------------------↓删除原生产线Bom-----------------------------
				--更新工位余量，把已经计算的JIT量全部作为正数记录到工位余量中
				update orb set Qty = Qty + bom.orderQty, [Version] = orb.[Version] + 1, 
				LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm
				from SCM_OpRefBalance as orb inner join
				(select bom.Item, bom.OpRef, SUM(bom.OrderQty) as orderQty
				from ORD_OrderBomDet_4 as bom
				where bom.OrderNo = @OrderNo and bom.IsCreateOrder = 1
				group by bom.Item, bom.OpRef) as bom on orb.Item = bom.Item and orb.OpRef = bom.OpRef
					
				--更新双轨循环量，把Bom用量更新到双轨的溢出量中
				update mss set SpillQty = SpillQty + bom.OrderQty, [Version] = mss.[Version] + 1
				from ORD_OrderBomDet_4 as bom
				inner join PRD_MultiSupplyItem as msi on bom.Item = msi.Item
				inner join PRD_MultiSupplySupplier as mss on msi.GroupNo = mss.GroupNo and msi.Supplier = mss.Supplier
				where bom.OrderNo = @OrderNo
				
				--删除原生产线Bom
				delete from ORD_OrderBomDet_4 where OrderNo = @OrderNo
				-----------------------------↑删除原生产线Bom-----------------------------
				
				
				
				-----------------------------↓新增新生产线Bom-----------------------------
				--缓存订单Bom
				truncate table #tempOrderBomDet
				insert into #tempOrderBomDet(Item, ItemDesc, RefItemCode, Uom,
											Op, OpRef, OrderQty, OrgOrderQty, Location,
											PONo, POLineNo, UPGCode, FlowStrategy,
											VanDiffId, EOSwitchId, EONo, POChangeId, 
											MultiSupplyGroup, ManufactureParty, SubstituteGroup,
											BomId, Shelf)
				select bi.Code as Item, bi.Desc1 as ItemDesc, bi.RefCode as RefItemCode, b.Uom, --BOM单位就是基本单位
				rd.Op, rd.OpRef, b.BomUnitQty as OrderQty, b.BomUnitQty as OrgOrderQty, @LocFrom as Location, --物料消耗库位
				null as PONo, null as POLineNo, b.UPGCode, 0 as FlowStrategy, --默认拉动方式手工的拉料方式
				0 as VanDiffId, 0 as EOSwitchId, null as EONo, 0 as POChangeId, 
				null as MultiSupplyGroup, null as ManufactureParty, b.SubstituteGroup,
				b.BomId, b.Shelf
				--整车上线计划
				from CUST_BomCache as b
				--工艺流程
				inner join PRD_RoutingMstr as rm on rm.Code = @Routing
				--工位表，取工位的顺序（工序）
				inner join PRD_RoutingDet as rd on rm.Code = rd.Routing and b.OpRef = rd.OpRef
				--BOM物料表，取描述、参考零件号、单位
				inner join MD_Item as bi on b.BomItem = bi.Code
				--生产线LayOut，取BOM消耗库位和物料拉动方式
				where b.ProdItem = @ProdItem and b.ProdLine = @ProdLine and b.EffDate = @EffDate
			
			
			
			
				-----------------------------↓更新Bom物料消耗库位-----------------------------
				Declare @SplitSymbol1 varchar(1) = ','
				Declare @SplitSymbol2 varchar(1) = '|'
				
				--把生产线入库库位插入生产线原材料库位缓存表中
				truncate table #tempLocTo
				insert into #tempLocTo values (@LocFrom)
				
				--循环拆分其它需求源中的库位并插入生产线原材料库位缓存表中
				if ISNULL(@ExtraDmdSource, '') <> ''
				begin
					if (charindex(@SplitSymbol1, @ExtraDmdSource) <> 0)
					begin
						while(charindex(@SplitSymbol1, @ExtraDmdSource) <> 0)
						begin
							insert #tempLocTo values (substring(@ExtraDmdSource, 1, charindex(@SplitSymbol1, @ExtraDmdSource) - 1))
							set @ExtraDmdSource = stuff(@ExtraDmdSource, 1, charindex(@SplitSymbol1,@ExtraDmdSource), ' ')
						end
					end
					else if (charindex(@SplitSymbol2, @ExtraDmdSource) <> 0)
					begin
						while(charindex(@SplitSymbol2, @ExtraDmdSource) <> 0)
						begin
							insert #tempLocTo values (substring(@ExtraDmdSource, 1, charindex(@SplitSymbol2, @ExtraDmdSource) - 1))
							set @ExtraDmdSource = stuff(@ExtraDmdSource, 1, charindex(@SplitSymbol2,@ExtraDmdSource), ' ')
						end
					end
					insert #tempLocTo values (Ltrim(@ExtraDmdSource))
				end
				update #tempLocTo set LocTo = Rtrim(Ltrim(LocTo))
			    
				--缓存拉料路线明细
				select det.Item, mstr.LocTo, stra.Strategy as FlowStrategy into #tempFlowDet 
				from SCM_FlowMstr as mstr 
				inner join SCM_FlowStrategy as stra on mstr.Code = stra.Flow
				inner join SCM_FlowDet as det on mstr.Code = det.Flow
				--先考虑路线明细的目的库位，如果路线明细库位为空在考虑路线头上的目的库位
				inner join #tempLocTo as loc on loc.LocTo = det.LocTo or (det.LocTo is null and loc.LocTo = mstr.LocTo)
				inner join #tempOrderBomDet as bom on bom.Item = det.Item
				where mstr.[Type] in (1, 2, 5, 6, 8) --拉料路线仅考虑采购、移库、委外、客供品、计划协议
				group by det.Item, mstr.LocTo, stra.Strategy
			    
				--更新订单BOM缓存表上的消耗库位和拉料方式
				--优先级为序列、JIT、看板、工位零件库位对照档、生产线默认库位
				update bom set FlowStrategy = 1, Location = flowDet.LocTo
				from #tempOrderBomDet as bom 
				inner join #tempFlowDet as flowDet on bom.Item = flowDet.Item
				where flowDet.FlowStrategy = 1 and bom.FlowStrategy = 0
			    
				update bom set FlowStrategy = 2, Location = flowDet.LocTo
				from #tempOrderBomDet as bom 
				inner join #tempFlowDet as flowDet on bom.Item = flowDet.Item
				where flowDet.FlowStrategy = 2 and bom.FlowStrategy = 0
			    
				update bom set FlowStrategy = 3, Location = flowDet.LocTo
				from #tempOrderBomDet as bom 
				inner join #tempFlowDet as flowDet on bom.Item = flowDet.Item
				where flowDet.FlowStrategy = 3 and bom.FlowStrategy = 0
			    
				--update bom set Location = layout.Location
				--from #tempOrderBomDet as bom 
				--inner join PRD_ProdLineLayOut as layout on bom.Item = layout.Item and bom.OpRef = layout.OpRef  --用零件+工位对应
				--where bom.FlowStrategy = 0
				update bom set Location = layout.Location
				from #tempOrderBomDet as bom 
				inner join PRD_ProdLineLayOut as layout on bom.Item = layout.Item and bom.OpRef = layout.OpRef  --用零件+工位对应
				where bom.FlowStrategy = 0				
				-----------------------------↑更新Bom物料消耗库位-----------------------------
				
				
				
				
				-----------------------------↓更新双轨-----------------------------
				declare @MSCycleRowId int
				declare @MaxMSCycleRowId int
				declare @MultiSupplyGroup varchar(50)
				declare @MSGroupTargetOrderRowId int
				declare @MaxMSGroupTargetOrderRowId int
				declare @MSEffSupplier varchar(50)
				declare @MSId int
				declare @MSSeq int
				declare @MSTargetCycleQty decimal(18, 8)
				declare @MSAccumulateQty decimal(18, 8)
				declare @MSVersion int
				declare @MSCycleOrderBomDetCycleId int
				declare @MaxMSCycleOrderBomDetCycleId int
				declare @MSRowId int
				declare @MSItem varchar(50)
				declare @MSSupplier varchar(50)
				declare @MSSubstituteGroup varchar(50)
				declare @MSOrderQty decimal(18, 8)
				declare @MSOrderBomDetCount int				
				
				--查找所有双轨组
				truncate table #tempMultiSupplyGroup
				insert into #tempMultiSupplyGroup
				select MultiSupplyGroup from #tempOrderBomDet 
				where OrderQty > 0 and FlowStrategy <> 1  --不考虑排序
				and ISNULL(MultiSupplyGroup, '') <> ''
				group by MultiSupplyGroup
				
				--更新双轨零件供应商，零件号相同的双轨零件随便找一个供应商
				update bom set ManufactureParty = SUBSTRING(item.Supplier, 1, 3)
				from #tempOrderBomDet as bom
				inner join PRD_MultiSupplyItem as item on bom.Item = item.Item 
				and bom.MultiSupplyGroup = item.GroupNo
				where bom.SubstituteGroup is not null and bom.SubstituteGroup <> ''
				
				--循环双轨组
				if exists (select top 1 RowId from #tempMultiSupplyGroup)
				begin
					select @MSCycleRowId = MIN(RowId), @MaxMSCycleRowId = MAX(RowId) from #tempMultiSupplyGroup
					while(@MSCycleRowId <= @MaxMSCycleRowId)
					begin
						--取得双轨组号
						select @MultiSupplyGroup = MultiSupplyGroup from #tempMultiSupplyGroup where RowId = @MSCycleRowId
						
						--查找当前供应商和循环量
						select @MSEffSupplier = EffSupplier, @MSTargetCycleQty = TargetCycleQty, @MSAccumulateQty = AccumulateQty,
						@MSVersion = [Version]
						from PRD_MultiSupplyGroup where GroupNo = @MultiSupplyGroup
						
						if isnull(@MSEffSupplier, '') = ''
						begin  --当前循环供应商没有指定
							select top 1 @MSEffSupplier = Supplier, @MSTargetCycleQty = CycleQty, @MSAccumulateQty = SpillQty 
							from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and CycleQty > SpillQty and IsActive = 1 order by Seq, Id
							
							if isnull(@MSEffSupplier, '') = ''
							begin
								set @MSCycleRowId = @MSCycleRowId + 1
								continue
							end
							else
							begin
								update PRD_MultiSupplyGroup set EffSupplier = @MSEffSupplier, TargetCycleQty = @MSTargetCycleQty, AccumulateQty = @MSAccumulateQty, [Version] = @MSVersion + 1,
								LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow
								where GroupNo = @MultiSupplyGroup and [Version] = @MSVersion

								if @@rowcount = 0
								begin
									RAISERROR(N'双轨组已经被更新。', 16, 1)
								end
								
								set @MSVersion = @MSVersion + 1
							end
						end	
						
						--查找整车、替代组汇总插入临时表
						truncate table #tempMSGroupTargetOrder
						insert into #tempMSGroupTargetOrder(OrderNo, MultiSupplyGroup)
						select bom.OrderNo, bom.MultiSupplyGroup
						from #tempOrderBomDet as bom
						inner join PRD_MultiSupplyItem as item on bom.Item = item.Item and bom.MultiSupplyGroup = item.GroupNo --and bom.SubstituteGroup = item.SubstituteGroup
						where bom.MultiSupplyGroup = @MultiSupplyGroup and OrderQty > 0
						group by bom.Seq, bom.OrderNo, bom.MultiSupplyGroup
						order by bom.Seq, bom.OrderNo
						
						if exists(select top 1 MSGroupTargetOrderRowId from #tempMSGroupTargetOrder)
						begin
							--查找循环开始和结束标识
							select @MSGroupTargetOrderRowId = MIN(MSGroupTargetOrderRowId), @MaxMSGroupTargetOrderRowId = MAX(MSGroupTargetOrderRowId) from #tempMSGroupTargetOrder
							
							--循环查找整车+工位+替代物料组并更新双轨零件的数量
							while (@MSGroupTargetOrderRowId > 0 and @MSGroupTargetOrderRowId <= @MaxMSGroupTargetOrderRowId) 
							begin
								--查找同一台车同替代组下有多少个双轨物料
								truncate table #tempMSOrderBomDetId
								insert into #tempMSOrderBomDetId(RowId, Item, MultiSupplyGroup, OrderQty)
								select det.RowId, det.Item, det.MultiSupplyGroup, det.OrderQty
								from #tempOrderBomDet as det
								inner join #tempMSGroupTargetOrder as sub on det.OrderNo = sub.OrderNo and det.MultiSupplyGroup = sub.MultiSupplyGroup
								where sub.MSGroupTargetOrderRowId = @MSGroupTargetOrderRowId and det.OrderQty > 0
								
								select @MSOrderBomDetCount = COUNT(distinct Item) from #tempMSOrderBomDetId
								if @MSOrderBomDetCount = 1
								begin	--双轨零件号相同，再次更新BOM指定供应商
									--不管是否溢出都是当前双轨供应商供货
									if exists(select top 1 * from #tempMSOrderBomDetId as bom 
												inner join PRD_MultiSupplyItem as item on bom.MultiSupplyGroup = item.GroupNo and bom.Item = item.Item
												where item.Supplier = @MSEffSupplier)
									begin
										update #tempOrderBomDet set ManufactureParty = SUBSTRING(@MSEffSupplier, 1, 3) where RowId = (select top 1 RowId from #tempMSOrderBomDetId)														
									end
									--else
									--begin  --ErrorLog: 106.没有找到当前多轨供应商的物料
									--	update #tempOrderBomDet set ErrorId = 106, ErrorMsg = @MSEffSupplier where RowId = (select top 1 RowId from #tempMSOrderBomDetId)
									--end
								end
								else
								begin  --双轨零件不同
									--不管是否溢出都是当前双轨供应商供货
									if exists(select top 1 * from #tempMSOrderBomDetId as ms
												inner join PRD_MultiSupplyItem as item on ms.Item = item.Item and ms.MultiSupplyGroup = item.GroupNo
												where item.Supplier = @MSEffSupplier )
									begin  --有当前多轨供应商供的物料，把不是当前供应商的BOM用量更新为0
										update ms set OrderQty = 0
										from #tempMSOrderBomDetId as ms
										inner join PRD_MultiSupplyItem as item on ms.Item = item.Item and ms.MultiSupplyGroup = item.GroupNo
										where item.GroupNo = @MultiSupplyGroup and item.Supplier <> @MSEffSupplier
									end
									--else
									--begin  --ErrorLog: 106.没有找到当前多轨供应商的物料
									--	update ms set ErrorId = 106, ErrorMsg = @MSEffSupplier --,OrderQty = 0 
									--	from #tempMSOrderBomDetId as ms
									--	inner join PRD_MultiSupplyItem as item on ms.Item = item.Item and ms.MultiSupplyGroup = item.GroupNo
									--	where item.GroupNo = @MultiSupplyGroup and item.Supplier <> @MSEffSupplier
									--end
								end
								
								--查找双轨物料用量
								select @MSOrderQty = SUM(OrderQty) from #tempMSOrderBomDetId
								
								if @MSTargetCycleQty - @MSAccumulateQty > @MSOrderQty
								begin  --剩余循环量满足
									--更新双轨供应商零件的用量
									set @MSAccumulateQty = @MSAccumulateQty + @MSOrderQty
								end
								else
								begin  --剩余循环量不满足，但是用量不能拆分到两个供应商上面，切换供应商
									--记录供应商溢出量
									update PRD_MultiSupplySupplier set SpillQty = SpillQty + @MSOrderQty - (@MSTargetCycleQty - @MSAccumulateQty),AccumulateQty = AccumulateQty + @MSAccumulateQty + @MSOrderQty,
									LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow, [Version] = [Version] + 1
									where GroupNo = @MultiSupplyGroup and Supplier = @MSEffSupplier
									
									if @@rowcount = 0
									begin
										set @ErrorMsg = N'双轨组' + @MultiSupplyGroup + N'供应商' + @MSEffSupplier + N'没有找到。'
										RAISERROR(@ErrorMsg, 16, 1)
									end
									
									--切换供应商
									while 1 = 1
									begin 
										--查找供应商顺序号
										select @MSId = Id, @MSSeq = Seq from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and Supplier = @MSEffSupplier
									
										if exists(select top 1 Supplier from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and Seq > @MSSeq and IsActive = 1 and Id <> @MSId order by Seq)
										begin
											--查找下一个供应商
											select top 1 @MSEffSupplier = Supplier, @MSTargetCycleQty = CycleQty, @MSAccumulateQty = SpillQty
											from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and Seq > @MSSeq and IsActive = 1 and Id <> @MSId order by Seq
										end
										else if exists(select top 1 Supplier from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and Seq <= @MSSeq and IsActive = 1 and Id <> @MSId order by Seq)
										begin  --已经循环到最后一个供应商，从第一个开始
											select top 1 @MSEffSupplier = Supplier, @MSTargetCycleQty = CycleQty, @MSAccumulateQty = SpillQty 
											from PRD_MultiSupplySupplier where GroupNo = @MultiSupplyGroup and IsActive = 1 and Id <> @MSId order by Seq
										end
										else
										begin
											set @ErrorMsg = N'双轨组' + @MultiSupplyGroup + '没有有效的供应商。'
											RAISERROR(@ErrorMsg, 16, 1)
										end
							
										if @MSTargetCycleQty > @MSAccumulateQty
										begin --切换供应商，跳出循环
											break
										end
										else
										begin  --剩余循环量不足（溢出量大于等于循环量），再切换到下一个供应商
											--记录供应商溢出量，溢出量等于累计量 - 循环量的	
											update PRD_MultiSupplySupplier set SpillQty = (@MSAccumulateQty - @MSTargetCycleQty),
											LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow, [Version] = [Version] + 1
											where GroupNo = @MultiSupplyGroup and Supplier = @MSEffSupplier
											--再次循环
											
											if @@rowcount = 0
											begin
												set @ErrorMsg = N'双轨组' + @MultiSupplyGroup + N'供应商' + @MSEffSupplier + N'没有找到。'
												RAISERROR(@ErrorMsg, 16, 1)
											end
										end
									end
								end
								
								--更新BOM的双轨零件用量
								update bom set OrderQty = ms.OrderQty, ErrorId = case when ms.ErrorId IS not null then ms.ErrorId else bom.ErrorId end, ErrorMsg = case when ms.ErrorId IS not null then ms.ErrorMsg else bom.ErrorMsg end
								from #tempOrderBomDet as bom
								inner join #tempMSOrderBomDetId as ms on bom.RowId = ms.RowId
								
								set @MSGroupTargetOrderRowId = @MSGroupTargetOrderRowId + 1
							end
						end
						
						--把溢出量更新为0
						update PRD_MultiSupplySupplier set SpillQty = 0,
						LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow, [Version] = [Version] + 1
						where GroupNo = @MultiSupplyGroup and Supplier = @MSEffSupplier
						
						if @@rowcount = 0
						begin
							set @ErrorMsg = N'双轨组' + @MultiSupplyGroup + N'供应商' + @MSEffSupplier + N'没有找到。'
							RAISERROR(@ErrorMsg, 16, 1)
						end
											
						--更新双轨组
						update PRD_MultiSupplyGroup set EffSupplier = @MSEffSupplier, TargetCycleQty = @MSTargetCycleQty, AccumulateQty = @MSAccumulateQty, 
						LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow, [Version] = @MSVersion + 1
						where GroupNo = @MultiSupplyGroup and [Version] = @MSVersion
						
						if @@rowcount = 0
						begin
							RAISERROR(N'双轨组已经被更新。', 16, 1)
						end
						
						set @MSCycleRowId = @MSCycleRowId + 1
					end
				end
				-----------------------------↑更新双轨-----------------------------
				



				-----------------------------↓插入Bom-----------------------------
				declare @OrderBomCount int
				declare @BeginOrderBomId bigint
				declare @NextOrderBomId bigint = 1
				
				--查找订单Bom数量
				select @OrderBomCount = COUNT(*) from #tempOrderBomDet
				--锁定OrderBomId字段标识
				exec USP_SYS_BatchGetNextId 'ORD_OrderBomDet', @OrderBomCount, @NextOrderBomId output
				--查找开始标识
				set @BeginOrderBomId = @NextOrderBomId - @OrderBomCount
				
				select RowId, ROW_NUMBER() over (order by RowId) + @BeginOrderBomId as OrderBomId into #tempOrderBomId
				from #tempOrderBomDet order by RowId
				
				insert into ORD_OrderBomDet_4 (
				Id,
				OrderNo,
				OrderType,
				OrderSubType,
				OrderDetId,
				OrderDetSeq,
				Seq,
				Item,
				ItemDesc,
				Uom,
				BaseUom,
				ManufactureParty,
				Op,
				OpRef,
				OrderQty,
				OrgOrderQty,
				UnitQty,
				BomUnitQty,
				IsPrint,
				BackFlushMethod,
				FeedMethod,
				IsAutoFeed,
				IsScanHu,
				CreateUser,
				CreateUserNm,
				CreateDate,
				LastModifyUser,
				LastModifyUserNm,
				LastModifyDate,
				[Version],
				PartyFrom,
				PartyTo,
				SubstituteGroup,
				MultiSupplyGroup,
				UPGCode,
				PONo,
				POLineNo,
				Location,
				VanDiffId,
				EOSwitchId,
				EONo,
				POChangeId,
				ItemConsumeId,
				EOCountingDown,
				FlowStrategy,
				IsCreateOrder,
				BomId,
				Shelf,
				POCountingDown
				)
				select 
				bi.OrderBomId,
				@OrderNo,
				4,                           --类型，4生产单
				0,                           --子类型，0正常
				@OrderDetId,
				1,
				0,                           --BOM顺序号
				b.Item,
				b.ItemDesc,
				b.Uom,
				b.Uom,
				b.ManufactureParty,
				b.Op,
				b.OpRef,
				b.OrderQty,
				b.OrgOrderQty,
				1,
				b.OrderQty,
				0,
				0,
				0,
				0,
				0,
				@CreateUserId,
				@CreateUserNm,
				@DateTimeNow,
				@CreateUserId,
				@CreateUserNm,
				@DateTimeNow,
				1,
				@Region,
				@Region,
				b.SubstituteGroup,
				b.MultiSupplyGroup,
				b.UPGCode,
				b.PONo,
				b.POLineNo,
				b.Location,
				b.VanDiffId,
				b.EOSwitchId,
				b.EONo,
				b.POChangeId,
				0,                              --厂内外消化档
				ISNULL(b.EOCountingDown, 0),
				b.FlowStrategy,
				0,
				b.BomId,
				b.Shelf,
				ISNULL(b.POCountingDown, 0)
				from #tempOrderBomDet as b
				inner join #tempOrderBomId as bi on b.RowId = bi.RowId
				-----------------------------↑插入Bom-----------------------------
				
				-----------------------------↑新增新生产线Bom-----------------------------
				
				
				set @PLChangeRowId = @PLChangeRowId + 1
			end
			
			drop table #tempLocTo
			drop table #tempOrderBomDet
			
			--更新总装工艺流程
			update mstr set Routing = tplc.Routing
			from ORD_OrderMstr_4 as mstr inner join #tempProdLineChange as tplc on mstr.OrderNo = tplc.OrderNo
		end
		-----------------------------↑生产线变更-----------------------------
		
		
		
		
		-----------------------------↓更新整车物料号-----------------------------
		--更新订单明细的整车物料号
		update det set Item = tscp.ProdItem, ItemDesc = i.desc1
		from ORD_OrderDet_4 as det 
		inner join ORD_OrderMstr_4 as mstr on det.OrderNo = mstr.OrderNo
		inner join #tempScanControlPoint as tscp on tscp.OrderNo = mstr.OrderNo
		inner join MD_Item as i on tscp.ProdItem = i.Code
		where tscp.ProdItem <> det.Item
		
		--更新车序表的生产线
		--update seq set ProdLine = tscp.ProdLine
		--from ORD_OrderMstr_4 as mstr
		--inner join ORD_OrderSeq_4 as seq on mstr.TraceCode = seq.TraceCode and mstr.Flow = seq.ProdLine
		--inner join #tempScanControlPoint as tscp on tscp.OrderNo = mstr.OrderNo
		--where tscp.ProdItem <> mstr.Dock
		
		--更新生产单的整车物料号、颜色、生产代码
		update mstr set Dock = tscp.ProdItem,   --整车物料号
		CKDLot = scp.Color,   --颜色
		ProdCode = scp.ProdCode,  --生产代码
		Flow = tscp.ProdLine  --生产线
		from ORD_OrderMstr_4 as mstr
		inner join #tempScanControlPoint as tscp on tscp.OrderNo = mstr.OrderNo
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		where tscp.ProdItem <> mstr.Dock
		-----------------------------↑更新整车物料号-----------------------------



		-----------------------------↓生成JIT车序/更新车序-----------------------------	
		declare @CycleProdLineId int
		declare @MaxProdLineId int
		--declare @ProdLine varchar(50)
		declare @ProdLineRegion varchar(50)
		declare @TaktTime int  --节拍时间（秒）
		
		Create table #tempJITOrderSeq
		(
			RowId int identity(1, 1),
			CPRowId int,
			TraceCode varchar(50),
			StartDate datetime,
			JITSeq int
		)
		
		select distinct identity(int, 1, 1) as RowId, ProdLine into #tempProdLine
		from #tempScanControlPoint order by ProdLine
		
		select @MaxProdLineId = MAX(RowId), @CycleProdLineId = MIN(RowId) from #tempProdLine
		
		while @MaxProdLineId >= @CycleProdLineId
		begin  --根据生产线循环
			declare @CycleCPRowId int = 0
			declare @MaxCPRowId int = 0
			declare @CPRowId int = 0
			declare @TraceCode varchar(50) = null
			declare @OrderSeqId int = 0
			declare @MaxSeq int = 0
			declare @OldStartDate datetime = null
			declare @NewStartDate datetime = null
			declare @JITSeq int = 0
			declare @ProdCode varchar(50) = null
			declare @ProdSeq varchar(50) = null
			
			--获取循环的生产线
			select @ProdLine = ProdLine from #tempProdLine where RowId = @CycleProdLineId
			
			--按生产线获取车头，根据过点时间排序
			truncate table #tempJITOrderSeq
			insert into #tempJITOrderSeq(CPRowId, TraceCode, StartDate, JITSeq)
			select tscp.RowId, tscp.TraceCode, tscp.StartDate, tscp.JITSeq
			from #tempScanControlPoint as tscp 
			where tscp.ProdLine = @ProdLine
			order by tscp.ScanDateTime, tscp.ScanControlPointId
			
			select @CycleCPRowId = Min(RowId), @MaxCPRowId = Max(RowId) from #tempJITOrderSeq
			while @CycleCPRowId <= @MaxCPRowId
			begin  --循环过点信息（包含空车），更新车序和JIT车序
				select @CPRowId = CPRowId, @TraceCode = TraceCode, @NewStartDate = StartDate, @JITSeq = JITSeq
				from #tempJITOrderSeq where RowId = @CycleCPRowId
				
				if (@OldStartDate is null or @OldStartDate <> @NewStartDate)
				begin  --查找生产线最大序号，顺序号前缀为50代表过JIT点
					if Exists (select top 1 Id from ORD_OrderSeq_4 where ProdLine = @ProdLine and Seq
								between Cast('50' + CONVERT(varchar(8) , @NewStartDate, 112) + '0000' as bigint) and Cast('50' + Cast(Cast(CONVERT(varchar(8) , @NewStartDate, 112) as bigint) + 1 as varchar(8)) + '0000' as bigint))
					begin  --下线日期已经有生产单
						select top 1 @MaxSeq = cast(substring(cast(Seq as varchar(14)), 11, 4) as int) from ORD_OrderSeq_4 where ProdLine = @ProdLine and Seq 
						between Cast('50' + CONVERT(varchar(8) , @NewStartDate, 112) + '0000' as bigint) and Cast('50' + Cast(Cast(CONVERT(varchar(8) , @NewStartDate, 112) as bigint) + 1 as varchar(8)) + '0000' as bigint)
						order by Seq desc
					end
					
					set @OldStartDate = @NewStartDate
				end
				
				--最大序号+1
				set @MaxSeq = @MaxSeq + 1
		
				if @TraceCode is null
				begin  --空车，插入一条空车序
					--锁定OrderDetId字段标识字段
					exec USP_SYS_GetNextId 'ORD_OrderSeq', @OrderSeqId output
				
					--插入空车车序
					insert into ORD_OrderSeq_4(Id, ProdLine, TraceCode, OrderType, PartyFrom, PartyTo, Seq, 
					SapSeq, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, [Version])
					select @OrderSeqId, mstr.Code, isnull(tscp.TraceCode, scp.ProdCode + scp.ProdSeq), 4, mstr.PartyFrom, mstr.PartyTo, cast('50' + CONVERT(varchar(8) , @NewStartDate, 112 ) + REPLICATE('0',4-len(@MaxSeq))+cast(@MaxSeq as varchar) as bigint),
					@JITSeq, @CreateUserId, @CreateUserNm, @DateTimeNow, @CreateUserId, @CreateUserNm, @DateTimeNow, 1
					from #tempScanControlPoint as tscp
					inner join MES_ScanControlPoint as scp on tscp.ScanControlPointId = scp.Id
					inner join SCM_FlowMstr as mstr on scp.ProdCode = mstr.BlankSeqProdCode
					where tscp.RowId = @CPRowId
					
					if @@ROWCOUNT <> 1
					begin
						set @ErrorMsg = N'插入空车失败，可能是生产线没有设置空车生产代码。'
						RAISERROR(@ErrorMsg, 16, 1)
					end
				end
				else
				begin  --更新车序和JIT车序					
					update ORD_OrderSeq_4 set ProdLine = @ProdLine, Seq = cast('50' + CONVERT(varchar(8) , @NewStartDate, 112 ) + REPLICATE('0',4-len(@MaxSeq))+cast(@MaxSeq as varchar) as bigint), SapSeq = @JITSeq,
					[Version] = [Version] + 1, LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm
					where TraceCode = @TraceCode
					
					if @@ROWCOUNT <> 1
					begin
						select @ProdCode = scp.ProdCode, @ProdSeq = scp.ProdSeq 
						from #tempScanControlPoint as tscp
						inner join MES_ScanControlPoint as scp on tscp.ScanControlPointId = scp.Id
						where tscp.RowId = @CPRowId
						
						set @ErrorMsg = N'生产线' + @ProdLine + N'生产代码' + @ProdCode + N'车身号' + @ProdSeq + N'更新JIT过点出错。'
						RAISERROR(@ErrorMsg, 16, 1)
					end
				end
				
				set @CycleCPRowId = @CycleCPRowId + 1
			end
		
			set @CycleProdLineId = @CycleProdLineId + 1
		end
		-----------------------------↑生成JIT车序/更新车序-----------------------------	
		
		
		
		
		-----------------------------↓PO发布变更零件-----------------------------
		create table #tempOrderBomDet4PO
		(
			RowId int identity(1, 1),
			OrderNo varchar(50),
			OrderBomDetId int,
			Item varchar(50),
			ProdCode varchar(50),
			ProdSeq varchar(50),
			OrderQty decimal,
			FlowStrategy tinyint,
			VanPO varchar(50),
			SapSeq bigint
		)
		
		CREATE TABLE #tempPOOrder  --PO变更更新车身代码＋车身号循环表
		(
			POOrderCycleId int identity(1, 1),
			OrderNo varchar(50),
			ProdCode varchar(50),
			ProdSeq varchar(50)
		)
		
		CREATE TABLE #tempOpRef
		(
			Op int,             --工序
			OpRef varchar(50),  --工位
			TaktCount int,      --节拍数
		)
		
		CREATE TABLE #tempOrderOpTime
		(
			OrderNo varchar(50),
			Op int,             --工序
			TaktCount int,      --节拍数
			CPTime datetime     --过点时间
		)
		
		--工作日历临时表
		create table #tempWorkingCalendarView
		(
			RowId int Identity(1, 1),
			WorkingDate datetime,
			DateFrom datetime,
			DateTo datetime
		)
		
		create table #tempNoConsumePO
		(
			RowId int Identity(1, 1),
			Id int,
			OldItem varchar(50), 
			NewItem varchar(50), 
			Qty decimal(18,8), 
			ConsumeQty  decimal(18,8), 
			IsVoidVanPO bit, 
			PONo varchar(50), 
			POLineNo varchar(50), 
			POChangeNo varchar(50)
		)
		
		select @MaxProdLineId = MAX(RowId), @CycleProdLineId = MIN(RowId) from #tempProdLine
		
		while @MaxProdLineId >= @CycleProdLineId
		begin  --循环生产线和开始日期
			select @ProdLine = ProdLine from #tempProdLine where RowId = @CycleProdLineId	
			select @TaktTime = TaktTime, @ProdLineRegion = PartyFrom from SCM_FlowMstr where Code = @ProdLine
				
			truncate table #tempOrderBomDet4PO
			insert into #tempOrderBomDet4PO(OrderNo, OrderBomDetId, Item, ProdCode, ProdSeq, OrderQty, FlowStrategy, VanPO, SapSeq)
			select mstr.OrderNo, bom.Id, bom.Item, mstr.ProdCode, mstr.ProdSeq, bom.OrderQty, bom.FlowStrategy, mstr.VanPO, seq.SapSeq
			from ORD_OrderBomDet_4 as bom
			inner join ORD_OrderMstr_4 as mstr on bom.OrderNo = mstr.OrderNo
			inner join ORD_OrderSeq_4 as seq on mstr.TraceCode = seq.TraceCode
			where  mstr.OrderNo in (select OrderNo from #tempScanControlPoint where ProdLine = @ProdLine)
			and bom.FlowStrategy <> 1					
			
			truncate table #tempNoConsumePO
			insert into #tempNoConsumePO(Id, OldItem, NewItem, Qty, ConsumeQty, IsVoidVanPO, PONo, POLineNo, POChangeNo)
			select cast(po.Id as int) as Id, po.OldItem, po.NewItem, po.Qty, po.ConsumeQty, po.IsVoidVanPO, po.PONo, po.POLineNo, po.POChangeNo
			from PRD_POChange as po
			inner join (select distinct Item from #tempOrderBomDet4PO where FlowStrategy <> 1) as a on po.OldItem = a.Item
			where po.Qty > po.ConsumeQty and po.ProdLine = @ProdLine --and po.EffDate <= @DateTimeNow --不是根据当前时间计算是否启用PO，而是根据零件的需求时间
			
			--ErrorLog: 108.BOM已经包含PO变更的新件
			INSERT INTO ERR_UpdateVanOrderBom
			(ProdLine, ProdLineType, StartDate, Item, ItemDesc, OrderQty, PONo, POLineNo, ErrorId, ErrorMsg, CreateDate)
            select @ProdLine, 1, @DateTimeNow, po.NewItem, i.Desc1, po.Qty, po.PONo, po.POLineNo, 108, po.POChangeNo, @DateTimeNow
			from #tempNoConsumePO as po inner join #tempOrderBomDet4PO as bom on po.NewItem = bom.Item
			inner join MD_Item as i on po.NewItem = i.Code
            where bom.OrderQty > 0
			
			if exists(select top 1 RowId from #tempNoConsumePO)
			begin
				declare @POCycleRowId int
				declare @MaxPOCycleRowId int
				declare @ThisPOConsumeQty int
				declare @OldPOItem varchar(50)
				declare @NewPOItem varchar(50)
				declare @NewPOItemDesc varchar(100)
				declare @NewPOItemRefCode varchar(50)
				declare @NewPOItemUom varchar(5)
				declare @POQty decimal
				declare @CosumePOQty decimal
				declare @RemainPOQty decimal
				declare @IsVoidVanPO bit
				declare @POPONo varchar(50)
				declare @POPOLineNo varchar(50)
				declare @POVersion int
				declare @POEffDate datetime
				declare @POOrderCycleId int
				declare @MaxPOOrderCycleId int
				declare @POOrderNo varchar(50)
				declare @POProdCode varchar(50)
				declare @POProdSeq varchar(50)
				declare @POId int
				declare @POMultiSupplyGroup varchar(50)
				declare @POMaxOrderBomDetId int
				declare @POBeginOrderBomDetId int
				declare @POOrderBomDetCount int
				declare @POFirstVanNo varchar(50)
				declare @POCPTime datetime
				
				--循环PO发布变更档
				select @POCycleRowId = MIN(RowId), @MaxPOCycleRowId = MAX(RowId) from #tempNoConsumePO
				while(@POCycleRowId <= @MaxPOCycleRowId)
				begin
					--PO变更是否开始启用
					declare @BeginConsume bit = 0
					
					--获取单条PO发布变更档标识
					select @POId = Id from #tempNoConsumePO where RowId = @POCycleRowId
					
					--PO发布变更装车台数清零
					set @ThisPOConsumeQty = 0
					select @OldPOItem = po.OldItem, @NewPOItem = po.NewItem,
					@NewPOItemDesc = i.Desc1, @NewPOItemRefCode = i.RefCode, @NewPOItemUom = i.Uom,
					@POQty = po.Qty, @CosumePOQty = po.ConsumeQty,
					@RemainPOQty = po.Qty - po.ConsumeQty,  @IsVoidVanPO = po.IsVoidVanPO,
					@POPONo = po.PONo, @POPOLineNo = po.POLineNo, @POVersion = po.[Version],
					@POEffDate = po.EffDate, @POFirstVanNo = FirstVanNo
					from PRD_POChange as po inner join MD_Item as i on po.NewItem = i.Code
					where Id = @POId
					
					if @CosumePOQty > 0
					begin
						set @BeginConsume = 1
					end
					
					--获取变更零件的多轨组号
					set @POMultiSupplyGroup = null
					select top 1 @POMultiSupplyGroup = GroupNo
					from PRD_MultiSupplyItem where Item = @NewPOItem
					
					--清空PO件更新BOM循环临时表
					truncate table #tempPOOrder
					--查找需要更新的订单BOM，PO变更是按照车辆台数计算消耗，所以要先按车辆代码+车身号汇总有多少台车符合PO变更要求
					if @IsVoidVanPO = 0
					begin  --不避开订单车
						insert into #tempPOOrder (OrderNo, ProdCode, ProdSeq)
						select OrderNo, ProdCode, ProdSeq from #tempOrderBomDet4PO 
						where Item = @OldPOItem and OrderQty > 0 and FlowStrategy <> 1 
						group by OrderNo, ProdCode, ProdSeq, SapSeq order by SapSeq
					end
					else
					begin  --避开订单车
						insert into #tempPOOrder (OrderNo, ProdCode, ProdSeq)
						select OrderNo, ProdCode, ProdSeq from #tempOrderBomDet4PO 
						where Item = @OldPOItem and OrderQty > 0 and FlowStrategy <> 1 and ISNULL(VanPO, '') = '' 
						group by OrderNo, ProdCode, ProdSeq, SapSeq order by SapSeq
					end
					
					if exists(select top 1 POOrderCycleId from #tempPOOrder)
					begin
						select @POOrderCycleId = MIN(POOrderCycleId), @MaxPOOrderCycleId = MAX(POOrderCycleId) from #tempPOOrder
						
						--循环需要更新的车辆代码+车身号
						while (@POOrderCycleId > 0 and @POOrderCycleId <= @MaxPOOrderCycleId) 
						begin
							if @RemainPOQty > 0
							begin
								set @ThisPOConsumeQty = @ThisPOConsumeQty + 1
								set @RemainPOQty = @RemainPOQty - 1
								
								select @POOrderNo = OrderNo, @POProdCode = ProdCode, @POProdSeq = ProdSeq from #tempPOOrder where POOrderCycleId = @POOrderCycleId
								
								if @BeginConsume = 0
								begin --PO变更没有开始执行，计算本台车的旧件工位，根据旧件工位的过点时间（需求时间）判断是否需要执行PO变更
									set @POCPTime = null
									exec USP_Busi_PreviewPOItemCPTime @ProdLine, @OldPOItem, @POOrderNo, @POCPTime output
									
									if @POCPTime >= @POEffDate
									begin  --过点时间大于PO变更的生效时间
										set @BeginConsume = 1
									end
									else
									begin  --过点时间小于PO变更的生效时间
										continue
									end
								end
								
								--查找新件数量
								select @POOrderBomDetCount = COUNT(*) from #tempOrderBomDet4PO as tbom
								inner join ORD_OrderBomDet_4 as bom on tbom.OrderBomDetId = bom.Id
								where tbom.ProdCode = @POProdCode and tbom.ProdSeq = @POProdSeq and bom.Item = @OldPOItem and bom.OrderQty > 0
								
								--锁定OrderBomDetId字段标识字段
								exec USP_SYS_BatchGetNextId 'ORD_OrderBomDet', @POOrderBomDetCount, @POMaxOrderBomDetId output
								
								--查找开始标识
								set @POBeginOrderBomDetId = @POMaxOrderBomDetId - @POOrderBomDetCount
							
								--按旧件订单数插入新件
								insert into ORD_OrderBomDet_4 (Id, OrderNo, OrderType, OrderSubType, OrderDetId, OrderDetSeq, 
								Seq, Item, ItemDesc, Uom, BaseUom, 
								ManufactureParty, Op, OpRef, OrderQty, OrgOrderQty, UnitQty, BomUnitQty, 
								IsPrint, BackFlushMethod, FeedMethod, IsAutoFeed, IsScanHu, 
								CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, [Version], 
								PartyFrom, PartyTo, SubstituteGroup, MultiSupplyGroup, UPGCode, PONo, POLineNo, Location, 
								VanDiffId, EOSwitchId, POChangeId, ItemConsumeId, EONo, EOCountingDown, FlowStrategy, IsCreateOrder, BomId, POCountingDown)
								select ROW_NUMBER() over (order by bom.Id) + @POBeginOrderBomDetId, bom.OrderNo, 4, 0, bom.OrderDetId, 1,
								bom.Seq, @NewPOItem as Item, @NewPOItemDesc as ItemDesc, @NewPOItemUom as Uom, @NewPOItemUom as BaseUom, --BOM单位就是基本单位
								null, bom.Op, bom.OpRef, bom.OrderQty, 0, 1, bom.OrderQty,
								0, 0, 0, 0, 0,
								@CreateUserId, @CreateUserNm, @DateTimeNow, @CreateUserId, @CreateUserNm, @DateTimeNow, 1,
								bom.PartyFrom, bom.PartyTo, null, @POMultiSupplyGroup, bom.UPGCode, null, null, bom.Location,
								0, 0, @POId, 0, null, 0, bom.FlowStrategy, 0, bom.BomId, @RemainPOQty
								from #tempOrderBomDet4PO as tbom
								inner join ORD_OrderBomDet_4 as bom on tbom.OrderBomDetId = bom.Id
								where tbom.ProdCode = @POProdCode and tbom.ProdSeq = @POProdSeq and bom.Item = @OldPOItem and bom.OrderQty > 0
							
								--更新工位余量，把已经计算的JIT量全部作为正数记录到工位余量中
								update orb set Qty = Qty + bom.orderQty, [Version] = orb.[Version] + 1, LastModifyDate = @DateTimeNow, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm
								from SCM_OpRefBalance as orb inner join
								(select bom.Item, bom.OpRef, SUM(bom.OrderQty) as orderQty
								from ORD_OrderBomDet_4 as bom
								inner join #tempOrderBomDet4PO as tbom on bom.Id = tbom.OrderBomDetId
								where tbom.ProdCode = @POProdCode
								and tbom.ProdSeq = @POProdSeq
								and bom.Item = @OldPOItem
								and bom.OrderQty > 0
								and bom.IsCreateOrder = 1
								group by bom.Item, bom.OpRef) as bom on orb.Item = bom.Item and orb.OpRef = bom.OpRef
								
								--退回EO旧件库存
								update eo set ConsumeQty = ConsumeQty - bom.OrderQty, LastModifyDate = @DateTimeNow, 
								LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, [Version] = [Version] + 1
								from PRD_EOSwitch as eo
								inner join 
								(
								 select bom.EOSwitchId, SUM(bom.OrderQty) as OrderQty 
								 from ORD_OrderBomDet_4 as bom
								 inner join #tempOrderBomDet4PO as tbom on bom.Id = tbom.OrderBomDetId
								 where tbom.ProdCode = @POProdCode and tbom.ProdSeq = @POProdSeq
								 and bom.Item = @OldPOItem and bom.OrderQty > 0
								 group by EOSwitchId
								)as bom on eo.Id = bom.EOSwitchId
								
								--todo:退回已计算JIT的数量
								
								--把原旧件数量更新为0
								update bom set OrderQty = 0, POChangeId = @POId
								from ORD_OrderBomDet_4 as bom
								inner join #tempOrderBomDet4PO as tbom on bom.Id = tbom.OrderBomDetId
								where tbom.ProdCode = @POProdCode and tbom.ProdSeq = @POProdSeq
								and bom.Item = @OldPOItem and bom.OrderQty > 0
								
								if ISNULL(@POFirstVanNo, '') = ''
								begin  --记录首台车号
									set @POFirstVanNo = @POProdCode + @POProdSeq
								end
							end
							else
							begin
								break
							end
							
							set @POOrderCycleId = @POOrderCycleId + 1
						end
					end
					
					if @ThisPOConsumeQty > 0
					begin
						if @RemainPOQty = 0
						begin
							update PRD_POChange set ConsumeQty = ConsumeQty + @ThisPOConsumeQty, FirstVanNo = @POFirstVanNo,
							LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow,
							IsClose = 1, [Version] = @POVersion + 1
							where Id = @POId and [Version] = @POVersion
						end
						else
						begin
							update PRD_POChange set ConsumeQty = ConsumeQty + @ThisPOConsumeQty, FirstVanNo = @POFirstVanNo, 
							LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow,
							[Version] = @POVersion + 1
							where Id = @POId and [Version] = @POVersion
						end
						
						if @@rowcount = 0
						begin
							RAISERROR(N'PO发布变更档已经被更新。', 16, 1)
						end
					end
					
					set @POCycleRowId = @POCycleRowId + 1
				end
			end
			
			set @CycleProdLineId = @CycleProdLineId + 1
		end
		-----------------------------↑PO发布变更零件-----------------------------	


		
		-----------------------------↓释放生产单-----------------------------
		update mstr set Status = 1, LastModifyUser = @CreateUserId, LastModifyUserNm = @CreateUserNm, LastModifyDate = @DateTimeNow,
		ReleaseUser = @CreateUserId, ReleaseUserNm = @CreateUserNm, ReleaseDate = tscp.ScanDateTime, [Version] = [Version] + 1
		from ORD_OrderMstr_4 as mstr inner join #tempScanControlPoint as tscp on mstr.OrderNo = tscp.OrderNo
		-----------------------------↑释放生产单-----------------------------	
		
		
		
		
		
		--最后一次过点站别
		update mstr set BillAddrDesc = scp.ControlPoint, PauseTime = tscp.ScanDateTime, ExtraDmdSource = scp.VanSeries
		from ORD_OrderMstr_4 as mstr 
		inner join #tempScanControlPoint as tscp on mstr.OrderNo = tscp.OrderNo
		inner join MES_ScanControlPoint as scp on scp.Id = tscp.ScanControlPointId
		
		--更新过点扫描成功标记
		update MES_ScanControlPoint set Status = 2 where Id in (select ScanControlPointId from #tempScanControlPoint)
		commit tran	ScanJITControlPoint
	end try
	begin catch
		rollback tran ScanJITControlPoint_Point
		commit tran ScanJITControlPoint
		set @ErrorMsg = Error_Message()
		RAISERROR(@ErrorMsg, 16, 1)
	end catch
END
GO
PRINT N'Creating [dbo].[USP_Split_OrderDet_INSERT]...';


GO
-----CREATE INSERT SP
CREATE PROCEDURE USP_Split_OrderDet_INSERT
(
	@Version int,
	@OrderNo varchar(50),
	@OrderType tinyint,
	@OrderSubType tinyint,
	@Seq int,
	@ExtNo varchar(50),
	@ExtSeq varchar(50),
	@StartDate datetime,
	@EndDate datetime,
	@ScheduleType tinyint,
	@Item varchar(50),
	@ItemDesc varchar(100),
	@RefItemCode varchar(50),
	@Uom varchar(5),
	@BaseUom varchar(5),
	@UC decimal(18,8),
	@UCDesc varchar(50),
	@MinUC decimal(18,8),
	@QualityType tinyint,
	@ManufactureParty varchar(50),
	@ReqQty decimal(18,8),
	@OrderQty decimal(18,8),
	@ShipQty decimal(18,8),
	@RecQty decimal(18,8),
	@RejQty decimal(18,8),
	@ScrapQty decimal(18,8),
	@PickQty decimal(18,8),
	@UnitQty decimal(18,8),
	@RecLotSize decimal(18,8),
	@LocFrom varchar(50),
	@LocFromNm varchar(100),
	@LocTo varchar(50),
	@LocToNm varchar(100),
	@IsInspect bit,
	@BillAddr varchar(50),
	@BillAddrDesc varchar(256),
	@PriceList varchar(50),
	@UnitPrice decimal(18,8),
	@IsProvEst bit,
	@Tax varchar(50),
	@IsIncludeTax bit,
	@Currency varchar(50),
	@Bom varchar(50),
	@Routing varchar(50),
	@BillTerm tinyint,
	@IsScanHu bit,
	@ReserveNo varchar(50),
	@ReserveLine varchar(50),
	@ZOPWZ varchar(50),
	@ZOPID varchar(50),
	@ZOPDS varchar(50),
	@BinTo varchar(50),
	@WMSSeq varchar(50),
	@CreateUser int,
	@CreateUserNm varchar(100),
	@CreateDate datetime,
	@LastModifyUser int,
	@LastModifyUserNm varchar(100),
	@LastModifyDate datetime,
	@Container varchar(50),
	@ContainerDesc varchar(50),
	@PickStrategy varchar(50),
	@ExtraDmdSource varchar(256),
	@IsChangeUC bit,
	@AUFNR varchar(50),
	@ICHARG varchar(50),
	@BWART varchar(50),
	@IsCreatePickList bit
)
AS
BEGIN
	SET NOCOUNT ON
	DECLARE @Statement nvarchar(4000)
	DECLARE @Parameters nvarchar(4000)
	DECLARE @Id int 
	EXEC USP_SYS_GetNextId 'ORD_OrderDet', @Id output 
	
	SET @Statement='INSERT INTO ORD_OrderDet_' + CONVERT(varchar(1), @OrderType) + '(Id,Version,OrderNo,OrderType,OrderSubType,Seq,ExtNo,ExtSeq,StartDate,EndDate,ScheduleType,Item,ItemDesc,RefItemCode,Uom,BaseUom,UC,UCDesc,MinUC,QualityType,ManufactureParty,ReqQty,OrderQty,ShipQty,RecQty,RejQty,ScrapQty,PickQty,UnitQty,RecLotSize,LocFrom,LocFromNm,LocTo,LocToNm,IsInspect,BillAddr,BillAddrDesc,PriceList,UnitPrice,IsProvEst,Tax,IsIncludeTax,Currency,Bom,Routing,BillTerm,IsScanHu,ReserveNo,ReserveLine,ZOPWZ,ZOPID,ZOPDS,BinTo,WMSSeq,CreateUser,CreateUserNm,CreateDate,LastModifyUser,LastModifyUserNm,LastModifyDate,Container,ContainerDesc,PickStrategy,ExtraDmdSource,IsChangeUC,AUFNR,ICHARG,BWART,IsCreatePickList) VALUES(@Id_1,@Version_1,@OrderNo_1,@OrderType_1,@OrderSubType_1,@Seq_1,@ExtNo_1,@ExtSeq_1,@StartDate_1,@EndDate_1,@ScheduleType_1,@Item_1,@ItemDesc_1,@RefItemCode_1,@Uom_1,@BaseUom_1,@UC_1,@UCDesc_1,@MinUC_1,@QualityType_1,@ManufactureParty_1,@ReqQty_1,@OrderQty_1,@ShipQty_1,@RecQty_1,@RejQty_1,@ScrapQty_1,@PickQty_1,@UnitQty_1,@RecLotSize_1,@LocFrom_1,@LocFromNm_1,@LocTo_1,@LocToNm_1,@IsInspect_1,@BillAddr_1,@BillAddrDesc_1,@PriceList_1,@UnitPrice_1,@IsProvEst_1,@Tax_1,@IsIncludeTax_1,@Currency_1,@Bom_1,@Routing_1,@BillTerm_1,@IsScanHu_1,@ReserveNo_1,@ReserveLine_1,@ZOPWZ_1,@ZOPID_1,@ZOPDS_1,@BinTo_1,@WMSSeq_1,@CreateUser_1,@CreateUserNm_1,@CreateDate_1,@LastModifyUser_1,@LastModifyUserNm_1,@LastModifyDate_1,@Container_1,@ContainerDesc_1,@PickStrategy_1,@ExtraDmdSource_1,@IsChangeUC_1,@AUFNR_1,@ICHARG_1,@BWART_1,@IsCreatePickList_1)'
	SET @Parameters='@Id_1 int, @Version_1 int, @OrderNo_1 varchar(50), @OrderType_1 tinyint, @OrderSubType_1 tinyint, @Seq_1 int, @ExtNo_1 varchar(50), @ExtSeq_1 varchar(50), @StartDate_1 datetime, @EndDate_1 datetime, @ScheduleType_1 tinyint, @Item_1 varchar(50), @ItemDesc_1 varchar(100), @RefItemCode_1 varchar(50), @Uom_1 varchar(5), @BaseUom_1 varchar(5), @UC_1 decimal(18,8), @UCDesc_1 varchar(50), @MinUC_1 decimal(18,8), @QualityType_1 tinyint, @ManufactureParty_1 varchar(50), @ReqQty_1 decimal(18,8), @OrderQty_1 decimal(18,8), @ShipQty_1 decimal(18,8), @RecQty_1 decimal(18,8), @RejQty_1 decimal(18,8), @ScrapQty_1 decimal(18,8), @PickQty_1 decimal(18,8), @UnitQty_1 decimal(18,8), @RecLotSize_1 decimal(18,8), @LocFrom_1 varchar(50), @LocFromNm_1 varchar(100), @LocTo_1 varchar(50), @LocToNm_1 varchar(100), @IsInspect_1 bit, @BillAddr_1 varchar(50), @BillAddrDesc_1 varchar(256), @PriceList_1 varchar(50), @UnitPrice_1 decimal(18,8), @IsProvEst_1 bit, @Tax_1 varchar(50), @IsIncludeTax_1 bit, @Currency_1 varchar(50), @Bom_1 varchar(50), @Routing_1 varchar(50), @BillTerm_1 tinyint, @IsScanHu_1 bit, @ReserveNo_1 varchar(50), @ReserveLine_1 varchar(50), @ZOPWZ_1 varchar(50), @ZOPID_1 varchar(50), @ZOPDS_1 varchar(50), @BinTo_1 varchar(50), @WMSSeq_1 varchar(50), @CreateUser_1 int, @CreateUserNm_1 varchar(100), @CreateDate_1 datetime, @LastModifyUser_1 int, @LastModifyUserNm_1 varchar(100), @LastModifyDate_1 datetime, @Container_1 varchar(50), @ContainerDesc_1 varchar(50), @PickStrategy_1 varchar(50), @ExtraDmdSource_1 varchar(256), @IsChangeUC_1 bit, @AUFNR_1 varchar(50), @ICHARG_1 varchar(50), @BWART_1 varchar(50), @IsCreatePickList_1 bit'
	EXEC SP_EXECUTESQL @Statement,@Parameters,@Id_1=@Id,@Version_1=@Version,@OrderNo_1=@OrderNo,@OrderType_1=@OrderType,@OrderSubType_1=@OrderSubType,@Seq_1=@Seq,@ExtNo_1=@ExtNo,@ExtSeq_1=@ExtSeq,@StartDate_1=@StartDate,@EndDate_1=@EndDate,@ScheduleType_1=@ScheduleType,@Item_1=@Item,@ItemDesc_1=@ItemDesc,@RefItemCode_1=@RefItemCode,@Uom_1=@Uom,@BaseUom_1=@BaseUom,@UC_1=@UC,@UCDesc_1=@UCDesc,@MinUC_1=@MinUC,@QualityType_1=@QualityType,@ManufactureParty_1=@ManufactureParty,@ReqQty_1=@ReqQty,@OrderQty_1=@OrderQty,@ShipQty_1=@ShipQty,@RecQty_1=@RecQty,@RejQty_1=@RejQty,@ScrapQty_1=@ScrapQty,@PickQty_1=@PickQty,@UnitQty_1=@UnitQty,@RecLotSize_1=@RecLotSize,@LocFrom_1=@LocFrom,@LocFromNm_1=@LocFromNm,@LocTo_1=@LocTo,@LocToNm_1=@LocToNm,@IsInspect_1=@IsInspect,@BillAddr_1=@BillAddr,@BillAddrDesc_1=@BillAddrDesc,@PriceList_1=@PriceList,@UnitPrice_1=@UnitPrice,@IsProvEst_1=@IsProvEst,@Tax_1=@Tax,@IsIncludeTax_1=@IsIncludeTax,@Currency_1=@Currency,@Bom_1=@Bom,@Routing_1=@Routing,@BillTerm_1=@BillTerm,@IsScanHu_1=@IsScanHu,@ReserveNo_1=@ReserveNo,@ReserveLine_1=@ReserveLine,@ZOPWZ_1=@ZOPWZ,@ZOPID_1=@ZOPID,@ZOPDS_1=@ZOPDS,@BinTo_1=@BinTo,@WMSSeq_1=@WMSSeq,@CreateUser_1=@CreateUser,@CreateUserNm_1=@CreateUserNm,@CreateDate_1=@CreateDate,@LastModifyUser_1=@LastModifyUser,@LastModifyUserNm_1=@LastModifyUserNm,@LastModifyDate_1=@LastModifyDate,@Container_1=@Container,@ContainerDesc_1=@ContainerDesc,@PickStrategy_1=@PickStrategy,@ExtraDmdSource_1=@ExtraDmdSource,@IsChangeUC_1=@IsChangeUC,@AUFNR_1=@AUFNR,@ICHARG_1=@ICHARG,@BWART_1=@BWART,@IsCreatePickList_1=@IsCreatePickList
	SELECT @Id
END
GO
PRINT N'Creating [dbo].[VIEW_IpDet]...';


GO
CREATE VIEW [dbo].[VIEW_IpDet]
AS
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC, Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_1
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_2
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_3
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_4
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC, Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_5
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_6
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_7
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC, Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_8
UNION ALL
SELECT     Id, IpNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, Qty, RecQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, PriceList, 
                      UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, 
                      Version, Seq, OrderNo, OrderDetSeq, OrderType, OrderSubType, ManufactureParty, BaseUom, Type, GapRecNo, GapIpDetId, UCDesc, Container, ContainerDesc, 
                      ExtNo, ExtSeq, StartTime, WindowTime, BinTo, IsScanHu, IsChangeUC,Flow,BWART,PSTYP
FROM         dbo.ORD_IpDet_0
GO
PRINT N'Creating [dbo].[VIEW_IpLocationDet]...';


GO
CREATE VIEW [dbo].[VIEW_IpLocationDet]
AS
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_1
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_2
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_3
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_4
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_5
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_6
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_7
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_8
UNION ALL
SELECT     Id, IpNo, IpDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, RecQty, 
                      IsClose, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, OrderType, WMSSeq
FROM         dbo.ORD_IpLocationDet_0
GO
PRINT N'Creating [dbo].[VIEW_IpMstr]...';


GO
CREATE VIEW [dbo].[VIEW_IpMstr]
AS
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_1
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_2
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_3
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_4
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_5
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_6
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_7
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_8
UNION ALL
SELECT     IpNo, EffDate, IsShipScanHu, Version, CloseReason, CloseUserNm, CloseUser, CloseDate, LastModifyDate, LastModifyUserNm, CreateDate, LastModifyUser, 
                      CreateUserNm, CreateUser, HuTemplate, RecTemplate, RecGapTo, AsnTemplate, IsCheckPartyToAuth, IsCheckPartyFromAuth, IsRecScanHu, IsAsnUniqueRec, 
                      IsRecFifo, IsRecFulfillUC, IsRecExceed, IsPrintRec, IsAsnPrinted, IsPrintAsn, CreateHuOpt, IsAutoReceive, Dock, ShipToContact, ShipToFax, ShipToCell, ShipToTel, 
                      ShipToAddr, ShipTo, ShipFromContact, ShipFromFax, ShipFromCell, ShipFromTel, ShipFromAddr, ShipFrom, PartyToNm, PartyTo, PartyFromNm, PartyFrom, 
                      ArriveTime, DepartTime, Status, QualityType, OrderType, OrderSubType, Type, GapIpNo, ExtIpNo, SeqNo, WMSNo, Flow, ShipNo, Vehicle
FROM         dbo.ORD_IpMstr_0
GO
PRINT N'Creating [dbo].[VIEW_LocationDet]...';


GO


CREATE VIEW [dbo].[VIEW_LocationDet]
AS
/*GROUP BY Location, Item*/ SELECT max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_0 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_1 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_2 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_3 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_4 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_5 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_6 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_7 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_8 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_9 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_10 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_11 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_12 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_13 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_14 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_15 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_16 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_17 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_18 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
UNION all
SELECT      max(det.Id) as Id, det.Location, det.Item, hu.ManufactureParty, sum(det.Qty) AS Qty, sum(CASE WHEN det.IsCs = 1 THEN det.Qty ELSE 0 END) AS CsQty, 
                      sum(CASE WHEN det.QualityType = 0 THEN det.Qty ELSE 0 END) AS QualifyQty, sum(CASE WHEN det.QualityType = 1 THEN det.Qty ELSE 0 END) AS InspectQty, 
                      sum(CASE WHEN det.QualityType = 2 THEN det.Qty ELSE 0 END) AS RejectQty, sum(CASE WHEN det.IsATP = 1 THEN det.Qty ELSE 0 END) AS ATPQty, 
                      sum(CASE WHEN det.IsFreeze = 1 THEN det.Qty ELSE 0 END) AS FreezeQty
FROM         inv_locationlotdet_19 AS det LEFT JOIN
                      dbo.INV_Hu AS hu ON det.HuId = hu.HuId
WHERE     (det.Qty <> 0)
GROUP BY det.Location, det.Item, hu.ManufactureParty
GO
PRINT N'Creating [dbo].[VIEW_LocationLotDet]...';


GO
CREATE VIEW [dbo].[VIEW_LocationLotDet]
  
AS
SELECT     dbo.INV_LocationLotDet_1.Id, dbo.INV_LocationLotDet_1.Location, dbo.INV_LocationLotDet_1.Bin, dbo.INV_LocationLotDet_1.Item, dbo.INV_LocationLotDet_1.HuId, 
                      dbo.INV_LocationLotDet_1.LotNo, dbo.INV_LocationLotDet_1.Qty, dbo.INV_LocationLotDet_1.IsCS, dbo.INV_LocationLotDet_1.PlanBill, dbo.INV_LocationLotDet_1.QualityType, 
                      dbo.INV_LocationLotDet_1.IsFreeze, dbo.INV_LocationLotDet_1.IsATP, dbo.INV_LocationLotDet_1.OccupyType, dbo.INV_LocationLotDet_1.OccupyRefNo, 
                      dbo.INV_LocationLotDet_1.CreateUser, dbo.INV_LocationLotDet_1.CreateUserNm, dbo.INV_LocationLotDet_1.CreateDate, dbo.INV_LocationLotDet_1.LastModifyUser, 
                      dbo.INV_LocationLotDet_1.LastModifyUserNm, dbo.INV_LocationLotDet_1.LastModifyDate, dbo.INV_LocationLotDet_1.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_1.CSSupplier
FROM         dbo.INV_LocationLotDet_1 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_1.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_1.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_1.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_1.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_1.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_0.Id, dbo.INV_LocationLotDet_0.Location, dbo.INV_LocationLotDet_0.Bin, dbo.INV_LocationLotDet_0.Item, dbo.INV_LocationLotDet_0.HuId, 
                      dbo.INV_LocationLotDet_0.LotNo, dbo.INV_LocationLotDet_0.Qty, dbo.INV_LocationLotDet_0.IsCS, dbo.INV_LocationLotDet_0.PlanBill, dbo.INV_LocationLotDet_0.QualityType, 
                      dbo.INV_LocationLotDet_0.IsFreeze, dbo.INV_LocationLotDet_0.IsATP, dbo.INV_LocationLotDet_0.OccupyType, dbo.INV_LocationLotDet_0.OccupyRefNo, 
                      dbo.INV_LocationLotDet_0.CreateUser, dbo.INV_LocationLotDet_0.CreateUserNm, dbo.INV_LocationLotDet_0.CreateDate, dbo.INV_LocationLotDet_0.LastModifyUser, 
                      dbo.INV_LocationLotDet_0.LastModifyUserNm, dbo.INV_LocationLotDet_0.LastModifyDate, dbo.INV_LocationLotDet_0.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_0.CSSupplier
FROM         dbo.INV_LocationLotDet_0 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_0.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_0.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_0.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_0.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_0.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_2.Id, dbo.INV_LocationLotDet_2.Location, dbo.INV_LocationLotDet_2.Bin, dbo.INV_LocationLotDet_2.Item, dbo.INV_LocationLotDet_2.HuId, 
                      dbo.INV_LocationLotDet_2.LotNo, dbo.INV_LocationLotDet_2.Qty, dbo.INV_LocationLotDet_2.IsCS, dbo.INV_LocationLotDet_2.PlanBill, dbo.INV_LocationLotDet_2.QualityType, 
                      dbo.INV_LocationLotDet_2.IsFreeze, dbo.INV_LocationLotDet_2.IsATP, dbo.INV_LocationLotDet_2.OccupyType, dbo.INV_LocationLotDet_2.OccupyRefNo, 
                      dbo.INV_LocationLotDet_2.CreateUser, dbo.INV_LocationLotDet_2.CreateUserNm, dbo.INV_LocationLotDet_2.CreateDate, dbo.INV_LocationLotDet_2.LastModifyUser, 
                      dbo.INV_LocationLotDet_2.LastModifyUserNm, dbo.INV_LocationLotDet_2.LastModifyDate, dbo.INV_LocationLotDet_2.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_2.CSSupplier
FROM         dbo.INV_LocationLotDet_2 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_2.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_2.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_2.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_2.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_2.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_3.Id, dbo.INV_LocationLotDet_3.Location, dbo.INV_LocationLotDet_3.Bin, dbo.INV_LocationLotDet_3.Item, dbo.INV_LocationLotDet_3.HuId, 
                      dbo.INV_LocationLotDet_3.LotNo, dbo.INV_LocationLotDet_3.Qty, dbo.INV_LocationLotDet_3.IsCS, dbo.INV_LocationLotDet_3.PlanBill, dbo.INV_LocationLotDet_3.QualityType, 
                      dbo.INV_LocationLotDet_3.IsFreeze, dbo.INV_LocationLotDet_3.IsATP, dbo.INV_LocationLotDet_3.OccupyType, dbo.INV_LocationLotDet_3.OccupyRefNo, 
                      dbo.INV_LocationLotDet_3.CreateUser, dbo.INV_LocationLotDet_3.CreateUserNm, dbo.INV_LocationLotDet_3.CreateDate, dbo.INV_LocationLotDet_3.LastModifyUser, 
                      dbo.INV_LocationLotDet_3.LastModifyUserNm, dbo.INV_LocationLotDet_3.LastModifyDate, dbo.INV_LocationLotDet_3.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_3.CSSupplier
FROM         dbo.INV_LocationLotDet_3 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_3.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_3.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_3.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_3.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_3.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_4.Id, dbo.INV_LocationLotDet_4.Location, dbo.INV_LocationLotDet_4.Bin, dbo.INV_LocationLotDet_4.Item, dbo.INV_LocationLotDet_4.HuId, 
                      dbo.INV_LocationLotDet_4.LotNo, dbo.INV_LocationLotDet_4.Qty, dbo.INV_LocationLotDet_4.IsCS, dbo.INV_LocationLotDet_4.PlanBill, dbo.INV_LocationLotDet_4.QualityType, 
                      dbo.INV_LocationLotDet_4.IsFreeze, dbo.INV_LocationLotDet_4.IsATP, dbo.INV_LocationLotDet_4.OccupyType, dbo.INV_LocationLotDet_4.OccupyRefNo, 
                      dbo.INV_LocationLotDet_4.CreateUser, dbo.INV_LocationLotDet_4.CreateUserNm, dbo.INV_LocationLotDet_4.CreateDate, dbo.INV_LocationLotDet_4.LastModifyUser, 
                      dbo.INV_LocationLotDet_4.LastModifyUserNm, dbo.INV_LocationLotDet_4.LastModifyDate, dbo.INV_LocationLotDet_4.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_4.CSSupplier
FROM         dbo.INV_LocationLotDet_4 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_4.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_4.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_4.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_4.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_4.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_5.Id, dbo.INV_LocationLotDet_5.Location, dbo.INV_LocationLotDet_5.Bin, dbo.INV_LocationLotDet_5.Item, dbo.INV_LocationLotDet_5.HuId, 
                      dbo.INV_LocationLotDet_5.LotNo, dbo.INV_LocationLotDet_5.Qty, dbo.INV_LocationLotDet_5.IsCS, dbo.INV_LocationLotDet_5.PlanBill, dbo.INV_LocationLotDet_5.QualityType, 
                      dbo.INV_LocationLotDet_5.IsFreeze, dbo.INV_LocationLotDet_5.IsATP, dbo.INV_LocationLotDet_5.OccupyType, dbo.INV_LocationLotDet_5.OccupyRefNo, 
                      dbo.INV_LocationLotDet_5.CreateUser, dbo.INV_LocationLotDet_5.CreateUserNm, dbo.INV_LocationLotDet_5.CreateDate, dbo.INV_LocationLotDet_5.LastModifyUser, 
                      dbo.INV_LocationLotDet_5.LastModifyUserNm, dbo.INV_LocationLotDet_5.LastModifyDate, dbo.INV_LocationLotDet_5.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_5.CSSupplier
FROM         dbo.INV_LocationLotDet_5 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_5.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_5.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_5.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_5.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_5.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_6.Id, dbo.INV_LocationLotDet_6.Location, dbo.INV_LocationLotDet_6.Bin, dbo.INV_LocationLotDet_6.Item, dbo.INV_LocationLotDet_6.HuId, 
                      dbo.INV_LocationLotDet_6.LotNo, dbo.INV_LocationLotDet_6.Qty, dbo.INV_LocationLotDet_6.IsCS, dbo.INV_LocationLotDet_6.PlanBill, dbo.INV_LocationLotDet_6.QualityType, 
                      dbo.INV_LocationLotDet_6.IsFreeze, dbo.INV_LocationLotDet_6.IsATP, dbo.INV_LocationLotDet_6.OccupyType, dbo.INV_LocationLotDet_6.OccupyRefNo, 
                      dbo.INV_LocationLotDet_6.CreateUser, dbo.INV_LocationLotDet_6.CreateUserNm, dbo.INV_LocationLotDet_6.CreateDate, dbo.INV_LocationLotDet_6.LastModifyUser, 
                      dbo.INV_LocationLotDet_6.LastModifyUserNm, dbo.INV_LocationLotDet_6.LastModifyDate, dbo.INV_LocationLotDet_6.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_6.CSSupplier
FROM         dbo.INV_LocationLotDet_6 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_6.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_6.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_6.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_6.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_6.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_7.Id, dbo.INV_LocationLotDet_7.Location, dbo.INV_LocationLotDet_7.Bin, dbo.INV_LocationLotDet_7.Item, dbo.INV_LocationLotDet_7.HuId, 
                      dbo.INV_LocationLotDet_7.LotNo, dbo.INV_LocationLotDet_7.Qty, dbo.INV_LocationLotDet_7.IsCS, dbo.INV_LocationLotDet_7.PlanBill, dbo.INV_LocationLotDet_7.QualityType, 
                      dbo.INV_LocationLotDet_7.IsFreeze, dbo.INV_LocationLotDet_7.IsATP, dbo.INV_LocationLotDet_7.OccupyType, dbo.INV_LocationLotDet_7.OccupyRefNo, 
                      dbo.INV_LocationLotDet_7.CreateUser, dbo.INV_LocationLotDet_7.CreateUserNm, dbo.INV_LocationLotDet_7.CreateDate, dbo.INV_LocationLotDet_7.LastModifyUser, 
                      dbo.INV_LocationLotDet_7.LastModifyUserNm, dbo.INV_LocationLotDet_7.LastModifyDate, dbo.INV_LocationLotDet_7.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_7.CSSupplier
FROM         dbo.INV_LocationLotDet_7 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_7.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_7.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_7.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_7.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_7.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_8.Id, dbo.INV_LocationLotDet_8.Location, dbo.INV_LocationLotDet_8.Bin, dbo.INV_LocationLotDet_8.Item, dbo.INV_LocationLotDet_8.HuId, 
                      dbo.INV_LocationLotDet_8.LotNo, dbo.INV_LocationLotDet_8.Qty, dbo.INV_LocationLotDet_8.IsCS, dbo.INV_LocationLotDet_8.PlanBill, dbo.INV_LocationLotDet_8.QualityType, 
                      dbo.INV_LocationLotDet_8.IsFreeze, dbo.INV_LocationLotDet_8.IsATP, dbo.INV_LocationLotDet_8.OccupyType, dbo.INV_LocationLotDet_8.OccupyRefNo, 
                      dbo.INV_LocationLotDet_8.CreateUser, dbo.INV_LocationLotDet_8.CreateUserNm, dbo.INV_LocationLotDet_8.CreateDate, dbo.INV_LocationLotDet_8.LastModifyUser, 
                      dbo.INV_LocationLotDet_8.LastModifyUserNm, dbo.INV_LocationLotDet_8.LastModifyDate, dbo.INV_LocationLotDet_8.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_8.CSSupplier
FROM         dbo.INV_LocationLotDet_8 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_8.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_8.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_8.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_8.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_8.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_9.Id, dbo.INV_LocationLotDet_9.Location, dbo.INV_LocationLotDet_9.Bin, dbo.INV_LocationLotDet_9.Item, dbo.INV_LocationLotDet_9.HuId, 
                      dbo.INV_LocationLotDet_9.LotNo, dbo.INV_LocationLotDet_9.Qty, dbo.INV_LocationLotDet_9.IsCS, dbo.INV_LocationLotDet_9.PlanBill, dbo.INV_LocationLotDet_9.QualityType, 
                      dbo.INV_LocationLotDet_9.IsFreeze, dbo.INV_LocationLotDet_9.IsATP, dbo.INV_LocationLotDet_9.OccupyType, dbo.INV_LocationLotDet_9.OccupyRefNo, 
                      dbo.INV_LocationLotDet_9.CreateUser, dbo.INV_LocationLotDet_9.CreateUserNm, dbo.INV_LocationLotDet_9.CreateDate, dbo.INV_LocationLotDet_9.LastModifyUser, 
                      dbo.INV_LocationLotDet_9.LastModifyUserNm, dbo.INV_LocationLotDet_9.LastModifyDate, dbo.INV_LocationLotDet_9.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_9.CSSupplier
FROM         dbo.INV_LocationLotDet_9 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_9.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_9.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_9.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_9.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_9.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_10.Id, dbo.INV_LocationLotDet_10.Location, dbo.INV_LocationLotDet_10.Bin, dbo.INV_LocationLotDet_10.Item, dbo.INV_LocationLotDet_10.HuId, 
                      dbo.INV_LocationLotDet_10.LotNo, dbo.INV_LocationLotDet_10.Qty, dbo.INV_LocationLotDet_10.IsCS, dbo.INV_LocationLotDet_10.PlanBill, dbo.INV_LocationLotDet_10.QualityType, 
                      dbo.INV_LocationLotDet_10.IsFreeze, dbo.INV_LocationLotDet_10.IsATP, dbo.INV_LocationLotDet_10.OccupyType, dbo.INV_LocationLotDet_10.OccupyRefNo, 
                      dbo.INV_LocationLotDet_10.CreateUser, dbo.INV_LocationLotDet_10.CreateUserNm, dbo.INV_LocationLotDet_10.CreateDate, dbo.INV_LocationLotDet_10.LastModifyUser, 
                      dbo.INV_LocationLotDet_10.LastModifyUserNm, dbo.INV_LocationLotDet_10.LastModifyDate, dbo.INV_LocationLotDet_10.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_10.CSSupplier
FROM         dbo.INV_LocationLotDet_10 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_10.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_10.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_10.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_10.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_10.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_11.Id, dbo.INV_LocationLotDet_11.Location, dbo.INV_LocationLotDet_11.Bin, dbo.INV_LocationLotDet_11.Item, dbo.INV_LocationLotDet_11.HuId, 
                      dbo.INV_LocationLotDet_11.LotNo, dbo.INV_LocationLotDet_11.Qty, dbo.INV_LocationLotDet_11.IsCS, dbo.INV_LocationLotDet_11.PlanBill, dbo.INV_LocationLotDet_11.QualityType, 
                      dbo.INV_LocationLotDet_11.IsFreeze, dbo.INV_LocationLotDet_11.IsATP, dbo.INV_LocationLotDet_11.OccupyType, dbo.INV_LocationLotDet_11.OccupyRefNo, 
                      dbo.INV_LocationLotDet_11.CreateUser, dbo.INV_LocationLotDet_11.CreateUserNm, dbo.INV_LocationLotDet_11.CreateDate, dbo.INV_LocationLotDet_11.LastModifyUser, 
                      dbo.INV_LocationLotDet_11.LastModifyUserNm, dbo.INV_LocationLotDet_11.LastModifyDate, dbo.INV_LocationLotDet_11.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_11.CSSupplier
FROM         dbo.INV_LocationLotDet_11 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_11.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_11.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_11.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_11.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_11.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_12.Id, dbo.INV_LocationLotDet_12.Location, dbo.INV_LocationLotDet_12.Bin, dbo.INV_LocationLotDet_12.Item, dbo.INV_LocationLotDet_12.HuId, 
                      dbo.INV_LocationLotDet_12.LotNo, dbo.INV_LocationLotDet_12.Qty, dbo.INV_LocationLotDet_12.IsCS, dbo.INV_LocationLotDet_12.PlanBill, dbo.INV_LocationLotDet_12.QualityType, 
                      dbo.INV_LocationLotDet_12.IsFreeze, dbo.INV_LocationLotDet_12.IsATP, dbo.INV_LocationLotDet_12.OccupyType, dbo.INV_LocationLotDet_12.OccupyRefNo, 
                      dbo.INV_LocationLotDet_12.CreateUser, dbo.INV_LocationLotDet_12.CreateUserNm, dbo.INV_LocationLotDet_12.CreateDate, dbo.INV_LocationLotDet_12.LastModifyUser, 
                      dbo.INV_LocationLotDet_12.LastModifyUserNm, dbo.INV_LocationLotDet_12.LastModifyDate, dbo.INV_LocationLotDet_12.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_12.CSSupplier
FROM         dbo.INV_LocationLotDet_12 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_12.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_12.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_12.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_12.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_12.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_13.Id, dbo.INV_LocationLotDet_13.Location, dbo.INV_LocationLotDet_13.Bin, dbo.INV_LocationLotDet_13.Item, dbo.INV_LocationLotDet_13.HuId, 
                      dbo.INV_LocationLotDet_13.LotNo, dbo.INV_LocationLotDet_13.Qty, dbo.INV_LocationLotDet_13.IsCS, dbo.INV_LocationLotDet_13.PlanBill, dbo.INV_LocationLotDet_13.QualityType, 
                      dbo.INV_LocationLotDet_13.IsFreeze, dbo.INV_LocationLotDet_13.IsATP, dbo.INV_LocationLotDet_13.OccupyType, dbo.INV_LocationLotDet_13.OccupyRefNo, 
                      dbo.INV_LocationLotDet_13.CreateUser, dbo.INV_LocationLotDet_13.CreateUserNm, dbo.INV_LocationLotDet_13.CreateDate, dbo.INV_LocationLotDet_13.LastModifyUser, 
                      dbo.INV_LocationLotDet_13.LastModifyUserNm, dbo.INV_LocationLotDet_13.LastModifyDate, dbo.INV_LocationLotDet_13.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_13.CSSupplier
FROM         dbo.INV_LocationLotDet_13 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_13.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_13.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_13.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_13.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_13.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_14.Id, dbo.INV_LocationLotDet_14.Location, dbo.INV_LocationLotDet_14.Bin, dbo.INV_LocationLotDet_14.Item, dbo.INV_LocationLotDet_14.HuId, 
                      dbo.INV_LocationLotDet_14.LotNo, dbo.INV_LocationLotDet_14.Qty, dbo.INV_LocationLotDet_14.IsCS, dbo.INV_LocationLotDet_14.PlanBill, dbo.INV_LocationLotDet_14.QualityType, 
                      dbo.INV_LocationLotDet_14.IsFreeze, dbo.INV_LocationLotDet_14.IsATP, dbo.INV_LocationLotDet_14.OccupyType, dbo.INV_LocationLotDet_14.OccupyRefNo, 
                      dbo.INV_LocationLotDet_14.CreateUser, dbo.INV_LocationLotDet_14.CreateUserNm, dbo.INV_LocationLotDet_14.CreateDate, dbo.INV_LocationLotDet_14.LastModifyUser, 
                      dbo.INV_LocationLotDet_14.LastModifyUserNm, dbo.INV_LocationLotDet_14.LastModifyDate, dbo.INV_LocationLotDet_14.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_14.CSSupplier
FROM         dbo.INV_LocationLotDet_14 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_14.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_14.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_14.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_14.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_14.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_15.Id, dbo.INV_LocationLotDet_15.Location, dbo.INV_LocationLotDet_15.Bin, dbo.INV_LocationLotDet_15.Item, dbo.INV_LocationLotDet_15.HuId, 
                      dbo.INV_LocationLotDet_15.LotNo, dbo.INV_LocationLotDet_15.Qty, dbo.INV_LocationLotDet_15.IsCS, dbo.INV_LocationLotDet_15.PlanBill, dbo.INV_LocationLotDet_15.QualityType, 
                      dbo.INV_LocationLotDet_15.IsFreeze, dbo.INV_LocationLotDet_15.IsATP, dbo.INV_LocationLotDet_15.OccupyType, dbo.INV_LocationLotDet_15.OccupyRefNo, 
                      dbo.INV_LocationLotDet_15.CreateUser, dbo.INV_LocationLotDet_15.CreateUserNm, dbo.INV_LocationLotDet_15.CreateDate, dbo.INV_LocationLotDet_15.LastModifyUser, 
                      dbo.INV_LocationLotDet_15.LastModifyUserNm, dbo.INV_LocationLotDet_15.LastModifyDate, dbo.INV_LocationLotDet_15.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_15.CSSupplier
FROM         dbo.INV_LocationLotDet_15 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_15.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_15.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_15.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_15.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_15.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_16.Id, dbo.INV_LocationLotDet_16.Location, dbo.INV_LocationLotDet_16.Bin, dbo.INV_LocationLotDet_16.Item, dbo.INV_LocationLotDet_16.HuId, 
                      dbo.INV_LocationLotDet_16.LotNo, dbo.INV_LocationLotDet_16.Qty, dbo.INV_LocationLotDet_16.IsCS, dbo.INV_LocationLotDet_16.PlanBill, dbo.INV_LocationLotDet_16.QualityType, 
                      dbo.INV_LocationLotDet_16.IsFreeze, dbo.INV_LocationLotDet_16.IsATP, dbo.INV_LocationLotDet_16.OccupyType, dbo.INV_LocationLotDet_16.OccupyRefNo, 
                      dbo.INV_LocationLotDet_16.CreateUser, dbo.INV_LocationLotDet_16.CreateUserNm, dbo.INV_LocationLotDet_16.CreateDate, dbo.INV_LocationLotDet_16.LastModifyUser, 
                      dbo.INV_LocationLotDet_16.LastModifyUserNm, dbo.INV_LocationLotDet_16.LastModifyDate, dbo.INV_LocationLotDet_16.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_16.CSSupplier
FROM         dbo.INV_LocationLotDet_16 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_16.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_16.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_16.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_16.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_16.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_17.Id, dbo.INV_LocationLotDet_17.Location, dbo.INV_LocationLotDet_17.Bin, dbo.INV_LocationLotDet_17.Item, dbo.INV_LocationLotDet_17.HuId, 
                      dbo.INV_LocationLotDet_17.LotNo, dbo.INV_LocationLotDet_17.Qty, dbo.INV_LocationLotDet_17.IsCS, dbo.INV_LocationLotDet_17.PlanBill, dbo.INV_LocationLotDet_17.QualityType, 
                      dbo.INV_LocationLotDet_17.IsFreeze, dbo.INV_LocationLotDet_17.IsATP, dbo.INV_LocationLotDet_17.OccupyType, dbo.INV_LocationLotDet_17.OccupyRefNo, 
                      dbo.INV_LocationLotDet_17.CreateUser, dbo.INV_LocationLotDet_17.CreateUserNm, dbo.INV_LocationLotDet_17.CreateDate, dbo.INV_LocationLotDet_17.LastModifyUser, 
                      dbo.INV_LocationLotDet_17.LastModifyUserNm, dbo.INV_LocationLotDet_17.LastModifyDate, dbo.INV_LocationLotDet_17.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_17.CSSupplier
FROM         dbo.INV_LocationLotDet_17 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_17.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_17.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_17.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_17.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_17.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_18.Id, dbo.INV_LocationLotDet_18.Location, dbo.INV_LocationLotDet_18.Bin, dbo.INV_LocationLotDet_18.Item, dbo.INV_LocationLotDet_18.HuId, 
                      dbo.INV_LocationLotDet_18.LotNo, dbo.INV_LocationLotDet_18.Qty, dbo.INV_LocationLotDet_18.IsCS, dbo.INV_LocationLotDet_18.PlanBill, dbo.INV_LocationLotDet_18.QualityType, 
                      dbo.INV_LocationLotDet_18.IsFreeze, dbo.INV_LocationLotDet_18.IsATP, dbo.INV_LocationLotDet_18.OccupyType, dbo.INV_LocationLotDet_18.OccupyRefNo, 
                      dbo.INV_LocationLotDet_18.CreateUser, dbo.INV_LocationLotDet_18.CreateUserNm, dbo.INV_LocationLotDet_18.CreateDate, dbo.INV_LocationLotDet_18.LastModifyUser, 
                      dbo.INV_LocationLotDet_18.LastModifyUserNm, dbo.INV_LocationLotDet_18.LastModifyDate, dbo.INV_LocationLotDet_18.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_18.CSSupplier
FROM         dbo.INV_LocationLotDet_18 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_18.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_18.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_18.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_18.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_18.Qty <> 0)
UNION ALL
SELECT     dbo.INV_LocationLotDet_19.Id, dbo.INV_LocationLotDet_19.Location, dbo.INV_LocationLotDet_19.Bin, dbo.INV_LocationLotDet_19.Item, dbo.INV_LocationLotDet_19.HuId, 
                      dbo.INV_LocationLotDet_19.LotNo, dbo.INV_LocationLotDet_19.Qty, dbo.INV_LocationLotDet_19.IsCS, dbo.INV_LocationLotDet_19.PlanBill, dbo.INV_LocationLotDet_19.QualityType, 
                      dbo.INV_LocationLotDet_19.IsFreeze, dbo.INV_LocationLotDet_19.IsATP, dbo.INV_LocationLotDet_19.OccupyType, dbo.INV_LocationLotDet_19.OccupyRefNo, 
                      dbo.INV_LocationLotDet_19.CreateUser, dbo.INV_LocationLotDet_19.CreateUserNm, dbo.INV_LocationLotDet_19.CreateDate, dbo.INV_LocationLotDet_19.LastModifyUser, 
                      dbo.INV_LocationLotDet_19.LastModifyUserNm, dbo.INV_LocationLotDet_19.LastModifyDate, dbo.INV_LocationLotDet_19.Version, dbo.MD_LocationBin.Area, 
                      dbo.MD_LocationBin.Seq AS BinSeq, dbo.INV_Hu.Qty AS HuQty, dbo.INV_Hu.UC, dbo.INV_Hu.Uom AS HuUom, dbo.INV_Hu.BaseUom, dbo.INV_Hu.UnitQty, 
                      dbo.INV_Hu.ManufactureParty, dbo.INV_Hu.ManufactureDate, dbo.INV_Hu.FirstInvDate, --dbo.BIL_PlanBill.Party AS ConsigementParty, 
                      dbo.INV_Hu.IsOdd, dbo.INV_LocationLotDet_19.CSSupplier
FROM         dbo.INV_LocationLotDet_19 LEFT OUTER JOIN
                      dbo.INV_Hu ON dbo.INV_LocationLotDet_19.HuId = dbo.INV_Hu.HuId LEFT OUTER JOIN
                      --dbo.BIL_PlanBill ON dbo.INV_LocationLotDet_19.PlanBill = dbo.BIL_PlanBill.Id AND dbo.INV_LocationLotDet_19.IsCS = 1 LEFT OUTER JOIN
                      dbo.MD_LocationBin ON dbo.INV_LocationLotDet_19.Bin = dbo.MD_LocationBin.Code
WHERE     (dbo.INV_LocationLotDet_19.Qty <> 0)
GO
PRINT N'Creating [dbo].[VIEW_LocTrans]...';


GO


--drop view VIEW_LocTrans

CREATE VIEW [dbo].[VIEW_LocTrans]
AS
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode, OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_1
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_0
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_2
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_3
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_4
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_5
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_6
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_7
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_8
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_9
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_10
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_11
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_12
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_13
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_14
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_15
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_16
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_17
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_18
UNION ALL
SELECT     Id, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, Item, Uom, BaseUom, Qty, IsCS, PlanBill, PlanBillQty,
                      ActBill, ActBillQty, UnitQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, LocIOReason, EffDate, CreateUser, CreateDate, TraceCode,OrderBomDetSeq, SeqNo
FROM         dbo.INV_LocTrans_19
GO
PRINT N'Creating [dbo].[VIEW_LocTransDet]...';


GO


--drop view VIEW_LocTransDet
CREATE VIEW [dbo].[VIEW_LocTransDet]
AS
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_0
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_1
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_2
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_3
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_4

UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_5
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_6
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_7
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_8
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_9
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_10
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_11
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_12
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_13
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_14
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_15
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_16
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_17
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_18
UNION ALL
SELECT     Id, LocTransId, OrderNo, OrderType, OrderSubType, OrderDetSeq, OrderDetId, OrderBomDetId, IpNo, IpDetId, IpDetSeq, RecNo, RecDetId, RecDetSeq, SeqNo, BillTransId, 
                      LocLotDetId, Item, Qty, IsCS, PlanBill, PlanBillQty, ActBill, ActBillQty, QualityType, HuId, LotNo, TransType, IOType, PartyFrom, PartyTo, LocFrom, LocTo, Bin, LocIOReason, EffDate, CreateUser, CreateDate, 
                      TraceCode,OrderBomDetSeq, PlanBackflushId
FROM         dbo.INV_LocTransDet_19
GO
PRINT N'Creating [dbo].[VIEW_OrderDet]...';


GO

CREATE VIEW [dbo].[VIEW_OrderDet]
AS
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing, BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_1
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing, BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_2
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing,  BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_3
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing, BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_4
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing,BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_5
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing, BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_6
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing,BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_7
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing, BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_8
UNION ALL
SELECT     Id, OrderNo, Seq, ExtNo, ExtSeq, StartDate, EndDate, ScheduleType, Item, ItemDesc, RefItemCode, Uom, UC, Container, QualityType, ReqQty, OrderQty, ShipQty, 
                      RecQty, RejQty, ScrapQty, PickQty, UnitQty, RecLotSize, LocFrom, LocFromNm, LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, UnitPrice, IsProvEst, 
                      Tax, IsIncludeTax, Bom, Routing,BillTerm, ReserveNo, ReserveLine, ZOPWZ, ZOPID, ZOPDS, CreateUser, CreateUserNm, CreateDate, LastModifyUser, 
                      LastModifyUserNm, LastModifyDate, Version, Currency, OrderType, ManufactureParty, OrderSubType, BaseUom, PickStrategy, ExtraDmdSource, UCDesc, MinUC, 
                      ContainerDesc, IsScanHu, BinTo, WMSSeq, IsChangeUC, AUFNR, ICHARG, BWART,IsCreatePickList
FROM         dbo.ORD_OrderDet_0
GO
PRINT N'Creating [dbo].[VIEW_OrderMstr]...';


GO

CREATE VIEW [dbo].[VIEW_OrderMstr]
AS
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_1
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_2
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_3
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_4
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_5
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_6
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_7
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_8
UNION ALL
SELECT     OrderNo, Flow,ProdLineFact, TraceCode, OrderStrategy, RefOrderNo, ExtOrderNo, Type, SubType, QualityType, StartTime, WindowTime,  
                      PauseSeq, PauseTime, EffDate,IsQuick,Priority, Status,PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, 
                      ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipToAddr, ShipTo, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Shift, LocFrom, LocFromNm, 
                      LocTo, LocToNm, IsInspect, BillAddr, BillAddrDesc, PriceList, Currency, Dock, Routing, CurtOp, IsAutoRelease, IsAutoStart, IsAutoShip, IsAutoReceive, IsAutoBill, 
                      IsManualCreateDet, IsListPrice, IsPrintOrder, IsOrderPrinted, IsPrintAsn, IsPrintRec, IsShipExceed, IsRecExceed, IsOrderFulfillUC, IsShipFulfillUC, IsRecFulfillUC, 
                      IsShipScanHu, IsRecScanHu, IsCreatePL, IsPLCreate, IsShipFifo, IsRecFifo, IsShipByOrder, IsOpenOrder, IsAsnUniqueRec,                       
                      RecGapTo, RecTemplate, OrderTemplate, AsnTemplate, HuTemplate, BillTerm, CreateHuOpt, ReCalculatePriceOpt, PickStrategy,  ExtraDmdSource,CreateUser,
                      CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, ReleaseDate, ReleaseUser, ReleaseUserNm, StartDate, StartUser, StartUserNm, 
                      CompleteDate, CompleteUser, CompleteUserNm, CloseDate, CloseUser, CloseUserNm, CancelDate, CancelUser, CancelUserNm, CancelReason, Version, FlowDesc, 
                      WMSNo,ProdLineType,PauseStatus,SeqGroup
FROM         dbo.ORD_OrderMstr_0
GO
PRINT N'Creating [dbo].[VIEW_RecDet]...';


GO

CREATE VIEW [dbo].[VIEW_RecDet]
AS
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_1
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_2
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_3
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_4
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_5
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_6
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_7
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_8
UNION ALL
SELECT     Id, RecNo, OrderDetId, Item, ItemDesc, RefItemCode, Uom, UC, QualityType, RecQty, ScrapQty, UnitQty, LocFrom, LocFromNm, LocTo, LocToNm, CreateUser, CreateUserNm, 
                      CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderNo, OrderDetSeq, Seq, IpNo, IpDetId, IpDetSeq, IpDetType, OrderType, OrderSubType, Version, IsInspect, 
                      BillAddr, PriceList, UnitPrice, Currency, IsProvEst, Tax, IsIncludeTax, BillTerm, BaseUom, ManufactureParty, ExtNo, ExtSeq, IpGapAdjOpt, Flow
FROM         dbo.ORD_RecDet_0
GO
PRINT N'Creating [dbo].[VIEW_RecLocationDet]...';


GO
CREATE VIEW [dbo].[VIEW_RecLocationDet]
AS
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_0
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_1
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_2
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_3
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_4
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_5
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_6
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_7
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_8
UNION ALL
SELECT     Id, RecNo, RecDetId, OrderDetId, Item, HuId, LotNo, IsCreatePlanBill, IsCS, PlanBill, ActBill, QualityType, IsFreeze, IsATP, OccupyType, OccupyRefNo, Qty, 
                      CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, OrderType, WMSSeq
FROM         dbo.ORD_RecLocationDet_0
GO
PRINT N'Creating [dbo].[VIEW_RecMstr]...';


GO




---drop view VIEW_RecMstr

CREATE VIEW [dbo].[VIEW_RecMstr]
AS
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_1
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_2
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_3
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_4
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_5
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_6
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_7
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_8
UNION ALL
SELECT     RecNo, ExtRecNo, IpNo, SeqNo, Status, Type, OrderType, OrderSubType, QualityType, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, 
                      ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, EffDate, IsPrintRec, IsRecPrinted, 
                      IsCheckPartyFromAuth, IsCheckPartyToAuth, RecTemplate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, Version, 
                      IsRecScanHu, CreateHuOpt, WMSNo, Flow,CancelReason
FROM         dbo.ORD_RecMstr_0
GO
PRINT N'Creating [dbo].[VIEW_UserPermission]...';


GO
CREATE view [dbo].[VIEW_UserPermission] as
select ACC_UserPermission.UserId, ACC_Permission.Code as PermissionCode, ACC_Permission.Category, ACC_PermissionCategory.Type As CategoryType 
from dbo.ACC_UserPermission
inner join dbo.ACC_Permission on ACC_UserPermission.PermissionId = ACC_Permission.Id
inner join dbo.ACC_PermissionCategory on ACC_Permission.Category = ACC_PermissionCategory.Code
union
select ACC_UserPermissionGroup.UserId, ACC_Permission.Code as PermissionCode, ACC_Permission.Category, ACC_PermissionCategory.Type As CategoryType 
from dbo.ACC_UserPermissionGroup 
inner join dbo.ACC_PermissionGroupPermission on ACC_UserPermissionGroup.GroupId = ACC_PermissionGroupPermission.GroupId
inner join dbo.ACC_Permission on ACC_PermissionGroupPermission.PermissionId = ACC_Permission.Id
inner join dbo.ACC_PermissionCategory on ACC_Permission.Category = ACC_PermissionCategory.Code
union
select ACC_UserRole.UserId, ACC_Permission.Code as PermissionCode, ACC_Permission.Category, ACC_PermissionCategory.Type As CategoryType 
from dbo.ACC_UserRole 
inner join dbo.ACC_RolePermission on ACC_UserRole.RoleId = ACC_RolePermission.RoleId
inner join dbo.ACC_Permission on ACC_RolePermission.PermissionId = ACC_Permission.Id
inner join dbo.ACC_PermissionCategory on ACC_Permission.Category = ACC_PermissionCategory.Code
union
select ACC_UserRole.UserId, ACC_Permission.Code as PermissionCode, ACC_Permission.Category, ACC_PermissionCategory.Type As CategoryType 
from dbo.ACC_UserRole 
inner join dbo.ACC_RolePermissionGroup on ACC_UserRole.RoleId = ACC_RolePermissionGroup.RoleId
inner join dbo.ACC_PermissionGroupPermission on ACC_RolePermissionGroup.GroupId = ACC_PermissionGroupPermission.GroupId
inner join dbo.ACC_Permission on ACC_PermissionGroupPermission.PermissionId = ACC_Permission.Id
inner join dbo.ACC_PermissionCategory on ACC_Permission.Category = ACC_PermissionCategory.Code
GO
PRINT N'Creating [dbo].[USP_Busi_GetHistoryInv]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetHistoryInv]
(
	@Location varchar(50),
	@Item varchar(4000),
	@HistoryDate datetime
)
AS
BEGIN
	
	select * from View_LocationDet
END
GO
PRINT N'Creating [dbo].[USP_Busi_GetHuHistoryInv]...';


GO
CREATE PROCEDURE [dbo].[USP_Busi_GetHuHistoryInv]
(
	@Location varchar(50),
	@Item varchar(4000),
	@HistoryDate datetime
)
AS
BEGIN
	
	select * from View_LocationLotDet
END
GO
PRINT N'Creating [dbo].[USP_Search_IpDet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE  PROCEDURE [dbo].[USP_Search_IpDet] 
( 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@OrderNo varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	--DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IpNo='%'+@IpNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.IpNo LIKE @IPNo_1' 
	END	 
	--IF(ISNULL(@OrderNo,'')<>'') 
	--BEGIN 
	--	SET @OrderNo=@OrderNo+'%' 
	--	SET @MasterWhere=@MasterWhere+' AND i.OrderNo LIKE @OrderNo_1' 
	--END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND i.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (i.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR i.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END		
	
	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo=@OrderNo+'%' 
		SET @DetailWhere=@DetailWhere+' AND d.OrderNo LIKE @OrderNo_1' 
	END 	 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_IpDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_IpDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 


	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@OrderNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 
	PRINT @Statement 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IpNo_1=@IpNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@OrderNo_1=@OrderNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_IpDetCount]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE  PROCEDURE [dbo].[USP_Search_IpDetCount] 
( 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@OrderNo varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000) 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	--DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IpNo='%'+@IpNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.IpNo LIKE @IpNo_1' 
	END	 
	--IF(ISNULL(@OrderNo,'')<>'') 
	--BEGIN 
	--	SET @OrderNo=@OrderNo+'%' 
	--	SET @MasterWhere=@MasterWhere+' AND i.OrderNo LIKE @OrderNo_1' 
	--END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Status=@Status_1 ' 
	END 
    IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND i.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (i.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR i.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END	
	
	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo=@OrderNo+'%' 
		SET @DetailWhere=@DetailWhere+' AND d.OrderNo LIKE @OrderNo_1' 
	END 		 

	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_IpDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_IpDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 

	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1' 
	PRINT @CountStatement 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@OrderNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@IpNo_1=@IpNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@OrderNo_1=@OrderNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_IpMstr]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE PROCEDURE [dbo].[USP_Search_IpMstr] 
( 
	@IPNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@OrderNo varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+ISNULL(@WhereStatement,'') 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo='%'+@IPNo+'%' 
		SET @Where=@Where+' AND i.IpNo LIKE @IPNo_1' 
	END	 
	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo=@OrderNo+'%' 
		SET @Where=@Where+' AND i.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @Where=@Where+' AND i.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @Where=@Where+' AND i.Status=@Status_1 ' 
	END 
    IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @Where=@Where+' AND i.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (i.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR i.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END			 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_IpMstr_'+@Type+' AS i '+REPLACE(@Where,'IPDetail','ORD_IpDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_IpMstr_'+@Type+' AS i '+REPLACE(@Where,'IPDetail','ORD_IpDet_'+@Type) 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 

	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') IpNo, ExtIpNo, GapIpNo, SeqNo, Type, OrderType, OrderSubType, QualityType, Status, DepartTime, ArriveTime, PartyFrom, PartyFromNm, PartyTo, PartyToNm, ShipFrom, ShipFromAddr, ShipFromTel, ShipFromCell, ShipFromFax, ShipFromContact, ShipTo, ShipToAddr, ShipToTel, ShipToCell, ShipToFax, ShipToContact, Dock, IsAutoReceive, IsShipScanHu, IsPrintAsn, IsAsnPrinted, IsPrintRec, IsRecExceed, IsRecFulfillUC, IsRecFifo, IsAsnUniqueRec, IsCheckPartyFromAuth, IsCheckPartyToAuth, RecGapTo, AsnTemplate, RecTemplate, HuTemplate, EffDate, CreateUser, CreateUserNm, CreateDate, LastModifyUser, LastModifyUserNm, LastModifyDate, CloseDate, CloseUser, CloseUserNm, CloseReason, Version, WMSNo, CreateHuOpt, IsRecScanHu, Flow, ShipNo, Vehicle FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@IPNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@OrderNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@OrderNo_1=@OrderNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END 





/****** Object:  StoredProcedure [dbo].[USP_Search_IpMstrCount]    Script Date: 2013-01-02 12:33:00 ******/
SET ANSI_NULLS ON
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_IpMstrCount]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

CREATE  PROCEDURE [dbo].[USP_Search_IpMstrCount] 
( 
	@IPNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@OrderNo varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000) 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+ISNULL(@WhereStatement,'') 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo='%'+@IPNo+'%' 
		SET @Where=@Where+' AND i.IpNo LIKE @IPNo_1' 
	END	 
	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo=@OrderNo+'%' 
		SET @Where=@Where+' AND i.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @Where=@Where+' AND i.WMSNo LIKE @WMSNo_1' 
	END		 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND i.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @Where=@Where+' AND i.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND i.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @Where=@Where+' AND i.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (i.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR i.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END			 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_IpMstr_'+@Type+' AS i '+REPLACE(@Where,'IPDetail','ORD_IpDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_IpMstr_'+@Type+' AS i '+REPLACE(@Where,'IPDetail','ORD_IpDet_'+@Type) 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 

	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1' 
	SET @Parameter=N'@IPNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@OrderNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@OrderNo_1=@OrderNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_PrintIpDet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO



CREATE  PROCEDURE [dbo].[USP_Search_PrintIpDet] 
( 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@OrderNo varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	--DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IpNo='%'+@IpNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.IpNo LIKE @IPNo_1' 
	END	 
	--IF(ISNULL(@OrderNo,'')<>'') 
	--BEGIN 
	--	SET @OrderNo=@OrderNo+'%' 
	--	SET @MasterWhere=@MasterWhere+' AND i.OrderNo LIKE @OrderNo_1' 
	--END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND i.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND i.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND i.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (i.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR i.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END		
	
	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo=@OrderNo+'%' 
		SET @DetailWhere=@DetailWhere+' AND d.OrderNo LIKE @OrderNo_1' 
	END 	 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY MastCreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
		SET @SpliceTables='select d.Id,d.IpNo,d.OrderNo,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.UC,d.Qty,d.RecQty,d.LocFrom,d.LocTo,d.Flow,d.IsClose,d.IsInspect,m.PartyFrom as MastPartyFrom,m.PartyTo as MastPartyTo,m.OrderType as MastType,m.Status as MastStatus,m.CreateDate as MastCreateDate,l.SAPLocation from ORD_IpDet_'+@Type+' AS d  left join ORD_IpMstr_'+@Type+' as m on d.IpNo=m.IpNo left join MD_Location as l on d.LocTo=l.Code '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
			--SET @SpliceTables='SELECT * FROM ORD_IpDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		ELSE 
		BEGIN 
		SET @SpliceTables=@SpliceTables+' union all select d.Id,d.IpNo,d.OrderNo,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.UC,d.Qty,d.RecQty,d.LocFrom,d.LocTo,d.Flow,d.IsClose,d.IsInspect,m.PartyFrom as MastPartyFrom,m.PartyTo as MastPartyTo,m.OrderType as MastType,m.Status as MastStatus,m.CreateDate as MastCreateDate,l.SAPLocation from ORD_IpDet_'+@Type+' AS d  left join ORD_IpMstr_'+@Type+' as m on d.IpNo=m.IpNo left join MD_Location as l on d.LocTo=l.Code '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
			--SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_IpDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'IpMaster','ORD_IpMstr_'+@Type+' ') 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 


	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@OrderNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 
	PRINT @Statement 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IpNo_1=@IpNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@OrderNo_1=@OrderNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END 


/****** Object:  StoredProcedure [dbo].[USP_Search_IpDetCount]    Script Date: 2013-01-02 12:32:11 ******/
SET ANSI_NULLS ON
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_PrintOrderDet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO



CREATE PROCEDURE [dbo].[USP_Search_PrintOrderDet]
( 
	@OrderNo varchar(50), 
	@Flow varchar(50), 
	@Types varchar(50), 
	@SubType tinyint, 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@Status tinyint, 
	@Priority tinyint, 
	@ExtOrderNo varchar(50), 
	@RefOrderNo varchar(50), 
	@TraceCode varchar(50), 
	@CreateUserNm varchar(100), 
	@DateFrom datetime, 
	@DateTo datetime, 
    @StartTime datetime, 
	@EndTime datetime,
	@WindowTimeFrom datetime, 
	@WindowTimeTo datetime,   
	@Sequence bigint, 
	@IsSupplier bit, 
	@IsReturn bit, 
	@Item varchar(50), 
	@ManufactureParty varchar(50), 
	@WMSSeq varchar(50), 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000)  
	DECLARE @Count int 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000)  
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 
	set @Count=1

	IF(ISNULL(@Types,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 

	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo='%'+@OrderNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND o.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Flow=@Flow_1' 
	END 
	IF(ISNULL(@SubType,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.SubType=@SubType_1' 
	END	 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyTo=@PartyTo_1 ' 
	END		 
	IF(ISNULL(@Status,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Status=@Status_1 ' 
	END		 
	IF(ISNULL(@Priority,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Priority=@Priority_1 ' 
	END	 
	IF(ISNULL(@ExtOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.ExtOrderNo LIKE @ExtOrderNo_1 ' 
	END	 
	IF(ISNULL(@RefOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.RefOrderNo LIKE @RefOrderNo_1 ' 
	END		 
	IF(ISNULL(@TraceCode,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.TraceCode LIKE @TraceCode_1 ' 
	END	 
	IF(ISNULL(@CreateUserNm,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateUserNm=@CreateUserNm_1 ' 
	END	 
	
	--创建时间
    IF(ISDATE(@DateTo)=1)
	BEGIN
    set @DateTo=dateadd(day,1,@DateTo)
    END
	IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	END	 
	ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate > @DateFrom_1' 
	END 
	ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate < @DateTo_1' 
	END	 
	--开始时间
	IF(ISDATE(@EndTime)=1)
	BEGIN
    set @EndTime=dateadd(day,1,@EndTime)
    END
	IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime BETWEEN @StartTime_1 And @EndTime_1 ' 
	END	 
	ELSE IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime > @StartTime_1' 
	END 
	ELSE IF(ISDATE(@StartTime)=0 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime < @EndTime_1' 
	END	 
	
	--窗口时间
	IF(ISDATE(@WindowTimeTo)=1)
	BEGIN
    set @WindowTimeTo=dateadd(day,1,@WindowTimeTo)
    END
	IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime BETWEEN @WindowTimeFrom_1 And @WindowTimeTo_1 ' 
	END	 
	ELSE IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime > @WindowTimeFrom_1' 
	END 
	ELSE IF(ISDATE(@WindowTimeFrom)=0 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime < @WindowTimeTo_1' 
	END	 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@WMSSeq,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.WMSSeq=@WMSSeq_1' 
	END		 

	--IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	--END	 
	--ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate > @DateFrom_1' 
	--END 
	--ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate < @DateTo_1' 
	--END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0 AND @IsReturn=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE IF(@IsSupplier=0 AND @IsReturn=1) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyFrom IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (o.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR o.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY MastCreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	SET @MasterWhere=REPLACE(@WhereStatement,'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@Types)>0) 
	BEGIN 
		IF(LEN(@Types)=1) 
		BEGIN 
			SET @Type=@Types 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@Types,1,CHARINDEX(',',@Types)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			--SET @MasterWhere=REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
			--RefOrderNo,ExtOrderNo,PartyFrom,PartyTo,Flow,Type,Status,CreateDate,
			SET @SpliceTables='SELECT d.Id,d.OrderNo,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.UC,d.LocFrom,d.LocTo,d.OrderQty,d.ShipQty,d.RecQty,d.ManufactureParty,m.RefOrderNo as MastRefOrderNo,m.ExtOrderNo as MastExtOrderNo,m.PartyFrom as MastPartyFrom ,m.PartyTo as MastPartyTo,m.Flow as MastFlow,m.Type as MastType,m.Status as MastStatus,m.CreateDate as MastCreateDate,l.SAPLocation as SAPLocation FROM ORD_OrderDet_'+@Type+' AS d  left join  ORD_OrderMstr_'+@Type +' as m on d.OrderNo=m.OrderNo left join MD_Location as l on d.LocTo=l.Code '
 +@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') +''

		END 
		ELSE 
		BEGIN 

			--SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_OrderDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
	 SET @SpliceTables=@SpliceTables+'  UNION ALL SELECT d.Id,d.OrderNo,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.UC,d.LocFrom,d.LocTo,d.OrderQty,d.ShipQty,d.RecQty,d.ManufactureParty,m.RefOrderNo as MastRefOrderNo,m.ExtOrderNo as MastExtOrderNo,m.PartyFrom as MastPartyFrom ,m.PartyTo as MastPartyTo,m.Flow as MastFlow,m.Type as MastType,m.Status as MastStatus,m.CreateDate as MastCreateDate,l.SAPLocation as SAPLocation FROM ORD_OrderDet_'+@Type+' AS d left join  ORD_OrderMstr_'+@Type +' as m on d.OrderNo=m.OrderNo left join MD_Location as l on d.LocTo=l.Code '
+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') +''
set @Count=@Count+1

		END 
		SET @Types=SUBSTRING(@Types,3,LEN(@Types)) 
	END	 
	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 

	SET @Parameter=N'@OrderNo_1 varchar(50),@Flow_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@Status_1 tinyint,@Priority_1 tinyint,@ExtOrderNo_1 varchar(50),@RefOrderNo_1 varchar(50),@TraceCode_1 varchar(50),@CreateUserNm_1 varchar(100),@DateFrom_1 datetime,@DateTo_1 datetime,
	@StartTime_1 datetime,@EndTime_1 datetime,@WindowTimeFrom_1 datetime,@WindowTimeTo_1 datetime,@SubType_1 tinyint,@Sequence_1 bigint,@Item_1 varchar(50),@ManufactureParty_1 varchar(50),@WMSSeq_1 varchar(50)'		 

 print @SpliceTables
	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@OrderNo_1=@OrderNo,@Flow_1=@Flow,@SubType_1=@SubType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@Status_1=@Status, 
		@Priority_1=@Priority,@ExtOrderNo_1=@ExtOrderNo,@RefOrderNo_1=@RefOrderNo,@TraceCode_1=@TraceCode, 
		@CreateUserNm_1=@CreateUserNm,@DateFrom_1=@DateFrom,@DateTo_1=@DateTo,@StartTime_1=@StartTime,@EndTime_1=@EndTime,
		@WindowTimeFrom_1=@WindowTimeFrom,@WindowTimeTo_1=@WindowTimeTo,@Sequence_1=@Sequence,@Item_1=@Item, 
		@ManufactureParty_1=@ManufactureParty,@WMSSeq_1=@WMSSeq	 
END 




SET ANSI_NULLS ON
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_PrintRecDet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO



CREATE  PROCEDURE [dbo].[USP_Search_PrintRecDet] 
( 
	@ReciptNo varchar(50), 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere=' WHERE 1=1 ' 
	SET @MasterWhere=' WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo=@IPNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.IpNo LIKE @IpNo_1' 
	END	 
	IF(ISNULL(@ReciptNo,'')<>'') 
	BEGIN 
		SET @ReciptNo='%'+@ReciptNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.RecNo LIKE @ReciptNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Status=@Status_1 ' 
	END 
    IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND r.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (r.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR r.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 
	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END	 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY MastCreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 
	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			--SET @SpliceTables='SELECT * FROM ORD_RecDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
	SET @SpliceTables=' select d.Id,d.RecNo,d.OrderNo,d.IpNo,d.Flow,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.LocFrom,d.LocTo,d.RecQty,m.PartyFrom as MastPartyFrom,m.PartyTo as MastPartyTo ,m.OrderType as MastOrderType ,m.Status as MastStatus ,m.CreateDate as MastCreateDate,l.SAPLocation from ORD_RecDet_'+@Type+' as d left join ORD_RecMstr_'+@Type+' as m on d.RecNo=m.RecNo left join MD_Location as l on d.LocTo=l.Code'+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 	
		END 
		ELSE 
		BEGIN 
			--SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_RecDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
	SET @SpliceTables=@SpliceTables+' UNION ALL select d.Id,d.RecNo,d.OrderNo,d.IpNo,d.Flow,d.ExtNo,d.ExtSeq,d.Item,d.RefItemCode,d.ItemDesc,d.Uom,d.LocFrom,d.LocTo,d.RecQty,m.PartyFrom as MastPartyFrom,m.PartyTo as MastPartyTo ,m.OrderType as MastOrderType ,m.Status as MastStatus ,m.CreateDate as MastCreateDate,l.SAPLocation from ORD_RecDet_'+@Type+' as d left join ORD_RecMstr_'+@Type+' as m on d.RecNo=m.RecNo left join MD_Location as l on d.LocTo=l.Code'+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 		
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 
	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@ReciptNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@ReciptNo_1=@ReciptNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END 




/****** Object:  StoredProcedure [dbo].[USP_Search_RecDetCount]    Script Date: 2013-01-02 12:05:11 ******/
SET ANSI_NULLS ON
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USP_Search_ProcurementOrder]...';


GO

CREATE PROCEDURE [dbo].[USP_Search_ProcurementOrder] 
( 
	@OrderNo varchar(50), 
	@Flow varchar(50), 
	@Types varchar(50), 
	@SubType tinyint, 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@Status tinyint, 
	@Priority tinyint, 
	@ExtOrderNo varchar(50), 
	@RefOrderNo varchar(50), 
	@TraceCode varchar(50), 
	@CreateUserNm varchar(100), 
	@DateFrom datetime, 
	@DateTo datetime,
	@StartTime datetime, 
	@EndTime datetime,
	@WindowTimeFrom datetime, 
	@WindowTimeTo datetime,   
	@Sequence bigint, 
	@IsReturn bit, 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
/* 
exec sp_executesql N'exec USP_Search_ProcurementOrder @p0,@p1,@p2,@p3,@p4,@p5,@p6,@p7,@p8,@p9,@p10,@p11,@p12,@p13,@p14,@p15,@p16,@p17,@p18,@p19,@p20,@p21,@p22',N'@p0 nvarchar(4000),@p1 nvarchar(4000),@p2 nvarchar(4000),@p3 nvarchar(4000),@p4 nvarchar(4000),@p5 nvarchar(4000),@p6 smallint,@p7 smallint,@p8 nvarchar(4000),@p9 nvarchar(4000),@p10 nvarchar(4000),@p11 nvarchar(4000),@p12 datetime,@p13 datetime,@p14 bigint,@p15 bit,@p16 bit,@p17 int,@p18 nvarchar(4000),@p19 nvarchar(4000),@p20 nvarchar(4000),@p21 int,@p22 int',@p0=NULL,@p1=NULL,@p2=N'6,1,5,2,7,8',@p3=N'0',@p4=NULL,@p5=NULL,@p6=0,@p7=NULL,@p8=NULL,@p9=NULL,@p10=NULL,@p11=NULL,@p12=NULL,@p13='2012-10-19 00:00:00',@p14=NULL,@p15=0,@p16=0,@p17=2603,@p18=N'and o.OrderStrategy != 4',@p19=NULL,@p20=N'asc',@p21=20,@p22=1 
declare @i tinyint 
set @i=0 
select isnull(@i,'') 
*/ 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+@WhereStatement 

	PRINT @Status 
	IF(ISNULL(@Types,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 

	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo='%'+@OrderNo+'%' 
		SET @Where=@Where+' AND o.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.Flow=@Flow_1' 
	END 
	IF(@SubType is not null) 
	BEGIN 
		SET @Where=@Where+' AND o.SubType=@SubType_1' 
	END	 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.PartyTo=@PartyTo_1 ' 
	END	 

	IF(@Status is not null) 
	BEGIN 
		PRINT @Status 
		SET @Where=@Where+' AND o.Status=@Status_1 ' 
	END		 
	IF(ISNULL(@Priority,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.Priority=@Priority_1 ' 
	END	 
	IF(ISNULL(@ExtOrderNo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.ExtOrderNo LIKE @ExtOrderNo_1 ' 
	END	 
	IF(ISNULL(@RefOrderNo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.RefOrderNo LIKE @RefOrderNo_1 ' 
	END		 
	IF(ISNULL(@TraceCode,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.TraceCode LIKE @TraceCode_1 ' 
	END	 
	IF(ISNULL(@CreateUserNm,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.CreateUserNm=@CreateUserNm_1 ' 
	END	 
	--创建时间
    IF(ISDATE(@DateTo)=1)
	BEGIN
    set @DateTo=dateadd(day,1,@DateTo)
    END
	IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	END	 
	ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate > @DateFrom_1' 
	END 
	ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate < @DateTo_1' 
	END	 
	--开始时间
	IF(ISDATE(@EndTime)=1)
	BEGIN
    set @EndTime=dateadd(day,1,@EndTime)
    END
	IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime BETWEEN @StartTime_1 And @EndTime_1 ' 
	END	 
	ELSE IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime > @StartTime_1' 
	END 
	ELSE IF(ISDATE(@StartTime)=0 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime < @EndTime_1' 
	END	 
	
	--窗口时间
	IF(ISDATE(@WindowTimeTo)=1)
	BEGIN
    set @WindowTimeTo=dateadd(day,1,@WindowTimeTo)
    END
	IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime BETWEEN @WindowTimeFrom_1 And @WindowTimeTo_1 ' 
	END	 
	ELSE IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime > @WindowTimeFrom_1' 
	END 
	ELSE IF(ISDATE(@WindowTimeFrom)=0 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime < @WindowTimeTo_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0 AND @IsReturn=0) 
		BEGIN 
			SET @Where=@Where+' AND o.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE IF(@IsSupplier=0 AND @IsReturn=1) 
		BEGIN 
			SET @Where=@Where+' AND o.PartyFrom IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (o.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR o.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	WHILE(LEN(@Types)>0) 
	BEGIN 
		IF(LEN(@Types)=1) 
		BEGIN 
			SET @Type=@Types 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@Types,1,CHARINDEX(',',@Types)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END			 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_OrderMstr_'+@Type+' AS o '+REPLACE(@Where,'OrderDetail','ORD_OrderDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_OrderMstr_'+@Type+' AS o '+REPLACE(@Where,'OrderDetail','ORD_OrderDet_'+@Type) 
		END 
		SET @Types=SUBSTRING(@Types,3,LEN(@Types)) 
	END	 
	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@OrderNo_1 varchar(50),@Flow_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@Status_1 tinyint,@Priority_1 tinyint,@ExtOrderNo_1 varchar(50),@RefOrderNo_1 varchar(50),@TraceCode_1 varchar(50),@CreateUserNm_1 varchar(100),
	@DateFrom_1 datetime,@DateTo_1 datetime,@StartTime_1 datetime,@EndTime_1 datetime,@WindowTimeFrom_1 datetime,@WindowTimeTo_1 datetime,@SubType_1 tinyint,@Sequence_1 bigint'		 


print @Statement
print '@SubType' + cast(@SubType as varchar(10))

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@OrderNo_1=@OrderNo,@Flow_1=@Flow,@SubType_1=@SubType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@Status_1=@Status, 
		@Priority_1=@Priority,@ExtOrderNo_1=@ExtOrderNo,@RefOrderNo_1=@RefOrderNo,@TraceCode_1=@TraceCode, 
		@CreateUserNm_1=@CreateUserNm,@DateFrom_1=@DateFrom,@DateTo_1=@DateTo,@StartTime_1=@StartTime,@EndTime_1=@EndTime,
		@WindowTimeFrom_1=@WindowTimeFrom,@WindowTimeTo_1=@WindowTimeTo,@Sequence_1=@Sequence	 

END
GO
PRINT N'Creating [dbo].[USP_Search_ProcurementOrderCount]...';


GO

CREATE PROCEDURE [dbo].[USP_Search_ProcurementOrderCount] 
( 
	@OrderNo varchar(50), 
	@Flow varchar(50), 
	@Types varchar(50), 
	@SubType tinyint, 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@Status tinyint, 
	@Priority tinyint, 
	@ExtOrderNo varchar(50), 
	@RefOrderNo varchar(50), 
	@TraceCode varchar(50), 
	@CreateUserNm varchar(100), 
	@DateFrom datetime, 
	@DateTo datetime,
    @StartTime datetime, 
	@EndTime datetime,
	@WindowTimeFrom datetime, 
	@WindowTimeTo datetime,    
	@Sequence bigint, 
	@IsReturn bit, 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000) 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+@WhereStatement 

	PRINT @Where 
	IF(ISNULL(@Types,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 

	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo='%'+@OrderNo+'%' 
		SET @Where=@Where+' AND o.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.Flow=@Flow_1' 
	END 
	IF(@SubType is not null) 
	BEGIN 
		SET @Where=@Where+' AND o.SubType=@SubType_1' 
	END	 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @Where=@Where+' AND o.Status=@Status_1 ' 
	END		 
	IF(ISNULL(@Priority,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.Priority=@Priority_1 ' 
	END	 
	IF(ISNULL(@ExtOrderNo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.ExtOrderNo LIKE @ExtOrderNo_1 ' 
	END	 
	IF(ISNULL(@RefOrderNo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.RefOrderNo LIKE @RefOrderNo_1 ' 
	END		 
	IF(ISNULL(@TraceCode,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.TraceCode LIKE @TraceCode_1 ' 
	END	 
	IF(ISNULL(@CreateUserNm,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND o.CreateUserNm=@CreateUserNm_1 ' 
	END	 
--创建时间
    IF(ISDATE(@DateTo)=1)
	BEGIN
    set @DateTo=dateadd(day,1,@DateTo)
    END
	IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	END	 
	ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate > @DateFrom_1' 
	END 
	ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.CreateDate < @DateTo_1' 
	END	 
	--开始时间
	IF(ISDATE(@EndTime)=1)
	BEGIN
    set @EndTime=dateadd(day,1,@EndTime)
    END
	IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime BETWEEN @StartTime_1 And @EndTime_1 ' 
	END	 
	ELSE IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime > @StartTime_1' 
	END 
	ELSE IF(ISDATE(@StartTime)=0 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.StartTime < @EndTime_1' 
	END	 
	
	--窗口时间
	IF(ISDATE(@WindowTimeTo)=1)
	BEGIN
    set @WindowTimeTo=dateadd(day,1,@WindowTimeTo)
    END
	IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime BETWEEN @WindowTimeFrom_1 And @WindowTimeTo_1 ' 
	END	 
	ELSE IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=0) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime > @WindowTimeFrom_1' 
	END 
	ELSE IF(ISDATE(@WindowTimeFrom)=0 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @Where=@Where+' AND o.WindowTime < @WindowTimeTo_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0 AND @IsReturn=0) 
		BEGIN 
			SET @Where=@Where+' AND o.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE IF(@IsSupplier=0 AND @IsReturn=1) 
		BEGIN 
			SET @Where=@Where+' AND o.PartyFrom IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (o.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR o.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	WHILE(LEN(@Types)>0) 
	BEGIN 
		IF(LEN(@Types)=1) 
		BEGIN 
			SET @Type=@Types 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@Types,1,CHARINDEX(',',@Types)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@Where)>0) 
		--BEGIN 
		--	SET @Where=REPLACE(@Where,'OrderDetail','ORD_OrderDet_'+@Type) 
		--END		 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_OrderMstr_'+@Type+' AS o '+REPLACE(@Where,'OrderDetail','ORD_OrderDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_OrderMstr_'+@Type+' AS o '+REPLACE(@Where,'OrderDetail','ORD_OrderDet_'+@Type) 
		END 
		SET @Types=SUBSTRING(@Types,3,LEN(@Types)) 
	END	 

	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1' 
	SET @Parameter=N'@OrderNo_1 varchar(50),@Flow_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@Status_1 tinyint,@Priority_1 tinyint,@ExtOrderNo_1 varchar(50),@RefOrderNo_1 varchar(50),@TraceCode_1 varchar(50),@CreateUserNm_1 varchar(100),@DateFrom_1 datetime,@DateTo_1 datetime,
	@StartTime_1 datetime,@EndTime_1 datetime,@WindowTimeFrom_1 datetime,@WindowTimeTo_1 datetime,@SubType_1 tinyint,@Sequence_1 bigint'		 
	PRINT @CountStatement 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@OrderNo_1=@OrderNo,@Flow_1=@Flow,@SubType_1=@SubType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@Status_1=@Status, 
		@Priority_1=@Priority,@ExtOrderNo_1=@ExtOrderNo,@RefOrderNo_1=@RefOrderNo,@TraceCode_1=@TraceCode, 
		@CreateUserNm_1=@CreateUserNm,@DateFrom_1=@DateFrom,@DateTo_1=@DateTo,@StartTime_1=@StartTime,@EndTime_1=@EndTime,
		@WindowTimeFrom_1=@WindowTimeFrom,@WindowTimeTo_1=@WindowTimeTo,@Sequence_1=@Sequence		 

END
GO
PRINT N'Creating [dbo].[USP_Search_ProcurementOrderDet]...';


GO


CREATE PROCEDURE [dbo].[USP_Search_ProcurementOrderDet] 
( 
	@OrderNo varchar(50), 
	@Flow varchar(50), 
	@Types varchar(50), 
	@SubType tinyint, 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@Status tinyint, 
	@Priority tinyint, 
	@ExtOrderNo varchar(50), 
	@RefOrderNo varchar(50), 
	@TraceCode varchar(50), 
	@CreateUserNm varchar(100), 
	@DateFrom datetime, 
	@DateTo datetime, 
    @StartTime datetime, 
	@EndTime datetime,
	@WindowTimeFrom datetime, 
	@WindowTimeTo datetime,   
	@Sequence bigint, 
	@IsSupplier bit, 
	@IsReturn bit, 
	@Item varchar(50), 
	@ManufactureParty varchar(50), 
	@WMSSeq varchar(50), 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@Types,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 

	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo='%'+@OrderNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND o.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Flow=@Flow_1' 
	END 
	IF(@SubType is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.SubType=@SubType_1' 
	END	 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyTo=@PartyTo_1 ' 
	END		 
	IF(ISNULL(@Status,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Status=@Status_1 ' 
	END		 
	IF(@Priority is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Priority=@Priority_1 ' 
	END	 
	IF(ISNULL(@ExtOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.ExtOrderNo LIKE @ExtOrderNo_1 ' 
	END	 
	IF(ISNULL(@RefOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.RefOrderNo LIKE @RefOrderNo_1 ' 
	END		 
	IF(ISNULL(@TraceCode,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.TraceCode LIKE @TraceCode_1 ' 
	END	 
	IF(ISNULL(@CreateUserNm,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateUserNm=@CreateUserNm_1 ' 
	END	 
	
	--创建时间
    IF(ISDATE(@DateTo)=1)
	BEGIN
    set @DateTo=dateadd(day,1,@DateTo)
    END
	IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	END	 
	ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate > @DateFrom_1' 
	END 
	ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate < @DateTo_1' 
	END	 
	--开始时间
	IF(ISDATE(@EndTime)=1)
	BEGIN
    set @EndTime=dateadd(day,1,@EndTime)
    END
	IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime BETWEEN @StartTime_1 And @EndTime_1 ' 
	END	 
	ELSE IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime > @StartTime_1' 
	END 
	ELSE IF(ISDATE(@StartTime)=0 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime < @EndTime_1' 
	END	 
	
	--窗口时间
	IF(ISDATE(@WindowTimeTo)=1)
	BEGIN
    set @WindowTimeTo=dateadd(day,1,@WindowTimeTo)
    END
	IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime BETWEEN @WindowTimeFrom_1 And @WindowTimeTo_1 ' 
	END	 
	ELSE IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime > @WindowTimeFrom_1' 
	END 
	ELSE IF(ISDATE(@WindowTimeFrom)=0 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime < @WindowTimeTo_1' 
	END	 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@WMSSeq,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.WMSSeq=@WMSSeq_1' 
	END		 

	--IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	--END	 
	--ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate > @DateFrom_1' 
	--END 
	--ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate < @DateTo_1' 
	--END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0 AND @IsReturn=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE IF(@IsSupplier=0 AND @IsReturn=1) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyFrom IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (o.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR o.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	SET @MasterWhere=REPLACE(@WhereStatement,'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@Types)>0) 
	BEGIN 
		IF(LEN(@Types)=1) 
		BEGIN 
			SET @Type=@Types 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@Types,1,CHARINDEX(',',@Types)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END	 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			--SET @MasterWhere=REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
			SET @SpliceTables='SELECT * FROM ORD_OrderDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
			--PRINT @SpliceTables 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_OrderDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
		END 
		SET @Types=SUBSTRING(@Types,3,LEN(@Types)) 
	END	 

	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@OrderNo_1 varchar(50),@Flow_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@Status_1 tinyint,@Priority_1 tinyint,@ExtOrderNo_1 varchar(50),@RefOrderNo_1 varchar(50),@TraceCode_1 varchar(50),@CreateUserNm_1 varchar(100),@DateFrom_1 datetime,@DateTo_1 datetime,
	@StartTime_1 datetime,@EndTime_1 datetime,@WindowTimeFrom_1 datetime,@WindowTimeTo_1 datetime,@SubType_1 tinyint,@Sequence_1 bigint,@Item_1 varchar(50),@ManufactureParty_1 varchar(50),@WMSSeq_1 varchar(50)'		 


	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@OrderNo_1=@OrderNo,@Flow_1=@Flow,@SubType_1=@SubType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@Status_1=@Status, 
		@Priority_1=@Priority,@ExtOrderNo_1=@ExtOrderNo,@RefOrderNo_1=@RefOrderNo,@TraceCode_1=@TraceCode, 
		@CreateUserNm_1=@CreateUserNm,@DateFrom_1=@DateFrom,@DateTo_1=@DateTo,@StartTime_1=@StartTime,@EndTime_1=@EndTime,
		@WindowTimeFrom_1=@WindowTimeFrom,@WindowTimeTo_1=@WindowTimeTo,@Sequence_1=@Sequence,@Item_1=@Item, 
		@ManufactureParty_1=@ManufactureParty,@WMSSeq_1=@WMSSeq	 
END
GO
PRINT N'Creating [dbo].[USP_Search_ProcurementOrderDetCount]...';


GO

CREATE  PROCEDURE [dbo].[USP_Search_ProcurementOrderDetCount] 
( 
	@OrderNo varchar(50), 
	@Flow varchar(50), 
	@Types varchar(50), 
	@SubType tinyint, 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@Status tinyint, 
	@Priority tinyint, 
	@ExtOrderNo varchar(50), 
	@RefOrderNo varchar(50), 
	@TraceCode varchar(50), 
	@CreateUserNm varchar(100), 
	@DateFrom datetime, 
	@DateTo datetime, 
	@StartTime datetime, 
	@EndTime datetime,
	@WindowTimeFrom datetime, 
	@WindowTimeTo datetime,   
	@Sequence bigint, 
	@IsSupplier bit, 
	@IsReturn bit, 
	@Item varchar(50), 
	@ManufactureParty varchar(50), 
	@WMSSeq varchar(50), 
	@UserId int, 
	@WhereStatement varchar(8000) 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@Types,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 

	IF(ISNULL(@OrderNo,'')<>'') 
	BEGIN 
		SET @OrderNo='%'+@OrderNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND o.OrderNo LIKE @OrderNo_1' 
	END 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Flow=@Flow_1' 
	END 
	IF(@SubType is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.SubType=@SubType_1' 
	END	 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.PartyTo=@PartyTo_1 ' 
	END		 
	IF(ISNULL(@Status,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Status=@Status_1 ' 
	END		 
	IF(@Priority is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.Priority=@Priority_1 ' 
	END	 
	IF(ISNULL(@ExtOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.ExtOrderNo LIKE @ExtOrderNo_1 ' 
	END	 
	IF(ISNULL(@RefOrderNo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.RefOrderNo LIKE @RefOrderNo_1 ' 
	END		 
	IF(ISNULL(@TraceCode,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.TraceCode LIKE @TraceCode_1 ' 
	END	 
	IF(ISNULL(@CreateUserNm,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateUserNm=@CreateUserNm_1 ' 
	END	 
	
	--创建时间
    IF(ISDATE(@DateTo)=1)
	BEGIN
    set @DateTo=dateadd(day,1,@DateTo)
    END
	IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	END	 
	ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate > @DateFrom_1' 
	END 
	ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.CreateDate < @DateTo_1' 
	END	 
	--开始时间
	IF(ISDATE(@EndTime)=1)
	BEGIN
    set @EndTime=dateadd(day,1,@EndTime)
    END
	IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime BETWEEN @StartTime_1 And @EndTime_1 ' 
	END	 
	ELSE IF(ISDATE(@StartTime)=1 AND ISDATE(@EndTime)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime > @StartTime_1' 
	END 
	ELSE IF(ISDATE(@StartTime)=0 AND ISDATE(@EndTime)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.StartTime < @EndTime_1' 
	END	 
	
	--窗口时间
	IF(ISDATE(@WindowTimeTo)=1)
	BEGIN
    set @WindowTimeTo=dateadd(day,1,@WindowTimeTo)
    END
	IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime BETWEEN @WindowTimeFrom_1 And @WindowTimeTo_1 ' 
	END	 
	ELSE IF(ISDATE(@WindowTimeFrom)=1 AND ISDATE(@WindowTimeTo)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime > @WindowTimeFrom_1' 
	END 
	ELSE IF(ISDATE(@WindowTimeFrom)=0 AND ISDATE(@WindowTimeTo)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND o.WindowTime < @WindowTimeTo_1' 
	END	 

	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@WMSSeq,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.WMSSeq=@WMSSeq_1' 
	END		 

	--IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate BETWEEN @DateFrom_1 And @DateTo_1 ' 
	--END	 
	--ELSE IF(ISDATE(@DateFrom)=1 AND ISDATE(@DateTo)=0) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate > @DateFrom_1' 
	--END 
	--ELSE IF(ISDATE(@DateFrom)=0 AND ISDATE(@DateTo)=1) 
	--BEGIN 
	--	SET @DetailWhere=@DetailWhere+' AND d.CreateDate < @DateTo_1' 
	--END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0 AND @IsReturn=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE IF(@IsSupplier=0 AND @IsReturn=1) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND o.PartyFrom IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (o.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR o.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	SET @MasterWhere=REPLACE(@WhereStatement,'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@Types)>0) 
	BEGIN 
		IF(LEN(@Types)=1) 
		BEGIN 
			SET @Type=@Types 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@Types,1,CHARINDEX(',',@Types)-1) 
		END 
		--IF(CHARINDEX('OrderDetail',@WhereStatement)>0) 
		--BEGIN 
		--	SET @WhereStatement=REPLACE(@WhereStatement,'OrderDetail','ORD_OrderDet'+@Type) 
		--END	 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			--SET @MasterWhere=REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
			SET @SpliceTables='SELECT * FROM ORD_OrderDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
			--PRINT @SpliceTables 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_OrderDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'OrderMaster','ORD_OrderMstr_'+@Type+' ') 
		END 
		SET @Types=SUBSTRING(@Types,3,LEN(@Types)) 
	END	 
	--PRINT @SpliceTables 

	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1' 
	SET @Parameter=N'@OrderNo_1 varchar(50),@Flow_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@Status_1 tinyint,@Priority_1 tinyint,@ExtOrderNo_1 varchar(50),@RefOrderNo_1 varchar(50),@TraceCode_1 varchar(50),@CreateUserNm_1 varchar(100),@DateFrom_1 datetime,@DateTo_1 datetime,
	@StartTime_1 datetime,@EndTime_1 datetime,@WindowTimeFrom_1 datetime,@WindowTimeTo_1 datetime,@SubType_1 tinyint,@Sequence_1 bigint,@Item_1 varchar(50),@ManufactureParty_1 varchar(50),@WMSSeq_1 varchar(50)'		 
	PRINT @CountStatement 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@OrderNo_1=@OrderNo,@Flow_1=@Flow,@SubType_1=@SubType,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo,@Status_1=@Status, 
		@Priority_1=@Priority,@ExtOrderNo_1=@ExtOrderNo,@RefOrderNo_1=@RefOrderNo,@TraceCode_1=@TraceCode, 
		@CreateUserNm_1=@CreateUserNm,@DateFrom_1=@DateFrom,@DateTo_1=@DateTo,@StartTime_1=@StartTime,@EndTime_1=@EndTime,
		@WindowTimeFrom_1=@WindowTimeFrom,@WindowTimeTo_1=@WindowTimeTo,@Sequence_1=@Sequence,@Item_1=@Item, 
		@ManufactureParty_1=@ManufactureParty,@WMSSeq_1=@WMSSeq	 

END
GO
PRINT N'Creating [dbo].[USP_Search_RecDet]...';


GO

CREATE  PROCEDURE [dbo].[USP_Search_RecDet] 
( 
	@ReciptNo varchar(50), 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo=@IPNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.IpNo LIKE @IpNo_1' 
	END	 
	IF(ISNULL(@ReciptNo,'')<>'') 
	BEGIN 
		SET @ReciptNo='%'+@ReciptNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.RecNo LIKE @ReciptNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Status=@Status_1 ' 
	END 
    IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND r.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (r.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR r.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 
	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END	 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 
	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_RecDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_RecDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 
	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@ReciptNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@ReciptNo_1=@ReciptNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
PRINT N'Creating [dbo].[USP_Search_RecDetCount]...';


GO

CREATE  PROCEDURE [dbo].[USP_Search_RecDetCount] 
( 
	@ReciptNo varchar(50), 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000) 
	--@SortCloumn varchar(50)=null, 
	--@SortRule varchar(50)=null, 
	--@PageSize int, 
	--@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @PermissionClause nvarchar(1000) 
	DECLARE @DetailWhere nvarchar(4000) 
	DECLARE @MasterWhere nvarchar(4000)	 
	SET @DetailWhere='WHERE 1=1 ' 
	SET @MasterWhere='WHERE 1=1 ' 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo=@IPNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.IpNo LIKE @IpNo_1' 
	END	 
	IF(ISNULL(@ReciptNo,'')<>'') 
	BEGIN 
		SET @ReciptNo='%'+@ReciptNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.RecNo LIKE @ReciptNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @MasterWhere=@MasterWhere+' AND r.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @MasterWhere=@MasterWhere+' AND r.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND r.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @MasterWhere=@MasterWhere+' AND (r.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR r.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 
	IF(ISNULL(@Item,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Item=@Item_1' 
	END 
	IF(ISNULL(@ManufactureParty,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.ManufactureParty=@ManufactureParty_1' 
	END 
	IF(ISNULL(@Dock,'')<>'') 
	BEGIN 
		SET @DetailWhere=@DetailWhere+' AND d.Dock=@Dock_1' 
	END	 
	SET @MasterWhere=REPLACE(ISNULL(@WhereStatement,''),'Where',@MasterWhere+' AND')	 
	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 
		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_RecDet_'+@Type+' AS d '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_RecDet_'+@Type+' AS d  '+@DetailWhere+' '+REPLACE(@MasterWhere,'ReceiptMaster','ORD_RecMstr_'+@Type+' ') 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 
	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1  '--+@PagePara 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@ReciptNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@ReciptNo_1=@ReciptNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
PRINT N'Creating [dbo].[USP_Search_RecMstr]...';


GO

CREATE PROCEDURE [dbo].[USP_Search_RecMstr] 
( 
	@ReciptNo varchar(50), 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000), 
	@SortCloumn varchar(50)=null, 
	@SortRule varchar(50)=null, 
	@PageSize int, 
	@Page int 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @Statement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+ISNULL(@WhereStatement,'') 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo=@IPNo+'%' 
		SET @Where=@Where+' AND r.IpNo LIKE @IpNo_1' 
	END	 
	IF(ISNULL(@ReciptNo,'')<>'') 
	BEGIN 
		SET @ReciptNo='%'+@ReciptNo+'%' 
		SET @Where=@Where+' AND r.RecNo LIKE @ReciptNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @Where=@Where+' AND r.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @Where=@Where+' AND r.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @Where=@Where+' AND r.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (r.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR r.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	IF ISNULL(@SortCloumn,'')='' 
	BEGIN 
		SET @SortDesc=' ORDER BY CreateDate DESC' 
	END 
	ELSE 
	BEGIN 
		IF(ISNULL(@SortRule,'')='') 
		BEGIN 
			SET @SortRule=' ACS' 
		END 
		IF(CHARINDEX('Reference',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Reference','Ref') 
		END 
		IF(CHARINDEX('Name',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Name','NM') 
		END 
		IF(CHARINDEX('UnitCount',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'UnitCount','UC') 
		END 
		IF(CHARINDEX('Sequence',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Sequence','Seq') 
		END 
		IF(CHARINDEX('Receive',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Receive','Rec') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule 
		IF(CHARINDEX('Address',@SortCloumn)>0) 
		BEGIN 
			SET @SortCloumn=REPLACE(@SortCloumn,'Address','Addr') 
		END					 
		SET @SortDesc=' ORDER BY '+@SortCloumn+' '+@SortRule		 
	END 

	IF @Page>0 
	BEGIN 
		SET @PagePara='WHERE RowId BETWEEN '+cast((@PageSize*(@Page-1)+1) as varchar(50))+' AND '++cast(@PageSize*(@Page) as varchar(50)) 
	END 

	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_RecMstr_'+@Type+' AS r '+REPLACE(@Where,'RecDetail','ORD_RecDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_RecMstr_'+@Type+' AS r '+REPLACE(@Where,'RecDetail','ORD_RecDet_'+@Type) 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 

	SET @Statement=N'SELECT TOP('+CAST(@PageSize AS VARCHAR(10))+') * FROM (SELECT *,RowId=ROW_NUMBER()OVER('+@SortDesc+') FROM ('+@SpliceTables+') AS T1 ) AS T2 '+@PagePara 
	PRINT @Statement 
	PRINT LEN(@Statement) 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@ReciptNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @Statement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@ReciptNo_1=@ReciptNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
PRINT N'Creating [dbo].[USP_Search_RecMstrCount]...';


GO


CREATE PROCEDURE [dbo].[USP_Search_RecMstrCount] 
( 
	@ReciptNo varchar(50), 
	@IpNo varchar(50), 
	@Status tinyint,	 
	@OrderTypes varchar(50), 
	@PartyFrom varchar(50), 
	@PartyTo varchar(50), 
	@StartDate datetime, 
	@EndDate datetime, 
	@Dock varchar(50), 
	@Item varchar(50), 
	@WMSNo varchar(50), 
	@ManufactureParty varchar(50), 
	@Flow varchar(50), 
	@IsSupplier bit, 
	@UserId int, 
	@WhereStatement varchar(8000) 
) 
AS 
BEGIN 
	SET NOCOUNT ON 
	DECLARE @SpliceTables nvarchar(4000) 
	DECLARE @Type varchar(5) 
	DECLARE @CountStatement nvarchar(4000) 
	DECLARE @Parameter nvarchar(4000) 
	DECLARE @PagePara nvarchar(4000) 
	DECLARE @SortDesc nvarchar(100) 
	DECLARE @Where nvarchar(4000) 
	DECLARE @PermissionClause nvarchar(1000) 
	SET @Where='WHERE 1=1 '+ISNULL(@WhereStatement,'') 

	IF(ISNULL(@OrderTypes,'')='') 
	BEGIN 
		RAISERROR ('Please choose order types to search!' , 16, 1) WITH NOWAIT 
	END 
	IF(ISNULL(@IPNo,'')<>'') 
	BEGIN 
		SET @IPNo=@IPNo+'%' 
		SET @Where=@Where+' AND r.IpNo LIKE @IpNo_1' 
	END	 
	IF(ISNULL(@ReciptNo,'')<>'') 
	BEGIN 
		SET @ReciptNo='%'+@ReciptNo+'%' 
		SET @Where=@Where+' AND r.RecNo LIKE @ReciptNo_1' 
	END 
	IF(ISNULL(@WMSNo,'')<>'') 
	BEGIN 
		SET @WMSNo=@WMSNo+'%' 
		SET @Where=@Where+' AND r.WMSNo LIKE @WMSNo_1' 
	END	 
	IF(ISNULL(@Flow,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.Flow=@Flow_1' 
	END 
	IF(ISNULL(@PartyFrom,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.PartyFrom=@PartyFrom_1' 
	END 
	IF(ISNULL(@PartyTo,'')<>'') 
	BEGIN 
		SET @Where=@Where+' AND r.PartyTo=@PartyTo_1 ' 
	END		 
	IF(@Status is not null) 
	BEGIN 
		SET @Where=@Where+' AND r.Status=@Status_1 ' 
	END 
	IF(ISDATE(@EndDate)=1)
	BEGIN
    set @EndDate=dateadd(day,1,@EndDate)
    END
	IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate BETWEEN @StartDate_1 And @EndDate_1 ' 
	END	 
	ELSE IF(ISDATE(@StartDate)=1 AND ISDATE(@EndDate)=0) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate > @StartDate_1' 
	END 
	ELSE IF(ISDATE(@StartDate)=0 AND ISDATE(@EndDate)=1) 
	BEGIN 
		SET @Where=@Where+' AND r.CreateDate < @EndDate_1' 
	END	 

	DECLARE @UserCode varchar(50) 
	SELECT @UserCode=Code FROM ACC_User WHERE Id=@UserId 
	IF(UPPER(@UserCode)<>'SU') 
	BEGIN 
		SELECT PermissionCode INTO #Temp FROM VIEW_UserPermission WHERE UserId=@UserId 
		IF(@IsSupplier=0) 
		BEGIN 
			SET @Where=@Where+' AND r.PartyTo IN (SELECT PermissionCode FROM #Temp) ' 
		END 
		ELSE  
		BEGIN 
			SET @Where=@Where+' AND (r.PartyFrom IN (SELECT PermissionCode FROM #Temp) OR r.PartyTo IN (SELECT PermissionCode FROM #Temp))  ' 
		END				 
	END 

	WHILE(LEN(@OrderTypes)>0) 
	BEGIN 
		IF(LEN(@OrderTypes)=1) 
		BEGIN 
			SET @Type=@OrderTypes 
		END 
		ELSE 
		BEGIN 
			SET @Type=SUBSTRING(@OrderTypes,1,CHARINDEX(',',@OrderTypes)-1) 
		END 

		IF(ISNULL(@SpliceTables,'')='') 
		BEGIN 
			SET @SpliceTables='SELECT * FROM ORD_RecMstr_'+@Type+' AS r '+REPLACE(@Where,'RecDetail','ORD_RecDet_'+@Type) 
		END 
		ELSE 
		BEGIN 
			SET @SpliceTables=@SpliceTables+' UNION ALL SELECT * FROM ORD_RecMstr_'+@Type+' AS r '+REPLACE(@Where,'RecDetail','ORD_RecDet_'+@Type) 
		END 
		SET @OrderTypes=SUBSTRING(@OrderTypes,3,LEN(@OrderTypes)) 
	END	 

	SET @CountStatement=N'SELECT COUNT(1) FROM ('+@SpliceTables+') AS T1' 
	SET @Parameter=N'@IpNo_1 varchar(50),@Status_1 tinyint,	@OrderTypes_1 varchar(50),@PartyFrom_1 varchar(50),@PartyTo_1 varchar(50),@StartDate_1 datetime,@EndDate_1 datetime,@Dock_1 varchar(50),@Item_1 varchar(50),@ReciptNo_1 varchar(50),@WMSNo_1 varchar(50),@ManufactureParty_1 varchar(50),@Flow_1 varchar(50),@IsSupplier_1 bit'		 

	EXEC SP_EXECUTESQL @CountStatement,@Parameter, 
		@IPNo_1=@IPNo,@Status_1=@Status,@OrderTypes_1=@OrderTypes ,@PartyFrom_1=@PartyFrom,@PartyTo_1=@PartyTo ,@StartDate_1=@StartDate , 
		@EndDate_1=@EndDate ,@Dock_1=@Dock ,@Item_1=@Item ,@ReciptNo_1=@ReciptNo,@WMSNo_1=@WMSNo,@ManufactureParty_1=@ManufactureParty , 
		@Flow_1=@Flow,@IsSupplier_1=@IsSupplier 

END
GO
PRINT N'Creating [dbo].[USP_Split_IpDet_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_IpDet_Delete]
(
	@Id int,
	@Version int
)
as 
begin
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_IpDet WHERE Id=@Id AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_IpDet_1 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_IpDet_2 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_IpDet_3 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_IpDet_4 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_IpDet_5 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_IpDet_6 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_IpDet_7 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_IpDet_8 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_IpDet_0 WHERE Id=@Id AND [Version]=@Version
	END
end
GO
PRINT N'Creating [dbo].[USP_Split_IpLocationDet_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_IpLocationDet_Delete]
(
	@Id int,
	@Version int
)
AS
BEGIN
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_IpLocationDet WHERE Id=@Id AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_IpLocationDet_1 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_IpLocationDet_2 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_IpLocationDet_3 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_IpLocationDet_4 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_IpLocationDet_5 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_IpLocationDet_6 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_IpLocationDet_7 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_IpLocationDet_7 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_IpLocationDet_0 WHERE Id=@Id AND [Version]=@Version
	END
END
GO
PRINT N'Creating [dbo].[USP_Split_IpMstr_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE procedure [dbo].[USP_Split_IpMstr_Delete]
(
	@IpNo varchar(4000),
	@Version int
)
as 
begin
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_IpMstr WHERE IpNo=@IpNo AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_IpMstr_1 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_IpMstr_2 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_IpMstr_3 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_IpMstr_4 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_IpMstr_5 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_IpMstr_6 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_IpMstr_7 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_IpMstr_8 WHERE IpNo=@IpNo AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_IpMstr_0 WHERE IpNo=@IpNo AND [Version]=@Version
	END
end
GO
PRINT N'Creating [dbo].[USP_Split_LocationLotDet_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_LocationLotDet_Delete]
(
	@Id int,
	@Version int
)
AS 
BEGIN
	DECLARE @Location tinyint
	SELECT @Location=Location From VIEW_LocationLotDet WHERE Id=@Id AND [Version]=@Version
	
	IF @Location='RM'
	BEGIN
		DELETE FROM INV_LocationLotDet_1 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE
	BEGIN
		DELETE FROM INV_LocationLotDet_0 WHERE Id=@Id AND [Version]=@Version
	END
    
    SELECT SCOPE_IDENTITY()
END
GO
PRINT N'Creating [dbo].[USP_Split_OrderDet_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_OrderDet_Delete]
(
	@Id int,
	@Version int
)
AS 
BEGIN
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_OrderDet WHERE Id=@Id AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_OrderDet_1 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_OrderDet_2 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_OrderDet_3 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_OrderDet_4 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_OrderDet_5 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_OrderDet_6 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_OrderDet_7 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_OrderDet_8 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_OrderDet_0 WHERE Id=@Id AND [Version]=@Version
	END
END
GO
PRINT N'Creating [dbo].[USP_Split_RecDet_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_RecDet_Delete]
(
	@Id int,
	@Version int
)
AS 
BEGIN
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_RecDet WHERE Id=@Id AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_RecDet_1 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_RecDet_2 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_RecDet_3 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_RecDet_4 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_RecDet_5 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_RecDet_6 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_RecDet_7 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_RecDet_8 WHERE Id=@Id AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_RecDet_0 WHERE Id=@Id AND [Version]=@Version
	END
    DELETE FROM ORD_RecDet WHERE Id=@Id AND [Version]=@Version
    SELECT SCOPE_IDENTITY()
END
GO
PRINT N'Creating [dbo].[USP_Split_RecMstr_Delete]...';


GO
--select * from dbo.ORD_OrderMstr

CREATE PROCEDURE [dbo].[USP_Split_RecMstr_Delete]
(
	@RecNo varchar(4000),
	@Version int

)
AS
BEGIN
	DECLARE @OrderType tinyint
	SELECT @OrderType=OrderType From VIEW_RecMstr WHERE RecNo=@RecNo AND Version=@Version
	
	IF @OrderType=1
	BEGIN
		DELETE FROM ORD_RecMstr_1 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=2
	BEGIN
		DELETE FROM ORD_RecMstr_2 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=3
	BEGIN
		DELETE FROM ORD_RecMstr_3 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=4
	BEGIN
		DELETE FROM ORD_RecMstr_4 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=5
	BEGIN
		DELETE FROM ORD_RecMstr_5 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=6
	BEGIN
		DELETE FROM ORD_RecMstr_6 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=7
	BEGIN
		DELETE FROM ORD_RecMstr_7 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=8
	BEGIN
		DELETE FROM ORD_RecMstr_8 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	ELSE IF @OrderType=0
	BEGIN
		DELETE FROM ORD_RecMstr_0 WHERE RecNo=@RecNo AND [Version]=@Version
	END
	
	SELECT SCOPE_IDENTITY()
END
GO
PRINT N'Creating [dbo].[VIEW_IpDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_IpDet';


GO
PRINT N'Creating [dbo].[VIEW_IpDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_IpDet';


GO
PRINT N'Creating [dbo].[VIEW_IpLocationDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -576
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_IpLocationDet';


GO
PRINT N'Creating [dbo].[VIEW_IpLocationDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_IpLocationDet';


GO
PRINT N'Creating [dbo].[VIEW_LocationDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocationDet';


GO
PRINT N'Creating [dbo].[VIEW_LocationDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocationDet';


GO
PRINT N'Creating [dbo].[VIEW_LocationLotDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "INV_LocationLotDet"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "INV_Hu"
            Begin Extent = 
               Top = 6
               Left = 254
               Bottom = 125
               Right = 432
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "BIL_PlanBill"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 245
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MD_LocationBin"
            Begin Extent = 
               Top = 126
               Left = 254
               Bottom = 245
               Right = 432
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocationLotDet';


GO
PRINT N'Creating [dbo].[VIEW_LocationLotDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocationLotDet';


GO
PRINT N'Creating [dbo].[VIEW_LocTrans].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocTrans';


GO
PRINT N'Creating [dbo].[VIEW_LocTrans].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocTrans';


GO
PRINT N'Creating [dbo].[VIEW_LocTransDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocTransDet';


GO
PRINT N'Creating [dbo].[VIEW_LocTransDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_LocTransDet';


GO
PRINT N'Creating [dbo].[VIEW_OrderDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_OrderDet';


GO
PRINT N'Creating [dbo].[VIEW_OrderDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_OrderDet';


GO
PRINT N'Creating [dbo].[VIEW_RecDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -384
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecDet';


GO
PRINT N'Creating [dbo].[VIEW_RecDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecDet';


GO
PRINT N'Creating [dbo].[VIEW_RecLocationDet].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ORD_RecLocationDet_0"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecLocationDet';


GO
PRINT N'Creating [dbo].[VIEW_RecLocationDet].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecLocationDet';


GO
PRINT N'Creating [dbo].[VIEW_RecMstr].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -480
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecMstr';


GO
PRINT N'Creating [dbo].[VIEW_RecMstr].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'VIEW_RecMstr';


GO
-- Refactoring step to update target server with deployed transaction logs
CREATE TABLE  [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
GO
sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ACC_Permission] WITH CHECK CHECK CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM2];

ALTER TABLE [dbo].[ACC_PermissionGroupPermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM];

ALTER TABLE [dbo].[ACC_PermissionGroupPermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_PERM_REFERENCE_ACC_PERM3];

ALTER TABLE [dbo].[ACC_RolePermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_PERM2];

ALTER TABLE [dbo].[ACC_RolePermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_ROLE2];

ALTER TABLE [dbo].[ACC_RolePermissionGroup] WITH CHECK CHECK CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_PERM];

ALTER TABLE [dbo].[ACC_RolePermissionGroup] WITH CHECK CHECK CONSTRAINT [FK_ACC_ROLE_REFERENCE_ACC_ROLE];

ALTER TABLE [dbo].[ACC_UserFav] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER];

ALTER TABLE [dbo].[ACC_UserFav] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_SYS_MENU];

ALTER TABLE [dbo].[ACC_UserPermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_PERM];

ALTER TABLE [dbo].[ACC_UserPermission] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER4];

ALTER TABLE [dbo].[ACC_UserPermissionGroup] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_PERM2];

ALTER TABLE [dbo].[ACC_UserPermissionGroup] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER3];

ALTER TABLE [dbo].[ACC_UserRole] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_ROLE];

ALTER TABLE [dbo].[ACC_UserRole] WITH CHECK CHECK CONSTRAINT [FK_ACC_USER_REFERENCE_ACC_USER2];

ALTER TABLE [dbo].[BAT_JobParam] WITH CHECK CHECK CONSTRAINT [FK_BAT_JOBP_REFERENCE_BAT_JOB];

ALTER TABLE [dbo].[BAT_Trigger] WITH CHECK CHECK CONSTRAINT [FK_BAT_TRIG_REFERENCE_BAT_JOB];

ALTER TABLE [dbo].[BAT_TriggerParam] WITH CHECK CHECK CONSTRAINT [FK_BAT_TRIG_REFERENCE_BAT_TRIG];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[BIL_ActBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_ACTB_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[BIL_BillDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_ACTB];

ALTER TABLE [dbo].[BIL_BillDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_BILL];

ALTER TABLE [dbo].[BIL_BillDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[BIL_BillDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[BIL_BillDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[BIL_BillMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[BIL_BillMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[BIL_BillMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[BIL_BillMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_BILL_REFERENCE_MD_TAX];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_INV_HU];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[BIL_PlanBill] WITH CHECK CHECK CONSTRAINT [FK_BIL_PLAN_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[BIL_PriceListDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[BIL_PriceListDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[BIL_PriceListDet] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[BIL_PriceListMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[BIL_PriceListMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[BIL_PriceListMstr] WITH CHECK CHECK CONSTRAINT [FK_BIL_PRIC_REFERENCE_MD_TAX];

ALTER TABLE [dbo].[CUST_DeferredFeedCounter] WITH CHECK CHECK CONSTRAINT [FK_CUST_DEF_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[CUST_ItemTrace] WITH CHECK CHECK CONSTRAINT [FK_CUST_ITE_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_INP_CONC];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INP_ConcessionDet] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INP_ConcessionMstr] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_INP_REJE];

ALTER TABLE [dbo].[INP_ConcessionMstr] WITH CHECK CHECK CONSTRAINT [FK_INP_CONC_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_INP_INSP2];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT4];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT5];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INP_InspectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM4];

ALTER TABLE [dbo].[INP_InspectMstr] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[INP_InspectMstr] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_INP_INSP];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_INV_HU2];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INP_InspectResult] WITH CHECK CHECK CONSTRAINT [FK_INP_INSP_REFERENCE_MD_UOM3];

ALTER TABLE [dbo].[INP_InspectResultExt] WITH CHECK CHECK CONSTRAINT [FK_InspectResultExt_inpRetId_FOREIGN_KEY];

ALTER TABLE [dbo].[INP_ProdScanDet] WITH CHECK CHECK CONSTRAINT [FK_INP_PROD_REFERENCE_INP_PROD];

ALTER TABLE [dbo].[INP_ProdScanDet] WITH CHECK CHECK CONSTRAINT [FK_INP_PROD_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_INP_INSP];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_INP_INSP2];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_INP_REJE];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INP_RejectDet] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INP_RejectMstr] WITH CHECK CHECK CONSTRAINT [FK_INP_REJE_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[INV_ContainerDet] WITH CHECK CHECK CONSTRAINT [FK_INV_CONT_REFERENCE_MD_CONTA2];

ALTER TABLE [dbo].[INV_ContainerDet] WITH CHECK CHECK CONSTRAINT [FK_INV_CONT_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[INV_ContLocationDet] WITH CHECK CHECK CONSTRAINT [FK_INV_CONT_REFERENCE_INV_CONT];

ALTER TABLE [dbo].[INV_ContLocationDet] WITH CHECK CHECK CONSTRAINT [FK_INV_CONT_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[INV_ContLocationDet] WITH CHECK CHECK CONSTRAINT [FK_INV_CONT_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[INV_DailyTransBalance] WITH CHECK CHECK CONSTRAINT [FK_INV_DAIL_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_DailyTransBalance] WITH CHECK CHECK CONSTRAINT [FK_INV_DAIL_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[INV_Hu] WITH CHECK CHECK CONSTRAINT [FK_INV_HU_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_Hu] WITH CHECK CHECK CONSTRAINT [FK_INV_HU_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[INV_Hu] WITH CHECK CHECK CONSTRAINT [FK_INV_HU_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INV_Hu] WITH CHECK CHECK CONSTRAINT [FK_INV_HU_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INV_HuCS] WITH CHECK CHECK CONSTRAINT [FK_INV_HUCS_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_REGIO2];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INV_ItemExchange] WITH CHECK CHECK CONSTRAINT [FK_INV_ITEM_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INV_KanBanCard] WITH CHECK CHECK CONSTRAINT [FK_INV_KANB_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_KanBanCard] WITH CHECK CHECK CONSTRAINT [FK_INV_KANB_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INV_KanBanCard] WITH CHECK CHECK CONSTRAINT [FK_INV_KANB_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[INV_KanBanCard] WITH CHECK CHECK CONSTRAINT [FK_INV_KANB_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[INV_KanBanCardInfo] WITH CHECK CHECK CONSTRAINT [FK_INV_KANB_REFERENCE_INV_KANB];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LOCA_0_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LOCA_0_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LOCA_0_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INV_LocationLotDet] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_0_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet0_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet0_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet0_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_0] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet0_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_1_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet1_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet1_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet1_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_1] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet1_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_10_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet10_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet10_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet10_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet10_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_10] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet10_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_11_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet11_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet11_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet11_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet11_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_11] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet11_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_12_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet12_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet12_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet12_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet12_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_12] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet12_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_13_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet13_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet13_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet13_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet13_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_13] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet13_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_14_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet14_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet14_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet14_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet14_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_14] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet14_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_15_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet15_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet15_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet15_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet15_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_15] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet15_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_16_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet16_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet16_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet16_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet16_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_16] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet16_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_17_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet17_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet17_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet17_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet17_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_17] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet17_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_18_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet18_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet18_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet18_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet18_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_18] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet18_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_19_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet19_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet19_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet19_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet19_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_19] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet19_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_2_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet2_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet2_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet2_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_2] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet2_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_3_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet3_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet3_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet3_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_3] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet3_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_4_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet4_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet4_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet4_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_4] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet4_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_5_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet5_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet5_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet5_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_5] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet5_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_6_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet6_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet6_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet6_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_6] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet6_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_7_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet7_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet7_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet7_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_7] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet7_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_8_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet8_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet8_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet8_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_8] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet8_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet_9_REFERENCE_MD_SUPPLIER];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet9_Bin_REFERENCE_MD_LocationBin_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet9_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet9_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet9_Location_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[INV_LocationLotDet_9] WITH CHECK CHECK CONSTRAINT [FK_INV_LocationLotDet9_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[INV_OpRefBalance] WITH CHECK CHECK CONSTRAINT [FK_INV_OPRE_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_HU2];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC2];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT4];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT5];

ALTER TABLE [dbo].[INV_StockTakeDet] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[INV_StockTakeItem] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC4];

ALTER TABLE [dbo].[INV_StockTakeItem] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[INV_StockTakeLoc] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC];

ALTER TABLE [dbo].[INV_StockTakeLoc] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[INV_StockTakeMstr] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_HU];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_INV_STOC3];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_ITEM3];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT6];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT7];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_LOCAT8];

ALTER TABLE [dbo].[INV_StockTakeResult] WITH CHECK CHECK CONSTRAINT [FK_INV_STOC_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ISS_IssueDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU7];

ALTER TABLE [dbo].[ISS_IssueDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU9];

ALTER TABLE [dbo].[ISS_IssueMstr] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU8];

ALTER TABLE [dbo].[ISS_IssueNo] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU];

ALTER TABLE [dbo].[ISS_IssueTypeToMstr] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU3];

ALTER TABLE [dbo].[ISS_IssueTypeToMstr] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU4];

ALTER TABLE [dbo].[ISS_IssueTypeToRoleDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ACC_ROLE];

ALTER TABLE [dbo].[ISS_IssueTypeToRoleDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU6];

ALTER TABLE [dbo].[ISS_IssueTypeToUserDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ACC_USER];

ALTER TABLE [dbo].[ISS_IssueTypeToUserDet] WITH CHECK CHECK CONSTRAINT [FK_ISS_ISSU_REFERENCE_ISS_ISSU5];

ALTER TABLE [dbo].[MD_Custodian] WITH CHECK CHECK CONSTRAINT [FK_inpRetId_FOREIGN_KEY];

ALTER TABLE [dbo].[MD_Custodian] WITH CHECK CHECK CONSTRAINT [FK_MD_Custodian_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_Custodian] WITH CHECK CHECK CONSTRAINT [FK_MD_Custodian_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[MD_Customer] WITH CHECK CHECK CONSTRAINT [FK_MD_CUSTO_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[MD_ItemCategory] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMC_REFERENCE_MD_ITEMC];

ALTER TABLE [dbo].[MD_ItemDiscon] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMD_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_ItemDiscon] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMD_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[MD_ItemDiscon] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMD_REFERENCE_PRD_BOMM];

ALTER TABLE [dbo].[MD_ItemKit] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMK_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_ItemKit] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMK_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[MD_ItemPackage] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMP_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_ItemRef] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMR_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_ItemRef] WITH CHECK CHECK CONSTRAINT [FK_MD_ITEMR_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[MD_Location] WITH CHECK CHECK CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[MD_LocationArea] WITH CHECK CHECK CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[MD_LocationBin] WITH CHECK CHECK CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[MD_LocationBin] WITH CHECK CHECK CONSTRAINT [FK_MD_LOCAT_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[MD_PartyAddr] WITH CHECK CHECK CONSTRAINT [FK_MD_PARTY_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[MD_PartyAddr] WITH CHECK CHECK CONSTRAINT [FK_MD_PARTY_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[MD_Region] WITH CHECK CHECK CONSTRAINT [FK_MD_REGIO_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[MD_SpecialTime] WITH CHECK CHECK CONSTRAINT [FK_MD_SPECI_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[MD_Supplier] WITH CHECK CHECK CONSTRAINT [FK_MD_SUPPL_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[MD_UomConv] WITH CHECK CHECK CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[MD_UomConv] WITH CHECK CHECK CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[MD_UomConv] WITH CHECK CHECK CONSTRAINT [FK_MD_UOMCO_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[MD_WorkCenter] WITH CHECK CHECK CONSTRAINT [FK_MD_WORKC_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[MD_WorkingCalendar] WITH CHECK CHECK CONSTRAINT [FK_MD_WORKI_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[ORD_ContOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_CONT_REFERENCE_INV_CONT];

ALTER TABLE [dbo].[ORD_ContOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_CONT_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[ORD_ContOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_CONT_REFERENCE_ORD_CONT];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_IpDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPDE_0_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet0_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet1_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet2_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet3_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet4_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet5_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet6_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet7_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_IpDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpDet8_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_BIL_ACTB];

ALTER TABLE [dbo].[ORD_IpLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[ORD_IpLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_IpLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPLO_0_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet0_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet1_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet2_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet3_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet4_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet5_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet6_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet7_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet8_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_IpLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_IpMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[ORD_IpMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[ORD_IpMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_IpMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_IPMS_0_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[ORD_IpMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr0_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr0_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr0_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr0_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr1_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr1_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr1_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr1_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr2_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr2_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr2_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr2_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr3_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr3_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr3_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr3_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr4_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr4_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr4_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr4_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr5_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr5_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr5_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr5_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr6_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr6_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr6_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr6_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr7_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr7_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr7_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr7_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr8_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr8_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_IpMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr8_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_IpMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_IpMstr8_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM3];

ALTER TABLE [dbo].[ORD_MiscOrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC2];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_BIL_ACTB];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_SUPPL];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC];

ALTER TABLE [dbo].[ORD_MiscOrderLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_ORD_MISC3];

ALTER TABLE [dbo].[ORD_MiscOrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_MiscOrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_MISC_REFERENCE_MD_REGIO2];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM3];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM4];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT4];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY5];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM5];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM6];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_BOMM3];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW4];

ALTER TABLE [dbo].[ORD_OrderBackflushDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PROD2];

ALTER TABLE [dbo].[ORD_OrderBinding] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[ORD_OrderBindingDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_ORD_ORDE10];

ALTER TABLE [dbo].[ORD_OrderBindingDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_ORD_ORDE14];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT10];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_UOM4];

ALTER TABLE [dbo].[ORD_OrderBomDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_BOMM2];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_CURRE];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_LOCAT6];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_LOCAT7];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_PARTY4];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_MD_UOM3];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_PRD_BOMM];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_PRD_ROUT];

ALTER TABLE [dbo].[ORD_OrderDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_0_REFERENCE_SCM_PICK];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet0_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet1_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet2_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet3_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet4_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet5_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet6_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet7_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Bom_REFERENCE_PRD_BomMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Container_REFERENCE_MD_Container_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderDet8_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_BIL_PRIC2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE3];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_ADDRE4];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_CURRE2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_PARTY3];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_ROUT2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_PRD_SHIF];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_FLOW2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PICK2];

ALTER TABLE [dbo].[ORD_OrderMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_SCM_PROD];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr0_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr1_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr2_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr3_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr4_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr5_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr6_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr7_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_BillAddr_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_Currency_REFERENCE_MD_Currency_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_Flow_REFERENCE_SCM_FlowMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_PickStrategy_REFERENCE_SCM_PickStrategy_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_PriceList_REFERENCE_BIL_PriceListMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_ProdLineFact_REFERENCE_SCM_ProdLineFact_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_Routing_REFERENCE_PRD_RoutingMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_Shift_REFERENCE_PRD_ShiftMstr_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_OrderMstr8_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_OrderOp] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[ORD_OrderOp] WITH CHECK CHECK CONSTRAINT [FK_ORD_ORDE_REFERENCE_MD_WORKC];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_INV_HU2];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_LOCAT4];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM3];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK2];

ALTER TABLE [dbo].[ORD_PickListDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_SCM_PICK];

ALTER TABLE [dbo].[ORD_PickListMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[ORD_PickListMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ADDRE3];

ALTER TABLE [dbo].[ORD_PickListMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[ORD_PickListMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_PARTY3];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_MD_UOM4];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK];

ALTER TABLE [dbo].[ORD_PickListResult] WITH CHECK CHECK CONSTRAINT [FK_ORD_PICK_REFERENCE_ORD_PICK3];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_RecDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECD_0_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet0_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet1_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet2_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet3_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet4_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet5_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet6_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet7_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_BaseUom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_LocFrom_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_LocTo_REFERENCE_MD_Location_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_ManufactureParty_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecDet8_Uom_REFERENCE_MD_Uom_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECL_0_REFERENCE_BIL_ACTB];

ALTER TABLE [dbo].[ORD_RecLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECL_0_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[ORD_RecLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECL_0_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_RecLocationDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECL_0_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet0_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet0_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet0_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet0_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet1_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet1_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet1_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet1_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet2_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet2_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet2_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet2_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet3_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet3_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet3_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet3_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet4_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet4_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet4_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet4_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet5_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet5_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet5_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet5_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet6_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet6_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet6_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet6_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet7_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet7_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet7_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet7_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet8_ActBill_REFERENCE_BIL_ActBill_Id];

ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet8_HuId_REFERENCE_INV_Hu_HuId];

ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet8_Item_REFERENCE_MD_Item_Code];

ALTER TABLE [dbo].[ORD_RecLocationDet_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecLocationDet8_PlanBill_REFERENCE_BIL_PlanBill_Id];

ALTER TABLE [dbo].[ORD_RecMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[ORD_RecMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[ORD_RecMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_RecMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_RECM_0_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[ORD_RecMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr0_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr0_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr0_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_0] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr0_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr1_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr1_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr1_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_1] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr1_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr2_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr2_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr2_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_2] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr2_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr3_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr3_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr3_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_3] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr3_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr4_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr4_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr4_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_4] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr4_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr5_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr5_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr5_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_5] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr5_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr6_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr6_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr6_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_6] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr6_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr7_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr7_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr7_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_7] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr7_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr8_PartyFrom_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr8_PartyTo_REFERENCE_MD_Party_Code];

ALTER TABLE [dbo].[ORD_RecMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr8_ShipFrom_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_RecMstr_8] WITH CHECK CHECK CONSTRAINT [FK_ORD_RecMstr8_ShipTo_REFERENCE_MD_Address_Code];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_INV_HU];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[ORD_SeqDet] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQD_REFERENCE_ORD_SEQM];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[ORD_SeqMstr] WITH CHECK CHECK CONSTRAINT [FK_ORD_SEQM_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[PRD_BomDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[PRD_BomDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[PRD_BomDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMD_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[PRD_BomDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMD_REFERENCE_PRD_BFST];

ALTER TABLE [dbo].[PRD_BomDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMD_REFERENCE_PRD_BOMM];

ALTER TABLE [dbo].[PRD_BomMstr] WITH CHECK CHECK CONSTRAINT [FK_PRD_BOMM_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[PRD_MultiSupplyGroup] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL];

ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL3];

ALTER TABLE [dbo].[PRD_MultiSupplyItem] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_PRD_MULT2];

ALTER TABLE [dbo].[PRD_MultiSupplySupplier] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_MD_SUPPL2];

ALTER TABLE [dbo].[PRD_MultiSupplySupplier] WITH CHECK CHECK CONSTRAINT [FK_PRD_MULT_REFERENCE_PRD_MULT];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_ITEM2];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_PARTY];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_ORD_ORDE];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_PRD_BOMM];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[PRD_PlanBackflush] WITH CHECK CHECK CONSTRAINT [FK_PRD_PLAN_REFERENCE_SCM_PROD];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_BIL_PLAN];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_INV_HU];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[PRD_ProdLineLocationDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_PROD];

ALTER TABLE [dbo].[PRD_ProdLineWorkCenter] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_MD_WORKC];

ALTER TABLE [dbo].[PRD_ProdLineWorkCenter] WITH CHECK CHECK CONSTRAINT [FK_PRD_PROD_REFERENCE_SCM_FLOW2];

ALTER TABLE [dbo].[PRD_RoutingDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_ROUT_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[PRD_RoutingDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_ROUT_REFERENCE_MD_WORKC];

ALTER TABLE [dbo].[PRD_RoutingDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_ROUT_REFERENCE_PRD_ROUT];

ALTER TABLE [dbo].[PRD_ShiftDet] WITH CHECK CHECK CONSTRAINT [FK_PRD_SHIF_REFERENCE_PRD_SHIF];

ALTER TABLE [dbo].[PRD_StandardWorkingCalendar] WITH CHECK CHECK CONSTRAINT [FK_PRD_STAN_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[PRD_StandardWorkingCalendar] WITH CHECK CHECK CONSTRAINT [FK_PRD_STAN_REFERENCE_PRD_SHIF];

ALTER TABLE [dbo].[PRD_WorkingCalendar] WITH CHECK CHECK CONSTRAINT [FK_PRD_WORK_REFERENCE_MD_REGIO];

ALTER TABLE [dbo].[PRD_WorkingCalendar] WITH CHECK CHECK CONSTRAINT [FK_PRD_WORKingCalendar_REFERENCE_PRD_SHIFMSTR_CODE];

ALTER TABLE [dbo].[PRD_WorkingShift] WITH CHECK CHECK CONSTRAINT [FK_PRD_WORK_REFERENCE_MD_WORKI];

ALTER TABLE [dbo].[PRD_WorkingShift] WITH CHECK CHECK CONSTRAINT [FK_PRD_WORK_REFERENCE_PRD_SHIF];

ALTER TABLE [dbo].[SCM_FlowBinding] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW2];

ALTER TABLE [dbo].[SCM_FlowBinding] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW6];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_BIL_PRIC];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_INP_PROD];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_CONTA];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ITEM];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT8];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT9];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_UOM];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_UOM2];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_BOMM];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT4];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW4];

ALTER TABLE [dbo].[SCM_FlowDet] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_PICK];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_BIL_PRIC2];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE2];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE3];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_ADDRE4];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_PARTY2];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_MD_PARTY3];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT2];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_PRD_ROUT3];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW3];

ALTER TABLE [dbo].[SCM_FlowMstr] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_PICK2];

ALTER TABLE [dbo].[SCM_FlowStrategy] WITH CHECK CHECK CONSTRAINT [FK_SCM_FLOW_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[SCM_ProdLineFact] WITH CHECK CHECK CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT];

ALTER TABLE [dbo].[SCM_ProdLineFact] WITH CHECK CHECK CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT2];

ALTER TABLE [dbo].[SCM_ProdLineFact] WITH CHECK CHECK CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT3];

ALTER TABLE [dbo].[SCM_ProdLineFact] WITH CHECK CHECK CONSTRAINT [FK_SCM_PROD_REFERENCE_MD_LOCAT4];

ALTER TABLE [dbo].[SCM_ProdLineFact] WITH CHECK CHECK CONSTRAINT [FK_SCM_PROD_REFERENCE_SCM_FLOW];

ALTER TABLE [dbo].[SYS_CodeDet] WITH CHECK CHECK CONSTRAINT [FK_SYS_CODE_REFERENCE_SYS_CODE];

ALTER TABLE [dbo].[SYS_SNRuleExt] WITH CHECK CHECK CONSTRAINT [FK_SYS_SNRU_REFERENCE_SYS_SNRU];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        DECLARE @VarDecimalSupported AS BIT;
        SELECT @VarDecimalSupported = 0;
        IF ((ServerProperty(N'EngineEdition') = 3)
            AND (((@@microsoftversion / power(2, 24) = 9)
                  AND (@@microsoftversion & 0xffff >= 3024))
                 OR ((@@microsoftversion / power(2, 24) = 10)
                     AND (@@microsoftversion & 0xffff >= 1600))))
            SELECT @VarDecimalSupported = 1;
        IF (@VarDecimalSupported > 0)
            BEGIN
                EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
            END
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
