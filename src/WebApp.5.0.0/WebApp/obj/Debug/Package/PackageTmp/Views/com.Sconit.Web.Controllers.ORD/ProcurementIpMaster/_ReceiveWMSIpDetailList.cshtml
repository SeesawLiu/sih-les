@model IEnumerable<com.Sconit.Entity.FIS.WMSDatFile>
<fieldset>

<script type="text/javascript">

    function OnHuQtyBlur(e) {
//        $("#successesul").html('');
//        $("#errorsul").html("");
        if (e.value != "") {
            if (parseInt(e.value) < 0 || isNaN(e.value)) {
                
                $(e).val('');
//                $("#successesul").html('');
                //                $("#errorsul").html("本次收货数只能为大于0的数字。");
                alert("本次收货数只能为大于0的数字。");
            }
            else {
                if (parseFloat($(e).parent().prev().prev().prev().prev().text()) < parseFloat(e.value)) {
                    $(e).val('');
                    $("#successesul").html('');
                    alert("本次收货数不能大于本次发货数。");
                }
                
            }
        }
    }

</script>
    @(Html.Telerik().Grid(Model)
        .Name("WmsIpDetail")
        .DataKeys(keys =>
        {
            keys.Add(p => p.Id);
        })
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Hidden();
                //.ClientTemplate(string.Format("<input type='text' id='Id' name='Id' style='display:none' value='<#=Id #>'/>"));
            //columns.Bound(o => o.WMSId);
            //columns.Bound(o => o.WmsLine);
            columns.Bound(o => o.WmsNo);
            columns.Bound(o => o.WMSId);
            columns.Bound(o => o.MoveType);
            columns.Bound(o => o.Item);
            columns.Bound(o => o.ReferenceItemCode);
            columns.Bound(o => o.ItemDescription);
            columns.Bound(o => o.OrderQty);
            columns.Bound(o => o.Qty);
            columns.Bound(o => o.ReceiveTotal);
            columns.Bound(o => o.CancelQty);
            columns.Bound(o => o.CurrentReceiveQty);
            columns.Bound(o => o.Uom);
            columns.Bound(o => o.UMLGO);

               // .ClientTemplate(string.Format("<input type='text' id='CurrentReceiveQty' name='CurrentReceiveQty' style='width:70px' value='<#=Qty #>'/>"));
            
        })
            .CellAction(cell =>
            {
                if (cell.Column.Member == "Id")
                {
                    cell.Text = string.Format("<input type='text' id='Id' name='Id' style='display:none' value='" + cell.DataItem.Id + "'/>");
                }
                if (cell.Column.Member == "CurrentReceiveQty")
                {
                    cell.Text = string.Format("<input type='text' id='CurrentReceiveQty' onblur='OnHuQtyBlur(this)' name='CurrentReceiveQty' style='width:70px'  value='" + (cell.DataItem.Qty+cell.DataItem.CancelQty-cell.DataItem.ReceiveTotal).ToString("f2") + "'/>");
                }
            })
            // .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxLocationBinList", "Location"))
                      //  .ClientEvents(events => events.OnDataBinding("LocationBinGrid_OnDataBinding"))
        .Scrollable(c => c.Enabled(false))
               // .Sortable()
                .Resizable(resizing => resizing.Columns(true))
                .Footer(false)
    )
</fieldset>
